<html>
<head>
<meta http-equiv=Content-Type content="text/html; charset=windows-1251">
<title>ОП | Вопросы теста 42</title>
<link rel=stylesheet type=text/css href=lec.css>
</head>
<body>
<table cellpadding=0 cellspacing=0>
<tr id=top><td colspan=5>
<center>
<a id=top href=../plan_2.htm>Календарно-тематический план &nbsp &nbsp </a>
</center>
</td></tr>
<tr>
<td class=bok></td>
<td class=bok1></td>
<td>
<p id=head>Вопросы тестирования по теме:
<br>Одномерные и двумерные числовые и символьные массивы</p>
<p id=head1>Сформулировать определения</p>
<ol>
<p><li>Массив
<p><li>Многомерный массив 
<p><li>Указатель
<p><li>Класс памяти
<p><li>Определение одномерного массива имеет вид
<p><li>Первый элемент массива
<p><li>Последний элемент массива
<p><li>Объем памяти (в байтах) для массива тип имя [N] равен
<p><li>Определение многомерного массива
<p><li>Определение и описание указателя-переменной
<p><li>Автоматические переменные
<p><li>Внешние переменные
<p><li>Статические переменные
<p><li>Внешние статические переменные
<p><li>Регистровые переменные
<p><li>Определение и инициализация одномерного массива, содержащего целочисленные значения
<p><li>Определение указателей на объекты целочисленного типа
<p><li>Определение и инициализация символьной переменной типа char
<p><li>Инициализированный указатель на объект типа char
<p><li>Неинициализированный указатель на объект типа char
</ol>
<p id=head1>Что делает функция</p>
<ol>
<p><li>int rand(void)
<p><li>void srand(unsigned int seed)
<p><li>int random(int num)
<p><li>void randomize(void)
</ol>
<p id=head1>Что будет выведено на экран после исполнения строк программы</p>
<ol>
<p><li>
<pre>	int mas[10];
	enum mit {y1 = 5, y2, y3 = 2, y4};
	mas[y4] = y2;
	printf("mas[%d] = %d\n", y4, mas[y4]);
</pre>
<p><li>
<pre>	int mas[10];
	enum mit {y1 = 5, y2, y3 = 2, y4};
	mas[y2] = y4;
	printf("mas[%d] = %d\n", y2, mas[y2]);
</pre>
<p><li>
<pre>	int mas[10];
	enum mit {y1 = 5, y2, y3 = 2, y4};
	mas[y1] = y3;
	printf("mas[%d] = %d\n", y1, mas[y1]); 
</pre>
<p><li>
<pre>	int mas[10];
	enum mit {y1 = 5, y2, y3 = 2, y4};
	mas[y3] = y1;
	printf("mas[%d] = %d\n", y3, mas[y3]); 
</pre>
<p><li>
<pre>	int i, s[10];
	enum mit {z1, z2, z3, z4, z5, z6};
	s[0] = z2; s[1] = z1; s[2] = z6; s[3] = z5; s[4] = z3; s[5] = z4;
	for(i = 0; i < 6; i++)
		printf("%d ", s[i]);
</pre>
<p><li>
<pre>	int i, s[10];
	enum mit {z1 = 2, z2, z3, z4, z5 = 0, z6};
	s[0] = z2; s[1] = z1; s[2] = z6; s[3] = z5; s[4] = z3; s[5] = z4;
	for(i = 0; i < 6; i++)
		printf("%d ", s[i]);
</pre>
<p><li>
<pre>	int i, s[10];
	enum mit {z1 = 6, z2, z3 = 0, z4, z5, z6};
	s[0] = z2; s[1] = z1; s[2] = z6; s[3] = z5; s[4] = z3; s[5] = z4;
	for(i = 0; i < 6; i++)
		printf("%d ", s[i]);
</pre>
<p><li>
<pre>	int i, s[10];
	enum mit {z1, z2 = 0, z3, z4 = 0, z5, z6};
	s[0] = z2; s[1] = z1; s[2] = z6; s[3] = z5; s[4] = z3; s[5] = z4;
	for(i = 0; i < 6; i++)
		printf("%d ", s[i]);
</pre>
<p><li>
<pre>	int i, mas[10]; 
	for(i = 3; i < 10; i += 2)
	{
		mas[i] = i - 3; printf("%d ", mas[i]);
	}
</pre>
<p><li>
<pre>	int i, mas[10];
	for(i = 1; i <= 8; i *= 2) 
	{
		mas[i] = i * 2; printf("%d ", mas[i]);
	}
</pre>
<p><li>
<pre>	int i, mas[10];
	for(i = 9; i > 0; i -= 2)
	{
		mas[i] = i / 2; printf("%d ", mas[i]);
	}
</pre>
<p><li>
<pre>	int i, mas[10];
	for(i = 9; i > 0; i -= 2)
	{
		mas[i] = i % 2; printf("%d ", mas[i]);
	}
</pre>
<p><li>
<pre>	int i = 7, mas[10];
	do
	{
		mas[i] = i % 2; printf("%d ", mas[i]);
		i--;
	} while(i != 2);
</pre>
<p><li>
<pre>	int i = 2, mas[10]; 
	do
	{ 
		mas[i] = i; printf("%d ", mas[i]);
		i += ++i;
	} while(i <= 29);
</pre>
<p><li>
<pre>	int i = 0, mas[10]; 
	do
	{
		mas[i] = 2 * i + 3; printf("%d ", mas[i]);
		i++;
	} while(i != 4);
</pre>
<p><li>
<pre>	int i = -1, mas[10]; 
	do
	{ 
		i++;
		mas[i] = i + 2; printf("%d ", mas[i]);
	} while(i != 3);
</pre>
<p><li>
<pre>	int i = 7, mas[10]; 
	while(i <= 16)
	{
		mas[i] = i % 3; printf("%d ", mas[i]);
		i += 2;
	}
</pre>
<p><li>
<pre>	int i = 17, mas[10]; 
	while(i >= 13)
	{
		mas[i] = i / 3; printf("%d ", mas[i]);
		i--;
	}
</pre>
<p><li>
<pre>	int i = 0, mas[10]; 
	while(i != 6)
	{
		mas[i] = 0.5 * i; printf("%d ", mas[i]);
		i += 2 + i;
	}
</pre>
<p><li>
<pre>	int i = 1, mas[10]; 
	while(i <= 5)
	{
		mas[i] = i / 3 + 1; printf("%d ", mas[i]);
		i++;
	}
</pre>
<p><li>
<pre>	int ss[10] = {8, 0, -9, 1, 6, 2, 7, 3, -1, 4};
	int i, k = 0, m = ss[k];
	for(i = 0; i < 10; i++)
		if(ss[i] < m)
		{
			m = ss[i]; k = i;
		}
	printf("%d %d ", k, m);
	for(i = 3; i < 10; i++)
		printf("%d ", ss[i]);
</pre>
<p><li>
<pre>	int ss[10] = {8, 0, -9, 1, 6, 2, 7, 3, -1, 4};
	int i, k = 0, m = ss[k];
	for(i = 0; i < 10; i++)
		if(ss[i] > m)
		{
			m = ss[i]; k = i;
		}
	printf("%d %d ", k, m);
	for(i = 5; i < 10; i++)
		printf("%d ", ss[i]);
</pre>
<p><li>
<pre>	int ss[10] = {8, 0, -9, 1, 6, 2, 7, 3, -1, 4};
	int i, k = 0;
	for(i = 0; i < 10; i++)
		if((ss[i] % 2) != 0)
		{
			k++; printf("%d ", ss[i]);
		}
	printf("%d ", k);
</pre>
<p><li>
<pre>	int ss[10] = {8, 0, -9, 1, 6, 2, 7, 3, -1, 4};
	int i, k = 0;
	for(i = 0; i < 10; i++)
		if(ss[i] != 0)
		{
			k += ss[i]; printf("%d ", ss[i]);
		}
	printf("%d ", k);
</pre>
<p><li>
<pre>	int ss[10] = {8, 0, -9, 1, 6, 2, 7, 3, -1, 4};
	int i, k = 0;
	for(i = 0; i < 10; i++)
		if((ss[i] % 2) == 0 && ss[i] != 0)
		{
			k ++; printf("%d ", ss[i]);
		}
	printf("%d ", k);
</pre>
<p><li>
<pre>	int ss[10] = {8, 0, -9, 1, 6, 2, 7, 3, -1, 4};
	int i, k = 1;
	for(i = 0; i < 10; i++)
		if(ss[i] < 0)
		{
			k *= ss[i]; printf("%d ", ss[i]);
		}
	printf("%d ", k);
</pre>
<p><li>
<pre>	int ss[10] = {8, 0, -9, 1, 6, 2, 7, 3, -1, 4};
	int i, k, m;
	for(i = 0; i < 9; i++)
		for(k = i + 1; k < 10; k++)
			if(ss[i] < ss[k])
			{
				m = ss[i]; ss[i] = ss[k]; ss[k] = m;
			}
	for(i = 0; i < 10; i++)
		printf("%d ", ss[i]);
</pre>
<p><li>
<pre>	int ss[10] = {8, 0, -9, 1, 6, 2, 7, 3, -1, 4};
	int i, k, m;
	for(i = 0; i < 9; i++)
		for(k = i + 1; k < 10; k++)
			if(ss[i] > ss[k])
			{
				m = ss[i]; ss[i] = ss[k]; ss[k] = m;
			}
	for(i = 0; i < 10; i++)
		printf("%d ", ss[i]);
</pre>
<p><li>
<pre>	int ss[10] = {7, -9, 5, 0, -2, 1, 3, -8, 0, 2};
	int i, k = 0;
	for(i = 0; i < 10; i++)
		if(ss[i] > 0)
		{
			k++; printf("%d ", ss[i]);
		}
	printf("%d ", k);
</pre>
<p><li>
<pre>	int ss[10] = {7, -9, 5, 0, -2, 1, 3, -8, 0, 2};
	int i, k = 0;
	for(i = 0; i < 10; i++)
		if(ss[i] < 0)
		{
			k++; printf("%d ", ss[i]);
		}
	printf("%d ", k);
</pre>
<p><li>
<pre>	int ss[10] = {7, -9, 5, 0, -2, 1, 3, -8, 0, 2};
	int i, k = 0;
	for(i = 0; i < 10; i++)
		if(ss[i] == 0)
		{
			k++; printf("%d ", ss[i]);
		}
	printf("%d ", k);
</pre>
<p><li>
<pre>	int ss[10] = {7, -9, 5, 0, -2, 1, 3, -8, 0, 2};
	int i, k = 0;
	for(i = 0; i < 10; i++)
		if(ss[i] != 0)
		{
			k++; printf("%d ", ss[i]);
		}
	printf("%d ", k);
</pre>
<p><li>
<pre>	int ss[10] = {7, -9, 5, 0, -2, 1, 3, -8, 0, 2};
	int i, k = 0;
	for(i = 0; i < 10; i++)
		if((ss[i] % 2) == 0 && ss[i] != 0)
		{
			k++; printf("%d ", ss[i]);
		}
	printf("%d ", k);
</pre>
<p><li>
<pre>	int ss[10] = {7, -9, 5, 0, -2, 1, 3, -8, 0, 2};
	int i, k = 0;
	for(i = 0; i < 10; i++)
		if((ss[i] % 2) != 0)
		{
			k++; printf("%d ", ss[i]);
		}
	printf("%d ", k);
</pre>
<p><li>
<pre>	int ss[10] = {7, -9, 5, 0, -2, 1, 3, -8, 0, 2};
	int i, k = 0;
	for(i = 0; i < 10; i++)
		if(ss[i] != 0)
		{
			k += ss[i]; printf("%d ", ss[i]);
		}
	printf("%d ", k);
</pre>
<p><li>
<pre>	int ss[10] = {7, -9, 5, 0, -2, 1, 3, -8, 0, 2};
	int i, k = 1;
	for(i = 0; i < 10; i++)
		if(ss[i] > 0)
		{
			k *= ss[i]; printf("%d ", ss[i]);
		}
	printf("%d ", k);
</pre>
<p><li>
<pre>	int ss[10] = {7, -9, 5, 0, -2, 1, 3, -8, 0, 2};
	int i, k = 1;
	for(i = 0; i < 10; i++)
		if(ss[i] < 0)
		{
			k *= ss[i]; printf("%d ", ss[i]);
		}
	printf("%d ", k);
</pre>
<p><li>
<pre>	int ss[10] = {7, -9, 5, 0, -2, 1, 3, -8, 0, 2};
	int i, k, m;
	for(i = 0; i < 9; i++)
		for(k = i + 1; k < 10; k++)
			if(ss[i] < ss[k])
			{
				m = ss[i]; ss[i] = ss[k]; ss[k] = m;
			}
	for(i = 0; i < 10; i++)
		printf("%d ", ss[i]);
</pre>
<p><li>
<pre>	int ss[10] = {7, -9, 5, 0, -2, 1, 3, -8, 0, 2};
	int i, k, m;
	for(i = 0; i < 9; i++)
		for(k = i + 1; k < 10; k++)
			if(ss[i] > ss[k])
			{
				m = ss[i]; ss[i] = ss[k]; ss[k] = m;
			}
	for(i = 0; i < 10; i++)
		printf("%d ", ss[i]);
</pre>
<p><li>
<pre>	int i, ss[10] = { -2, 6, 8, -1, 4 };
	for(i = 0; i < 10; i++)
		cout << ss[i] << ' ';
</pre>
<p><li>
<pre>	int i, n = 0, ss[10] = { -2, 6, 8, -1, 4 };
	for(i = 0; i < 10; i++)
	{	if(ss[i] == 0)
		{
			n++; cout << ss[i] << ' ';
		}
	} cout << n;
</pre>
<p><li>
<pre>	int i, j = 0, ss[10] = { -2, 6, 8, -1, 4 }, n = ss[0];
	for(i = 1; i < 10; i++)
	{	if(ss[i] < n)
		{
			j = i; n = ss[i];
		}
	} cout << n << ' ' << j;
</pre>
<p><li>
<pre>	int i, j = 0, ss[10] = { -2, 6, 8, -1, 4 }, n = ss[0];
	for(i = 1; i < 10; i++)
	{	if(ss[i] > n)
		{
			j = i; n = ss[i];
		}
	} cout << n << ' ' << j;
</pre>
<p><li>
<pre>	int i, ss[10] = { -2, 6, 8, -1, 4 };
	for(i = 0; i < 10; i++)
	{	if(ss[i] > 0)
			cout << ss[i] << ' ' << i << ' ';
	}
</pre>
<p><li>
<pre>	int i, ss[10] = { -2, 6, 8, -1, 4 };
	for(i = 0; i < 10; i++)
	{	if(ss[i] < 0)
			cout << i << ' ' << ss[i] << ' ';
	}
</pre>
<p><li>
<pre>	int i, ss[10] = { -2, 6, 8, -1, 4 };
	for(i = 0; i < 10; i++)
	{	if(ss[i] == 0)
			cout << i << ' ' << ss[i] << ' ';
	}
</pre>
<p><li>
<pre>	int i, ss[10] = { -2, 6, 8, -1, 4 }, n = ss[5];
	for(i = 0; i < 10; i++)
	{	if(ss[i] > n)
			cout << i << ' ';
	}
</pre>
<p><li>
<pre>	int i, ss[10] = { -2, 6, 8, -1, 4 }, n = ss[5];
	for(i = 0; i < 10; i++)
	{	if(ss[i] < n)
			cout << i << ' ';
	}
</pre>
<p><li>
<pre>	int i, j = 0, n = 0, ss[10] = { -2, 6, 8, -1, 4 };
	for(i = 0; i < 10; i++)
	{	if(ss[i] < 0)
		{
			n += ss[i]; j++; cout << ss[i] << ' ';
		}
	} cout << n << ' ' << j;
</pre>
<p><li>
<pre>	int i, j = 0, n = 0, ss[10] = { -2, 6, 8, -1, 4 };
	for(i = 0; i < 10; i++)
	{	if(ss[i] > 0)
		{
			n += ss[i]; j++; cout << ss[i] << ' ';
		}
	} cout << n << ' ' << j;
</pre>
<p><li>
<pre>	int i, j = 0, n = 1, ss[10] = { -2, 6, 8, -1, 4 };
	for(i = 1; i < 10; i +=2 )
	{	if(ss[i] != 0)
		{
			n *= ss[i]; j++; cout << ss[i] << ' ';
		}
	} cout << n << ' ' << j;
</pre>
<p><li>
<pre>	int i, j = 0, n = 1, ss[10] = { -2, 6, 8, -1, 4 };
	for(i = 2; i < 10; i +=2 )
	{	if(ss[i] != 0)
		{
			n *= ss[i]; j++; cout << ss[i] << ' ';
		}
	} cout << n << ' ' << j;
</pre>
<p><li>
<pre>	int i, j = 0, n = 0, ss[10] = { -2, 6, 8, -1, 4 };
	for(i = 0; i < 10; i++)
	{	if((ss[i] % 2) == 0 && ss[i] != 0)
		{
			n += ss[i]; j++; cout << ss[i] << ' ';
		}
	} cout << n << ' ' << j;
</pre>
<p><li>
<pre>	int i, j = 0, n = 1, ss[10] = { -2, 6, 8, -1, 4 };
	for(i = 0; i < 10; i++)
	{	if((ss[i] % 2) != 0)
		{
			n *= ss[i]; j++; cout << ss[i] << ' ';
		}
	} cout << n << ' ' << j;
</pre>
<p><li>
<pre>	int i, j = 0, ss[10] = { -2, 6, 8, -1, 4 };
	for(i = 0; i < 10; i++)
	{	if(ss[i] < 0)
		{
			j++; cout << -ss[i] << ' ' << i << ' ';
		}
	} cout << j;
</pre>
<p><li>
<pre>	int i, j = 0, ss[10] = { -2, 6, 8, -1, 4 };
	for(i = 0; i < 10; i++)
	{	if(ss[i] > 0)
		{
			j++; cout << -ss[i] << ' ' << i << ' ';
		}
	} cout << j;
</pre>
<p><li>
<pre>	int i, j = 0, ss[10] = { -2, 6, 8, -1, 4 };
	for(i = 0; i < 10; i++)
	{	if(ss[i] > 0)
		{
			j++; ss[i] = i;
		}
		cout << ss[i] << ' ';
	} cout << j;
</pre>
<p><li>
<pre>	int i, j = 0, ss[10] = { -2, 6, 8, -1, 4 };
	for(i = 0; i < 10; i++)
	{	if(ss[i] < 0)
		{
			j++; ss[i] = i;
		}
		cout << ss[i] << ' ';
	} cout << j;
</pre>
<p><li>
<pre>	int i, j = 0, ss[10] = { -2, 6, 8, -1, 4 };
	for(i = 0; i < 10; i++)
	{	if(ss[i] == 0)
		{
			j++; ss[i] = i;
		}
		cout << ss[i] << ' ';
	} cout << j;
</pre>
<p><li>
<pre>	int ss[3][3] = { {2, 0, 4}, {4, 0, 0}, {3, 3, 3} };
	int s = 0, i, j;
	for(i = 0; i < 3; i++)
		for(j = 0; j < 3; j++)
			s += ss[i][j];
	printf("%d ", s);
</pre>
<p><li>
<pre>	int ss[3][3] = { {2, 3, 1}, {2, 0, 0}, {0, 2, 2} };
	int s = 1, i, j;
	for(i = 0; i < 3; i++)
		for(j = 0; j < 3; j++)
			if(ss[i][j] > 0)
				s *= ss[i][j];
	printf("%d ", s);
</pre>
<p><li>
<pre>	int ss[3][3] = { {3, 7, 0}, {8, 5, 0}, {0, 7, 3} };
	int s = 0, i, j;
	for(i = 0; i < 3; i++)
	{	for(j = 0; j < 3; j++)
			if (i == j)
				s += ss[i][j];
	}
	printf("%d ", s);
</pre>
<p><li>
<pre>	int ss[3][3] = { {2, 3, 4}, {2, 3, 2}, {1, 6, 5} };
	int s = 1, i, j;
	for(i = 0; i < 3; i++)
	{	for(j = 0; j < 3; j++)
			if (i == j)
				s *= ss[i][j];
	}
	printf("%d ", s);
</pre>
<p><li>
<pre>	int ss[3][3] = { {2, 3, 7}, {6, 2, 5}, {6, 8, 1} };
	int s = 1, i, j;
	for(i = 0; i < 3; i++)
	{	for(j = 0; j < 3; j++)
			if (i + j == 2)
				s *= ss[i][j];
	}
	printf("%d ", s);
</pre>
<p><li>
<pre>	int ss[3][3] = { {17, 0, 16}, {1, 5, 2}, {6, 13, 17} };
	int s = 0, i, j;
	for(i = 0; i < 3; i++)
	{	for(j = 0; j < 3; j++)
			if (i + j == 2)
				s += ss[i][j];
	}
	printf("%d ", s);
</pre>
<p><li>
<pre>	int ss[3][3] = { {1, 3, 1}, {2, 3, 2}, {4, 3, 1} };
	int s = 0, i, j;
	for(i = 0; i < 3; i++)
		for(j = 0; j < 3; j++)
			s += ss[i][j];
	printf("%d ", s);
</pre>
<p><li>
<pre>	int ss[3][3] = { {0, 3, 1}, {3, 3, 0}, {2, 3, 1} };
	int s = 1, i, j;
	for(i = 0; i < 3; i++)
		for(j = 0; j < 3; j++)
			if(ss[i][j] > 0)
				s *= ss[i][j];
	printf("%d ", s);
</pre>
<p><li>
<pre>	int ss[3][3] = { {1, 2, 4}, {6, 2, 7}, {1, 0, 6} };
	int s = 0, i, j;
	for(i = 0; i < 3; i++)
	{	for(j = 0; j < 3; j++)
			if (i == j)
				s += ss[i][j];
	}
	printf("%d ", s);
</pre>
<p><li>
<pre>	int ss[3][3] = { {3, 7, 5}, {4, 7, 3}, {3, 1, 6} };
	int s = 1, i, j;
	for(i = 0; i < 3; i++)
	{	for(j = 0; j < 3; j++)
			if (i == j)
				s *= ss[i][j];
	}
	printf("%d ", s);
</pre>
<p><li>
<pre>	int ss[3][3] = { {0, 0, 6}, {3, 2, 5}, {8, 4, 7} };
	int s = 1, i, j;
	for(i = 0; i < 3; i++)
	{	for(j = 0; j < 3; j++)
			if (i + j == 2)
				s *= ss[i][j];
	}
	printf("%d ", s);
</pre>
<p><li>
<pre>	int ss[3][3] = { {13, 4, 8}, {17, 13, 10}, {2, 13, 9} };
	int s = 0, i, j;
	for(i = 0; i < 3; i++)
	{	for(j = 0; j < 3; j++)
			if (i + j == 2)
				s += ss[i][j];
	}
	printf("%d ", s);
</pre>
<p><li>
<pre>	int ss[3][3] = { {4, 6, 7}, {6, 8, 8}, {9, 4, 7} };
	int s, i, j;
	for(i = 0; i < 3; i++)
	{	s = 0;
		for(j = 0; j < 3; j++)
			s += ss[i][j];
		printf("%d ", s);
	}
</pre>
<p><li>
<pre>	int ss[3][3] = { {7, 1, 7}, {7, 2, 7}, {3, 7, 5} };
	int s, i, j;
	for(i = 0; i < 3; i++)
	{	s = 1;
		for(j = 0; j < 3; j++)
			s *= ss[i][j];
		printf("%d ", s);
	}
</pre>
<p><li>
<pre>	int ss[3][3] = { {0, 3, 5}, {1, 1, 5}, {2, 5, 1} };
	int s, i, j;
	for(i = 0; i < 3; i++)
	{	s = 1;
		for(j = 0; j < 3; j++)
			s *= ss[j][i];
		printf("%d ", s);
	}
</pre>
<p><li>
<pre>	int ss[3][3] = { {7, 6, 13}, {3, 3, 10}, {14, 7, 3} };
	int s, i, j;
	for(i = 0; i < 3; i++)
	{	s = 0;
		for(j = 0; j < 3; j++)
			s += ss[j][i];
		printf("%d ", s);
	}
</pre>
<p><li>
<pre>	int ss[3][3] = { {23, 27, 39}, {8, 36, 12}, {22, 3, 22} };
	int s, i, j;
	for(i = 0; i < 3; i++)
	{	s = ss[i][0];
		for(j = 0; j < 3; j++)
			if(ss[i][j] < s)
				s = ss[i][j];
		printf("%d ", s);
	}
</pre>
<p><li>
<pre>	int ss[3][3] = { {33, 40, 39}, {12, 21, 45}, {12, 37, 9} };
	int s, i, j;
	for(i = 0; i < 3; i++)
	{	s = ss[0][i];
		for(j = 0; j < 3; j++)
			if(ss[j][i] < s)
				s = ss[j][i];
		printf("%d ", s);
	}
</pre>
<p><li>
<pre>	int ss[3][3] = { {14, 13, 50}, {18, 39, 43}, {3, 40, 45} };
	int s, i, j;
	for(i = 0; i < 3; i++)
	{	s = ss[i][0];
		for(j = 0; j < 3; j++)
			if(ss[i][j] > s)
				s = ss[i][j];
		printf("%d ", s);
	}
</pre>
<p><li>
<pre>	int ss[3][3] = { {52, 23, 54}, {32, 49, 8}, {7, 17, 44} };
	int s, i, j;
	for(i = 0; i < 3; i++)
	{	s = ss[0][i];
		for(j = 0; j < 3; j++)
			if(ss[j][i] > s)
				s = ss[j][i];
		printf("%d ", s);
	}
</pre>
<p><li>
<pre>	int ss[3][3] = { {6, 6, 3}, {6, 8, 7}, {9, 7, 2} };
	int s, i, j;
	for(i = 0; i < 3; i++)
	{	s = 0;
		for(j = 0; j < 3; j++)
			s += ss[i][j];
		printf("%d ", s);
	}
</pre>
<p><li>
<pre>	int ss[3][3] = { {6, 1, 4}, {1, 3, 6}, {4, 0, 5} };
	int s, i, j;
	for(i = 0; i < 3; i++)
	{	s = 1;
		for(j = 0; j < 3; j++)
			s *= ss[i][j];
		printf("%d ", s);
	}
</pre>
<p><li>
<pre>	int ss[3][3] = { {3, 1, 0}, {5, 5, 5}, {5, 4, 3} };
	int s, i, j;
	for(i = 0; i < 3; i++)
	{	s = 1;
		for(j = 0; j < 3; j++)
			s *= ss[j][i];
		printf("%d ", s);
	}
</pre>
<p><li>
<pre>	int ss[3][3] = { {17, 19, 12}, {12, 13, 10}, {17, 6, 3} };
	int s, i, j;
	for(i = 0; i < 3; i++)
	{	s = 0;
		for(j = 0; j < 3; j++)
			s += ss[j][i];
		printf("%d ", s);
	}
</pre>
<p><li>
<pre>	int ss[3][3] = { {2, 22, 11}, {13, 13, 4}, {16, 28, 17} };
	int s, i, j;
	for(i = 0; i < 3; i++)
	{	s = ss[i][0];
		for(j = 0; j < 3; j++)
			if(ss[i][j] < s)
				s = ss[i][j];
		printf("%d ", s);
	}
</pre>
<p><li>
<pre>	int ss[3][3] = { {18, 14, 13}, {21, 23, 3}, {6, 15, 7} };
	int s, i, j;
	for(i = 0; i < 3; i++)
	{	s = ss[0][i];
		for(j = 0; j < 3; j++)
			if(ss[j][i] < s)
				s = ss[j][i];
		printf("%d ", s);
	}
</pre>
<p><li>
<pre>	int ss[3][3] = { {26, 12, 3}, {18, 8, 9}, {20, 13, 4} };
	int s, i, j;
	for(i = 0; i < 3; i++)
	{	s = ss[i][0];
		for(j = 0; j < 3; j++)
			if(ss[i][j] > s)
				s = ss[i][j];
		printf("%d ", s);
	}
</pre>
<p><li>
<pre>	int ss[3][3] = { {1, 16, 25}, {28, 30, 21}, {8, 13, 4} };
	int s, i, j;
	for(i = 0; i < 3; i++)
	{	s = ss[0][i];
		for(j = 0; j < 3; j++)
			if(ss[j][i] > s)
				s = ss[j][i];
		printf("%d ", s);
	}
</pre>
<p><li>
<pre>	char atl[50] = "Люди нас ждут", str[50] = "Горы не ждут";
	strncpy(str, atl, 5);
	cout << str;
</pre>
<p><li>
<pre>	char str[20] = "Люди нас ждут", *ptr;
	ptr = (char *) calloc(20, sizeof(char));
	strxfrm(ptr, str, 5); cout << ptr;
</pre>
<p><li>
<pre>	char atl[20] = "Люди нас ждут", s[20] = "Горы не ждут", *ptr;
	ptr = strpbrk(atl, s);
	if (ptr)
		cout << *ptr;
</pre>
<p><li>
<pre>	char str[20] = "Люди нас ждут", *ptr;
	ptr = strtok(str, "с");
	if (ptr)
		cout << ptr;
</pre>
<p><li>
<pre>	char str[20] = "Горы не ждут", *ptr;
	ptr = strcat(strtok(str, " "), " нас ждут");
	if (ptr)
		cout << ptr;
</pre>
<p><li>
<pre>	char des[20] = "Люди нас ждут", str[] = "Горы не ждут";
	strncat(strtok(des, "н"), str, 4);
	cout << des;
</pre>
<p><li>
<pre>	char str[20] = "тудж сан идюЛ";
	cout << strrev(str);
</pre>
<p><li>
<pre>	char ch = 'д', str[20] = "Люди нас ждут";
	cout << strchr(str, ch) - str;
</pre>
<p><li>
<pre>	char ch = 'д', str[20] = "Люди нас ждут", *ptr;
	ptr = strrchr(str, ch);
	if (ptr != 0)
		cout << ptr - str;
</pre>
<p><li>
<pre>	char str[20] = "Люди нас ждут", c[10] = "нет";
	cout << strcspn(str, c);
</pre>
<p><li>
<pre>	char str[20] = "Люди нас ждут", strl[20] = "Люди насторожены";
	cout << strspn(strl, str);
</pre>
<p><li>
<pre>	char str[20] = "Люди нас ждут";
	cout << strlen(str);
</pre>
<p><li>
<pre>	char des[15], str[15] = "оГырн  еджту";
	swab(str, des, strlen(str));
	cout << des << endl << str;
</pre>
<p><li>
<pre>	char str[] = "Горы не ждут";
	strnset(str, 'р', 4);
	cout << str;
</pre>
<p><li>
<pre>	char str[] = "Горы не ждут";
	strset(str, 'р');
	cout << str;
</pre>
</ol>
<p>&nbsp</p>
</td><td class=bok1></td><td class=bok></td></tr>
<tr id=top><td colspan=5><center>
<a id=top href=../plan_2.htm>Календарно-тематический план &nbsp &nbsp </a>
</center>
</td></tr>
</body>
</html>