<html>
<head>
<meta http-equiv=Content-Type content="text/html; charset=windows-1251">
<title>ОП | Вопросы теста 11 </title>
<link rel=stylesheet type=text/css href=lec.css>
</head>
<body>
<table cellpadding=0 cellspacing=0>
<tr id=top><td colspan=5>
<center>
<a id=top href=../plan_1.htm>Календарно-тематический план &nbsp &nbsp </a>
</center>
</td></tr>
<tr>
<td class=bok></td>
<td class=bok1></td>
<td>
<p id=head>Вопросы тестирования по теме:<br>Функции: описание, определение, обращение.</p>
<p id=head1>Сформулировать определение</p>
<ol>
<li>Современный стиль описания функции
<li>Обращение к функции (вызов функции)
<li>Современный стиль определения функции
<li>Функции -
<li>Рекурсивные функции -
<li>Перегруженные функции - 
<li>Встраиваемая (inline) функция
<li>Оператор &nbsp;&nbsp;&nbsp;&nbsp; return (выpажение);
<li>Аргумент по умолчанию 
<li>Функции, которые вызывают саму себя или непосредственно, или косвенно через другую функцию - это ...
<li>Несколько функций с одним и тем же именем, но с разными наборами параметров - это  ...
<li>Выделенная последовательность инструкций, предназначенных для решения определенной задачи - это ... 
<li>Укажите верные фразы:
<ul>
<li>	Формальньные параметры — это то, вместо чего будут подставлены фактические значения, передаваемые функции в момент ее вызова
<li>	C поддерживает вложенность функций, то есть можно определять одну функцию внутри другой 
<li>	Функции типа void могут возвращать значения любых типов
<li>	Прототип не обязателен, если определение функции расположено в тексте программы выше того места, где она вызывается 
<li>	Описание функции происходит с помощью прототипа функции
</ul>
</ol>
<p id=head1>Указать тип аргументов функции и возвращаемых значений</p>
<ol>
<li>Функция<pre>	float input(char *str)<br>	{	float arg;<br>		cout << str << " x = "; cin >> arg;<br>		return arg;<br>	}</pre>
<li>Функция<pre>	char input()<br>	{	char arg;<br>		cout << "x = "; cin >> arg;<br>		return arg;<br>	}</pre>
<li>Функция<pre>	void print(char *str, float arg, float rez)<br>	{<br>		cout << str << " x = " << arg << str << " y = " << rez;<br>	}</pre>
<li>Функция<pre>	void print(char arg1, char *arg2)<br>	{<br>		cout << arg2 << " ch = " << arg1;<br>	}</pre>
</ol>
<p>&nbsp</p>
</td>
<td class=bok1></td>
<td class=bok></td>
</tr>
<tr id=top><td colspan=5>
<center>
<a id=top href=../plan_1.htm>Календарно-тематический план &nbsp &nbsp </a>
</center>
</td></tr>
</body>
</html>