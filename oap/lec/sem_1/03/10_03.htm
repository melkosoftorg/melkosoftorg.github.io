<html>
<head>
<meta http-equiv=Content-Type content="text/html; charset=windows-1251">
<title>ОП | Лекция № 03</title>
<link rel=stylesheet type=text/css href=../../../css/lec.css>
</head>
<body>
<a name=#start></a>
<table class=pages align=center border=0 cellpadding=0 cellspacing=0>
<tr colspan=5>
<td>&nbsp;</td></tr>
</table>
<!-- -------Inside table------- -->
<table width=98% border=0 cellpadding=5 cellspacing=0>
<tr><td class=usual>
<p>&nbsp;</p><a name="03"></a>
<p><b><center>Команда Transfer... (Переход)</center></b></p>
<p>Команда Options\Transfer... (Параметры\Переход) позволяет добавить или удалить 
программы, имена которых будут отображаться в системном меню (соответствует символ 
три горизонтальных черты). В последствие можно выбрать элемент этого меню, чтобы 
запустить другую программу, не выходя в действительности из системы Borland C++. 
<br>Возврат в систему Borland C++ производится только после того, как выйдете из 
программы, к которой осуществили переход.
<p>Команда Transfer(Переход) отображает блок 
диалога. Блок диалога Transfer (Переход) подразделяется на две части:
<ul>
<li>Список Program Titles (Заголовки программ);
<br>В списке Program Titles (Заголовки программ) приводится краткое описание программ, 
которые были инсталлированы, и которые можно выполнить.
<p><li>Кнопки блока Transfer (Переход).
<br>Кнопки блока Transfer (Переход) позволяют редактировать и удалять имена тех программ, 
к которым можно осуществить переход, а также отменять все те изменения, которые 
произвели в списке программ перехода.
<br>Здесь присутствует также кнопка <b>Help (Подсказка)</b>, позволяющая получить дополнительную информацию по использованию 
блока диалога Transfer (Переход).
<p>Кнопка <b>Edit (Редактировать)</b> позволяет добавить элементы в список Program Titles (Заголовки 
программ), который будет отображаться в системном меню, или модифицировать этот 
список.
<br>Кнопка Edit отображает <i>блок диалога <b>Modify/New Transfer Item</b> (Элемент меню 
"Переход": модифицировать/новый)</i>.
<br>Если в момент выбора кнопки Edit (Редактировать) маркер позиционирован на каком-либо 
элементе меню "Переход", то происходит автоматическое заполнение блока диалога 
New/Modify (Новый/Модифицировать); в противном случае он остается пустым.
<p><b><i>Для добавления информации о новом файле</i></b> в блок диалога Transfer (Переход) с помощью 
блока диалога New/Modify (Новый/Модифицировать) необходимо выполнить следующие 
действия:
<ol><p><li>Введите короткое описание добавляемой программы в блок ввода <b><i>Program Title</i></b> 
(Заголовок программы). При использовании в проекте программы-транслятора ее имя 
должно в точности соответствовать заголовку программы перехода.
<br>Если хотите, чтобы вызову программы соответствовала какая-либо клавиша активации, наподобие 
клавиши S в команде Save (Сохранить) или клавиши t в команде Cut (Отсечь), должны 
включить в имя программы символ "тильда". Тот символ, который следует за тильдой, 
появляется в системном меню с измененным цветовым (или световым) атрибутом; это 
означает, что для выбора программы из меню можно нажать данную клавишу.
<p><li>С помощью клавиши табуляции переместитесь к полю <b><i>Program Path</i></b> (Маршрутное имя 
программы) и введите имя программы, к которому может (факультативно) 
присоединяться полный маршрут директории, где находится эта программа. Если не 
указываете точного маршрутного имени, то смогут быть обнаружены только те 
программы, которые располагаются в текущей директории, или могут быть найдены с 
помощью стандартной команды PATH операционной системы DOS.

<p><table align=center width=80% border=1 cellpadding=5 cellspacing=10>
<tr><td class=rule>
<b>Важное замечание:</b> 
Для получения исчерпывающей информации относительно 
описанных далее мощных макросредств обращайтесь к разделу, <a href="#01">Макросы команды Transfer</a> (Перенос).
</td></tr></table>
<p><li>С помощью клавиши табуляции переместитесь к полю <b><i>Command Line</i></b> (Командная 
строка) и введите любые параметры или макрокоманды, которые хотите передать 
программе. Макрокоманды всегда начинаются с символа доллара $ и вводятся 
заглавными буквами. Например, командой $CAP EDIT, все выводимые программой 
данные будут направляться в специальное окно редактирования системы Borland C++.
<p><li>Если хотите произвести присвоение клавиши активации, необходимо с помощью 
клавиши табуляции переместиться к полю <b><i>Hot Key</i></b> (Клавиша активации) и назначить 
программе соответствующую клавишу. В качестве клавиш активации элементов меню 
Transfer (Переход) должны использоваться комбинации клавиши Shift и 
функциональной клавиши. Те клавиши активации, назначение которых уже 
произведено, также отображаются в списке, но являются недоступными.
<p><li>Подведите указатель мыши к кнопке <b><i>New</i></b> (Новый) и нажмите кнопку мыши или 
выберите эту кнопку, чтобы добавить программу к списку.
</ol>
<p><b><i>Для модификации существующей программы перехода</i></b> переместите курсор на имя этой 
программы в списке Program Titles (Заголовки программ) блока диалога Transfer 
(Переход), а затем выберите кнопку Edit (Редактировать). После внесения изменений в 
блоке диалога New/Modify Transfer Item (Элемент меню "Переход": 
новый/модифицировать) выберите кнопку Modify (Модифицировать).
<p>Триггерная кнопка <b><i>Translator (Транслятор)</i></b> позволяет ввести имя программы-транслятора 
в список Project File Translators (Трансляторы файла проекта), тот список, который виден 
при выборе команды Project\Local Options (Проект\Локальные параметры). Данную 
кнопку следует маркировать при добавлении программы перехода, которая используется 
для построения части проекта.
<p>Кнопка <b>Delete (Удалить)</b> приводит к удалению выбранный в настоящий момент 
программы из списка и из системного меню.
</ul>
<a name="01"></a>
<p><b><center>Макросы команды Transfer (Перенос)</center></b>
<p>Интегрированная среда разработки (ИСР) распознает имена некоторых макросов в строке 
параметров блока диалога New/Modify Transfer Item (Элемент меню "Переход": 
новый/модифицировать).
<p>Существует три вида макросов:
<ul><li>макросы состояния,
<li>макросы имени файла,
<li>макросы команды.</ul>
<p>Раскрытие макросов производится на основании текущего состояния интегрированной 
среды разработки.
<br>Например, макрос $EDNAME ориентируется на файл, который 
находится в активном в настоящий момент окне редактирования; макрос $EXENAME 
ориентируется на программу, генерация которой уже производилась или будет 
производиться (что отображается в меню Compile (Компиляция)).
<p>Макросы имен файлов в действительности являются функциями, которые позволяют 
обращаться к различным составным частям спецификаций имен файлов.
<br>Например, 
макрос, который осуществляет вызов утилиты TDUMP (Турбо-Дамп) и всегда 
осуществляет дамповую выдачу объектного файла соответствующего файла в редакторе, 
что требует отсечения маршрутной составляющей имени и расширения имени и 
добавления маршрутной компоненты результирующего файла и расширения имени .OBJ. 
<p>Макросы команд указывают интегрированной среде выполнить некоторое действие или 
присвоить значение какому-либо параметру.
<ol>
<b><i><li>Макросы состояния</i></b>
<p><b>$COL</b>: Номер столбца текущего окна редактора. Если активным окном не является окно 
редактора, эта строка получает нулевое значение.
<p><b>$CONFIG</b>: Полное имя текущего файла конфигурации. Если конфигурационный файл не 
задан, данная строка является нулевой. Макрос предназначен для использования теми 
программами, которые обращаются к конфигурационному файлу или модифицируют его. 
Помимо того, что макрос позволяет узнать имя файла, он вызывает запись на диск 
текущего файла конфигурации (если он был модифицирован) и повторную загрузку его в 
память после возврата управления в ИСР.
<p><table align=center width=90% border=1 cellpadding=5 cellspacing=10>
<tr><td class=rule>
<b>Важное замечание:</b> 
TEML (Borland Editor Macro Language (Макроязык турбо 
редактора)) представляет собой Паскале подобный язык, который содержит 
многие встроенные простейшие команды редактора.
<br>Данный макрос используется 
для компилятора языка (Borland Editor Macro Language (Макроязык турбо 
редактора)). С его помощью можно редактировать файл сценария языка TEML в 
редакторе, а затем вызывать Макрокомпилятор турбо редактора (Borland Editor 
Macro Compiler (TEMC)) для обработки файла сценария. Когда осуществляется 
перезагрузка в память конфигурационного файла, новые или модифицированные 
команды редактора будут действительны.
<br>При инсталляции программы TEMC в 
качестве элемента меню переходов следует воспользоваться следующей 
командной строкой: $EDNAME $CONFIG, которая указывает, что в текущем 
окне редактирования содержится файл сценария на языке TEML, который 
подлежит обработке.
</td></tr></table>
<p><b>$EDNAME</b>: Полное имя файла, который находится в активном окне редактора. Если 
активным окном не является окно редактора, эта строка получает нулевое значение.
<p><b>$ERRCOL</b>: Номер столбца текущей ошибки в файле $ERRNAME. Если ни одного 
сообщения не имеется, данная строка раскрывается в нулевую.
<p><b>$ERRLINE</b>: Номер строки текущей ошибки в файле $ERRNAME. Если ни одного 
сообщения не имеется, данная строка раскрывается в нулевую.
<p><b>$ERRNAME</b>: Полное имя файла, на который ссылаются текущие сообщения в окне 
Message (Сообщение). Если сообщения отсутствуют или выбранное в настоящий момент 
сообщение не относится к файлу, эта строка получает нулевое значение.
<p><b>$EXENAME</b>: Имя файла программы (включая маршрутную компоненту результирующего 
файла), которое определяется на основе имени проекта. Если проект не был определен, то 
эта строка будет содержать имя .EXE файла, который будет создан из исходного кода 
активного окна редактора.
<p><b>$LINE</b>: Номер строки текущего окна редактора. Если активным окном не является окно 
редактора, эта строка получает нулевое значение.
<p><b>$PRJNAME</b>: Имя текущего файла проекта. Если проект не определен, эта строка получает 
нулевое значение.
<p><b><i><li>Макросы имени файла</i></b>
<p>Эти макросы получают в качестве аргументов имена файлов и возвращают различные 
компоненты имени файла. Это позволяет создать новую спецификацию имени файла на 
основании имен существующих файлов.
<br>Например, можно передать программе TDUMP 
макрос следующего вида:
<p><center>$DIR($EXENAME)$NAME($EDNAME).OBJ</center>
<br>Данный макрос 
возвращает маршрутное имя результирующей директории (директории, куда помещаются 
результирующие файлы), само имя файла, расположенного в активном окне редактора, и 
явно заданное расширение имени.
<br>Если текущей директорией является директория 
C:\WORK, результирующей директорией является директория TEST, а активное окно 
редактора содержит файл MYPROG.C, программа TDUMP получает параметр 
<p><center>C:\WORK\TEST\MYPROG.OBJ</center>
<p><b>$DIR()</b>: Директория файла, имя которого задается в качестве аргумента, полное 
маршрутное имя с завершающей обратной косой (обратным слэшем); например, 
\Borlandc\.
<p><b>$DRIVE()</b>: Литера дисковода файла, имя которого задается в качестве аргумента, в 
формате D:.
<p><b>$EXT()</b>: Расширение имени файла, имя которого задается в качестве аргумента; в состав 
возвращаемой строки входит точка
<p><b>$NAME()</b>: Собственно имя файла, имя которого задается в качестве аргумента; точка исключается.
<p><b><i><li>Макросы команд</i></b>
<p><b>$CAP EDIT</b>: макрос указывает ИСР перенаправлять выводимые программой данные в стандартный файл. После завершения выполнения программы перехода (transfer program), создается новое окно редактора, в котором отображаются "захваченные" выходные данные. Захваченные выходные данные располагаются в специальном окне редактора с именем Transfer Output (Выходные данные программы переноса). Для того, чтобы макрос $CAP EDIT работал должным образом, программа переноса должна осуществлять запись на стандартное устройство вывода операционной системы.
<p><b>$CAP MSG (<фильтр>)</b>: Захватывает выводимые программой данные в окно Message (Сообщение), используя <фильтр> в качестве фильтра операционной системы для преобразования выводимых программой данных в формат окна Message (Сообщение). Существуют два фильтра: TASM2MSG.EXE для Турбо Ассемблера (TASM) и GREP2MSG.EXE для утилиты поиска строк GREP. Доступен также исходный код этих фильтров, чтобы было можно написать свои собственные фильтры для других программ переноса, которые инсталлируете. С макросом могут также использоваться все программы, которые выводят сообщения в формате, ссылающемся на строку (содержат имя файла и номер строки).
<p><b>$MEM()</b>:макрос указывает ИСР, какой объем памяти нужно попытаться предоставить программе переноса. ИСР выделяет максимально возможный объем памяти: либо запрошенный объем памяти, либо объем максимально доступной памяти (меньший из двух). Если объем памяти не задан, получите сообщение об ошибке. 
<p><b>$NOSWAP</b>: макрос указывает ИСР не осуществлять своппинга с экранным кадром User Screen (Экранный кадр данных пользователя) при выполнении программы. Выполнение макроса приводит к выдаче окна, в котором указывается, какая программа переноса выполняется. Макрос следует использовать в совокупности с макросом $CAP.
<p><b>$PROMPT</b>: макрос указывает ИСР отобразить раскрытую строку-параметр перед вызовом программы переноса. Предназначенная для передачи в качестве параметра командная строка будет отображаться в блоке диалога. Это позволяет модифицировать строку или дополнить ее перед передачей. Позиция команды $PROMPT в командной строке определяет, что именно будет отображаться в блоке диалога. Можно занести в командную строку параметры константы, если расположить их перед макросом $PROMPT. Например, параметр /c в строке /c $PROMPT dir является константой и не отображается в блоке диалога, но параметр dir может быть отредактирован перед выполнением заданной команды.
<p><b>$SAVE ALL</b>: макрос указывает ИСР сохранить (без выдачи запроса) все модифицированные файлы во всех окнах редактора.
<p><b>$SAVE CUR</b>: макрос указывает ИСР сохранить файл, находящийся в текущем окне редактора, если он был модифицирован. Это гарантирует, что вызванная программа будет использовать самую последнюю версию исходного файла.
<p><b>$SAVE PROMPT</b>: макрос указывает ИСР выдавать запрос, если в окнах редактора имеются не сохраненные файлы. Будет выдан запрос, хотите ли сохранить какие-либо не сохраненные файлы.
<p><b>$TASM</b>: макрос является предопределенным и предназначен для использования с Турбо Ассемблером. Он использует фильтр TASM2MSG для обработки сообщений об ошибках, которые выдаются программой TASM. Макрос $TASM является по сути сокращением для следующей последовательности:
<p>$NOSWAP EDNAME, $DRIVE($EXENAME) $DIR($EXENAME)\$NAME ($EDNAME).OBJ $CAP MSG(TASM2MSG)
</ol>
<p><b><center>Параметры выделения памяти для программы переноса</center></b>
<p>У различных программ имеются разные потребности в памяти. Например, утилита GREP может выполняться при наличии крайне незначительного объема памяти, в то время как многие широко распространенные текстовые редакторы для нормального функционирования требуют наличия 200-300 Кбайт памяти. Если используете макрос $MEM(), то можете указать (каждый раз для одной конкретной программы), сколько памяти должна выделять ИСР для программ переноса. Чем меньше памяти выделяете программе переноса, тем быстрее происходит переход к этой программе и возвращение обратно.
<br>Могут возникать случаи, когда ИСР не может выделить затребованный объем памяти. Когда это происходит, ИСР выделяет программе максимально возможный объем памяти. Определенные состояния в работе ИСР требуют наличия большего объема памяти, чем другие; например, при отладке программы ИСР будет использовать больше ресурсов, чем вне режима отладки. Для того, чтобы высвободить память, которая используется во время отладки, следует выполнить команду Program Reset (Реинициализация программы).
<br>Если хотите, чтобы ИСР выделила всю отведенную ей память, необходимо задать большое число (например, 640). Объем реально выделяемой памяти зависит от того, сколько ее было в наличии при запуске системы Borland C++.
<p>&nbsp;</p>
</td></tr>
</table>
<!-- -------End of Inside table------- -->
<table class=pages align=center border=0 cellpadding=0 cellspacing=0>
<tr colspan=5>
<td>&nbsp;</td></tr>
</table>
<a name=#end></a>
</body>
</html>
