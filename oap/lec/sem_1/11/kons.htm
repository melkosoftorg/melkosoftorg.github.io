<html>
<head>
<meta http-equiv=Content-Type content="text/html; charset=windows-1251">
<title>ОАП | Лекция № 11</title>
<link rel=stylesheet type=text/css href=../../../css/lec.css>
</head>
<body>
<a name=#start></a>
<table class=pages align=center border=0 cellpadding=0 cellspacing=0>
<tr colspan=5>
<td>&nbsp&nbsp<a href="../../../plan_1.htm" class=p>Тематический план</a>&nbsp&nbsp</td>
<td>&nbsp&nbsp<a href="#end" class=p>Конец страницы</a>&nbsp&nbsp</td>
</tr>
</table>
<!-- -------Inside table------- -->
<table width=98% border=0 cellpadding=5 cellspacing=0>
<tr><td class=usual>
<p align=center class=dbi><br>Пункты для конспекта (лекция 11)</p>
<p><ol>
	<li>Функцией называется ...
	<li>Функции типа void никогда не возвращают значений. 
	<li>В C можно и описывать и определять функцию.
	<li>Когда вы описываете функцию, то даете всем остальным программам (включая главный модуль main) информацию о том, каким образом должно осуществляться обращение к этой функции. 
	<li>Когда вы определяете функцию, вы присваиваете ей имя, по которому к ней будет осуществляться обращение, и указываете, какие конкретно действия она будет выполнять. 
	<li>Прототип функции (function prototype) — ...
        <li>С помощью прототипа мы описываем функцию. Прототип идентичен заголовку функции, но заканчивается точкой с запятой:
              <pre>
		тип_результата имя_функции(список параметров, если он есть);
		</pre>	
        <li>Формат <b>определения</b> функции:
	<pre>
		тип_результата имя_функции (список параметров, если он есть)
		{
			декларации;
			инструкции;
		}
	</pre>
        <li>C не поддерживает вложенность функций, то есть нельзя объявить одну функцию внутри другой. 
	<li>Выполнение программы всегда начинается с функции main(). Когда при выполнении программы встречается 
	имя функции, происходит <b>обращение</b> к этой функции (она вызывается), то есть управление программой передается функции.
	 После того как функция выполнила свою работу, управление возвращается в то место, откуда функция была вызвана.
	<li>Параметры в определении функции называют формальными параметрами. Формальньные параметры — это то,
	 вместо чего будут подставлены фактические значения, передаваемые функции в момент ее вызова. 
	<li>Вызов функции имеет вид:
	     <pre>
		имя_функции (список_фактических параметров);
		</pre>	
	<li>При обращении к функции формальные параметры заменяются фактическими, причем соблюдается строгое соответствие параметров по типам. 
	<li> Фактические параметры передаются из вызывающей программы в функцию <b>по значению</b>.
	 Когда применяется вызов по значению, переменные передаются функции как аргументы, их значения копируются в соответствующие параметры функции, а сами переменные изменяются в вызывающем окружении.
	<li>Инструкция return имеет одну из двух форм:
	 <pre>
		return;
		return выpажение;
	</pre>
        <li>Выражение в операторе return определяет возвращаемое функцией значение.
        <li>Прототип не обязателен, если определение функции расположено в тексте программы выше того места, где она вызывается
        
         
  </ol>    
<p>  

</td></tr>
</table>
<!-- -------End of Inside table------- -->
<table class=pages align=center border=0 cellpadding=0 cellspacing=0>
<tr colspan=5>
<td>&nbsp&nbsp<a href="../../../plan_1.htm" class=p>Тематический план</a>&nbsp&nbsp</td>
<td>&nbsp&nbsp<a href="#start" class=p>Начало страницы</a>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp
<FONT color="#FFFF66" size=1><i>Copyright</i> &copy; <a class=p href="http://prep.scc/~ems">
Строганова Е. М.</a> <i>2011</i></font></td>
</tr>
</table>
<a name=#end></a>
</body>
</html>