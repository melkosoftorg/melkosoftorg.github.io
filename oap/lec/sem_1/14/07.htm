<html>
<head>
<meta http-equiv=Content-Type content="text/html; charset=windows-1251">
<title>ОП | Лекция № 14</title>
<link rel=stylesheet type=text/css href=../../../css/lec.css>
</head>
<body>
<a name=#start></a>
<table class=pages align=center border=0 cellpadding=0 cellspacing=0>
<tr colspan=5>
<td>&nbsp&nbsp<a href="../../../plan_1.htm" class=p>Календарно-тематический план</a>&nbsp&nbsp</td>
<td><a href="index.htm" class=p>&nbsp План лекции &nbsp</a></td>
<td><a href="01.htm" class=p>&nbsp 1 &nbsp</a></td>
<td><a href="02.htm" class=p>&nbsp 2 &nbsp</a></td>
<td><a href="03.htm" class=p>&nbsp 3 &nbsp</a></td>
<td><a href="04.htm" class=p>&nbsp 4 &nbsp</a></td>
<td><a href="05.htm" class=p>&nbsp 5 &nbsp</a></td>
<td><a href="06.htm" class=p>&nbsp 6 &nbsp</a></td>
<td><a href="07.htm" class=a>&nbsp 7 &nbsp</a></td>
<td><a href="08.htm" class=p>&nbsp 8 &nbsp</a></td>
<td><a href="09.htm" class=p>&nbsp 9 &nbsp</a></td>
<td><a href="10.htm" class=p>&nbsp 10 &nbsp</a></td>
<td><a href="11.htm" class=p>&nbsp 11 &nbsp</a></td>
</tr>
</table>
<!-- -------Inside table------- -->
<table width=98% border=0 cellpadding=5 cellspacing=0>
<!--tr><td class=rule>
Внимание!
<ol>В окнах такого цвета будут отображаться правила и примечания относительно 
лекционного материала
</ol></td></tr-->
<tr>
<td class=usual>
<p align=center class=dbi><br>Посимвольное чтение данных из файла и запись в файл</p>
Существует несколько способов передачи данных в файл и получения их из файла в 
зависимости от используемой функции.
<p><b><center>Посимвольное чтение данных из файла</center></b>
<p><b><i>getc</i></b> - вводит символ из потока, представляет собой макрокоманду, которая получает 
следующий по порядку символ из входного потока str и увеличивает указатель текущего 
положения в потоке на 1.
<br><b>Синтаксис</b> int getc(FILE *str);
<br><b>Прототип</b> в stdio.h
<p><b><i>fgetc</i></b> - получает символ из потока, работает точно так же, как и getc, за исключением того, 
что это функция, в то время, как getc - это макрокоманда. 
<br><b>Синтаксис</b> int fgetc(FILE *str);
<br><b>Прототип</b> в stdio.h
<p><b><i>fgetchar</i></b> - получает символ из потока stdin, определяется как fgetc(stdin).
<br><b>Синтаксис</b> int fgetchar(void);
<br><b>Прототип</b> в stdio.h
<p>При успешном завершении функции getc, fgetc, fgetchar возвращают считанный символ 
после предварительного конвертирования его в целое без знака. При возникновении 
ситуации EOF или при ошибочном завершении, они возвращают значение EOF.
<p><b><center>Посимвольная запись данных в файл</center></b>
<p><b><i>putc</i></b> - представляет собой макрокоманду, которая выводит символ ch в указанный 
выходной поток str, в случае успеха возвращает символ ch, в случае ошибки возвращает 
EOF.
<br><b>Синтаксис</b> int putc(int ch, FILE *str);
<br><b>Прототип</b> в stdio.h
<p><b><i>fputc</i></b> - выводит символ в поток str, в случае успеха возвращает символ ch, в случае 
ошибки возвращает EOF.
<br><b>Синтаксис</b> int fputc(int ch, FILE *str);
<br><b>Прототип</b> в stdio.h
<p>Программа осуществляет посимвольную запись данных в файл и чтение из файла. 
<pre>
	#include&lt;stdio.h&gt;
	#include&lt;conio.h&gt;
	#include&lt;stdlib.h&gt;
	#include&lt;dir.h&gt;
	main()
	{
		FILE *fp;
		char ch, *name="MUF.CPP"; clrscr(); 
		puts("Ввести данные в файл\n");
		if ((fp = fopen(name, "w")) == NULL)
		// или можно if ((fp = fopen(name, "a")) == NULL)
		{ 
			puts("Невозможно открыть файл"); 
			exit(1); 
		}
		do
		{
			ch = getchar(); fputc(ch, fp);
		} while(ch!='\n');
		fclose(fp); getch(); 
		printf("\n\nЧтение данных из файла ");
		printf("%s\n\n",searchpath(name));
		if ((fp = fopen(name, "r")) == NULL)
		{ 
			puts("Невозможно открыть файл"); 
			exit(1); 
		}
		while((ch = fgetc(fp)) != EOF)
			printf("%c",ch);
		fclose(fp); getch();
	}
</pre>
<p>
</td></tr>
</table>
<!-- -------End of Inside table------- -->
<table class=pages align=center border=0 cellpadding=0 cellspacing=0>
<tr colspan=5>
<td>&nbsp&nbsp<a href="../../../plan_1.htm" class=p>Календарно-тематический план</a>&nbsp&nbsp</td>
<td><a href="index.htm" class=p>&nbsp План лекции &nbsp</a></td>
<td><a href="01.htm" class=p>&nbsp 1 &nbsp</a></td>
<td><a href="02.htm" class=p>&nbsp 2 &nbsp</a></td>
<td><a href="03.htm" class=p>&nbsp 3 &nbsp</a></td>
<td><a href="04.htm" class=p>&nbsp 4 &nbsp</a></td>
<td><a href="05.htm" class=p>&nbsp 5 &nbsp</a></td>
<td><a href="06.htm" class=p>&nbsp 6 &nbsp</a></td>
<td><a href="07.htm" class=a>&nbsp 7 &nbsp</a></td>
<td><a href="08.htm" class=p>&nbsp 8 &nbsp</a></td>
<td><a href="09.htm" class=p>&nbsp 9 &nbsp</a></td>
<td><a href="10.htm" class=p>&nbsp 10 &nbsp</a></td>
<td><a href="11.htm" class=p>&nbsp 11 &nbsp</a></td>
</tr>
</table>
<a name=#end></a>
</body>
</html>