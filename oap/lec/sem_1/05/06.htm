<html>
<head>
<meta http-equiv=Content-Type content="text/html; charset=windows-1251">
<title>ОП | Лекция № 05</title>
<link rel=stylesheet type=text/css href=../../../css/lec.css>
</head>
<body>
<a name=#start></a>
<table class=pages align=center border=0 cellpadding=0 cellspacing=0>
<tr colspan=5>
<td>&nbsp&nbsp<a href="../../../plan_1.htm" class=p>Календарно-тематический план</a>&nbsp&nbsp</td>
<td><a href="index.htm" class=p>&nbsp План лекции &nbsp</a></td>
<td><a href="01.htm" class=p>&nbsp 1 &nbsp</a></td>
<td><a href="02.htm" class=p>&nbsp 2 &nbsp</a></td>
<td><a href="03.htm" class=p>&nbsp 3 &nbsp</a></td>
<td><a href="04.htm" class=p>&nbsp 4 &nbsp</a></td>
<td><a href="05.htm" class=p>&nbsp 5 &nbsp</a></td>
<td><a href="06.htm" class=a>&nbsp 6 &nbsp</a></td>
<td><a href="07.htm" class=p>&nbsp 7 &nbsp</a></td>
<td><a href="08.htm" class=p>&nbsp 8 &nbsp</a></td>
</tr>
</table>
<!-- -------Inside table------- -->
<table width=98% border=0 cellpadding=5 cellspacing=0>
<tr>
<td class=usual>
<p align=center class=dbi><br>Операции приращения ++ и уменьшения --. Переменные-счетчики и -аккумуляторы</p>
<p>Операции увеличения  - <b><i>инкремента</i> (++)</b> и
уменьшения  - <b><i>декремента</i> (--)</b> являются унарными
операциями присваивания. Они
соответственно увеличивают или
уменьшают значения операнда на
единицу. 
<p>В языке допускается
<i>префиксная</i> или <i>постфиксная</i> формы
операций увеличения (уменьшения),
поэтому значения выражения,
использующего операции увеличения
(уменьшения) зависит от того, какая
из форм указанных операций
используется. </p>
<pre>
	sum = a + b++ - сложить a и b, присвоить результат sum 
		         и увеличить b на единицу, 
	sum = a + ++b - увеличить b на единицу, сложить a и b, 
		         и присвоить результат sum.

	sum = a + b-- - сложить a и b, присвоить результат sum 
		         и уменьшить b на единицу, 
	sum = a + --b - уменьшить b на единицу, сложить a и b, 
		         и присвоить результат sum.
</pre>
В соответствии с принятым в языке C порядком вычислений операции увеличения и уменьшения имеют очень 
высокий уровень старшинства.
<p>Выражение x * y++ означает (x) * (y++), а не (x * y)++. Операции увеличения и уменьшения применяются только к переменной.
<p>Например, в результате выполнения операций будут получены следующие значения:
<p><table border=1 align=center cellpadding=10>
<tr><td>  <b><center>До вычисления    </center></b>
</td><td> <b><center>Вычисление       </center></b>
</td><td> <b><center>После вычисления </center></b>
</td></tr>
<tr><td>  a = 4 &nbsp &nbsp b = 3
</td><td> z = a + b++ = 4 + 3 = 7
</td><td> a = 4 &nbsp &nbsp b = 4
</td></tr>
<tr><td>  a = 4 &nbsp &nbsp b = 4
</td><td> z = a + ++b = 4 + 5 = 9
</td><td> a = 4 &nbsp &nbsp b = 5
</td></tr>
<tr><td>  a = 4 &nbsp &nbsp b = 5
</td><td> z = a * b-- = 4 * 5 = 20
</td><td> a = 4 &nbsp &nbsp b = 4
</td></tr>
<tr><td>  a = 4 &nbsp &nbsp b = 4
</td><td> z = a * --b = 4 * 3 = 12
</td><td> a = 4 &nbsp &nbsp b = 3
</td></tr>
</table>

<p>
<p>
<pre>
	<i>Пример 1</i>				<i>Пример 2</i>
	int a, b;					int a, b;
	a = 2;					a = 2;
	b = a++;					b = ++a;
	printf(“B = %d\n”, b);		printf(“B = %d\n”, b);
</pre>
В первом примере на экран будет выведено число – два, а во втором – три. Это обусловлено тем, что если знак инкремента или декремента стоит перед переменной, то сначала производится ее изменение, а затем присвоение. Если же знак стоит после переменной, то ее изменение производится после присвоения. Эту особенность необходимо учитывать при написании программ.
<p>Если операция инкремента или декремента для переменной используется отдельно от других операций, то порядок действий несущественен. Например:
<pre>
	int a;				int a;
	a = 2;				a = 2;
	a++;					++a;
	printf(“A = %d\n”, a);	printf(“A = %d\n”, a);
</pre>
В обоих случаях будет выведено одно и тоже значение – три.
<p>Примеры:
<pre>
	int a, b, c;
	a = 2;
	b = (a++ * 3);	// b = 6
	c = (++a * 3);	// c = 9
</pre>

<p align=center class=dbi>Переменные-счетчики и -аккумуляторы</p>
<p><b>Счетчик</b>  — это переменная, которая увеличивает свое значение на единицу каждый раз,
 когда происходит определенное событие. Алгоритм счетчика таков: 
<pre>
	a = a + 1  	// Новое значение переменной равно старому значению плюс 1
</pre>
<p>Чтобы считать в сторону уменьшения, достаточно слегка изменить алгоритм: 
<pre>
	a = a - 1
</pre>
<p>Счетчики используют настолько часто, что в языке Си существуют специальные 
операторы <b>инкремента и декремента</b> переменной.
<br>Оператор ++a увеличивает значение переменной на единицу
<br>Оператор --a уменьшает значение переменной на единицу
<p>Чтобы счетчик считал, необходимо задать начальное значение.
<pre>
	int k;
	k = 0;
	k = k + 1;      // или k++;
</pre>

<p><b>Аккумулятор</b> также увеличивает значение переменной. Но, в отличие от счетчика,
 который всегда увеличивает значение переменной на одну и ту же величину,
 аккумулятор может иметь произвольный шаг (и способ) изменения при каждой новой операции. 
<p>В общем виде синтаксис аккумулятора таков:
<pre> 
	s = s + num; 	// или s += num;
</pre>
<p>Аккумулятор получил такое название оттого, что он накапливает значение переменной
<p>Ниже приведен текст программы, в которой вводятся три значения и вычисляется их среднее арифметическое.
 Для расчета среднего арифметического пользуются простым математическим выражением:
<pre> 
	average = (A + B + C) / 3
</pre>
<p>В программе мы использовали аккумулятор, чтобы подсчитать сумму трех чисел,
 и счетчик для определения количества введенных значений (чтобы продемонстрировать работу счетчика).
<pre>
main()
{
	float number, total, count, average;
	total = 0.0;
	count = 0.0;
	printf("Введите первое число: ");
	scanf("%f", &number);
	total += number;
	++count;
	printf("Введите второе число: ");
	scanf("%f", &number);
	total += number;
	++count;
	printf("Введите третье число: ");
	scanf("%f", &number);
	total += number;
	++count;
	average = total / count;
	printf("Среднее арифметическое равно %f", average);
}
</pre>

<p>Более эффективный способ использования этих алгоритмов мы рассмотрим при изучении циклов.


<p>&nbsp;</p>
</td></tr>
</table>
<!-- -------End of Inside table------- -->
<table class=pages align=center border=0 cellpadding=0 cellspacing=0>
<tr colspan=5>
<td>&nbsp&nbsp<a href="../../../plan_1.htm" class=p>Календарно-тематический план</a>&nbsp&nbsp</td>
<td><a href="index.htm" class=p>&nbsp План лекции &nbsp</a></td>
<td><a href="01.htm" class=p>&nbsp 1 &nbsp</a></td>
<td><a href="02.htm" class=p>&nbsp 2 &nbsp</a></td>
<td><a href="03.htm" class=p>&nbsp 3 &nbsp</a></td>
<td><a href="04.htm" class=p>&nbsp 4 &nbsp</a></td>
<td><a href="05.htm" class=p>&nbsp 5 &nbsp</a></td>
<td><a href="06.htm" class=a>&nbsp 6 &nbsp</a></td>
<td><a href="07.htm" class=p>&nbsp 7 &nbsp</a></td>
<td><a href="08.htm" class=p>&nbsp 8 &nbsp</a></td>
</tr>
</table>
<a name=#end></a>
</body>
</html>