<html>
<head>
<meta http-equiv=Content-Type content="text/html; charset=windows-1251">
<title>ОП | Лекция № 05</title>
<link rel=stylesheet type=text/css href=../../../css/lec.css>
</head>
<body>
<a name=#start></a>
<table class=pages align=center border=0 cellpadding=0 cellspacing=0>
<tr colspan=5>
<td>&nbsp&nbsp<a href="../../../plan_1.htm" class=p>Календарно-тематический план</a>&nbsp&nbsp</td>
<td><a href="index.htm" class=p>&nbsp План лекции &nbsp</a></td>
<td><a href="01.htm" class=p>&nbsp 1 &nbsp</a></td>
<td><a href="02.htm" class=a>&nbsp 2 &nbsp</a></td>
<td><a href="03.htm" class=p>&nbsp 3 &nbsp</a></td>
<td><a href="04.htm" class=p>&nbsp 4 &nbsp</a></td>
<td><a href="05.htm" class=p>&nbsp 5 &nbsp</a></td>
<td><a href="06.htm" class=p>&nbsp 6 &nbsp</a></td>
<td><a href="07.htm" class=p>&nbsp 7 &nbsp</a></td>
<td><a href="08.htm" class=p>&nbsp 8 &nbsp</a></td>
</tr>
</table>
<!-- -------Inside table------- -->
<table width=98% border=0 cellpadding=5 cellspacing=0>
<tr>
<td class=usual>
<p align=center class=dbi><br>Арифметические операции одноместные и двуместные</p>
<p>В языке C используется около 40 различных операций, в том числе и для представления
арифметических действий, но нет операции возведения в степень.
<p>Так встроенная операция <b>sizeof(&lt;name>)</b> используется для определения размера памяти,
которая соответствует идентификатору или типу. < name > - или идентификатор, или имя
типа. <i>Значением выражения sizeof является размер памяти в байтах, соответствующий поименованному 
идентификатору или типу</i>.
<p>Например,
<ul>
sizeof(int) использовано для определения размера памяти, занимаемой данными типа int,
<p>sizeof(g1_v) для определения размера памяти, занимаемой переменной с именем g1_v.
</ul>
<center><p><b><i>Унарные и бинарные операции</i></b></center>

<p>Если действие производится с двумя операндами, операция называется <b><i>бинарной</i></b> или <b><i>диадической</i></b>.
<p>Если действие производится с одним операндом, операция называется <b><i>унарной</i></b>.
<p>В языке Си имеются следующие
<b>унарные операции</b>: </p>
<pre>
<br>	-	 арифметическое отрицание (отрицание и дополнение); 

<br>	~	 побитовое логическое отрицание (дополнение); 

<br>	!	 логическое отрицание; 

<br>	*	 разадресация (косвенная адресация); 

<br>	&amp;	 вычисление адреса; 

<br>	+	 унарный плюс; 

<br>	++	 увеличение (инкремент); 

<br>	--	 уменьшение (декремент); 

<br>	sizeof 	размер 
</pre>
<p><i>Унарные операции выполняются справа налево</i>. 

<p>В отличие от унарных, <b>бинарные операции</b>, список которых приведен в
таблице, <i>выполняются слева направо</i>. </p>

<p><center>

<table border="1" width="60%">
    <tr>
        <th>Знак операции</th>
        <th>Операция</th>
        <th>Группа операций</th>
    </tr>
    <tr>
        <td align="center">*</td>
        <td align="center">Умножение</td>
        <td align="center" rowspan="3">Мультипликативные</td>
    </tr>
    <tr>
        <td align="center">/</td>
        <td align="center">Деление</td>
    </tr>
    <tr>
        <td align="center">%</td>
        <td align="center">Остаток от деления</td>
    </tr>
    <tr>
        <td align="center">+</td>
        <td align="center">Сложение</td>
        <td align="center" rowspan="2">Аддитивные</td>
    </tr>
    <tr>
        <td align="center">-</td>
        <td align="center">Вычитание</td>
    </tr>
    <tr>
        <td align="center">&lt;&lt;</td>
        <td align="center">Сдвиг влево</td>
        <td align="center" rowspan="2">Операции
        сдвига</td>
    </tr>
    <tr>
        <td align="center">&gt;&gt;</td>
        <td align="center">Сдвиг вправо</td>
    </tr>
    <tr>
        <td align="center">&lt;</td>
        <td align="center">Меньше</td>
        <td align="center" rowspan="5">Операции
        отношения</td>
    </tr>
    <tr>
        <td align="center">&lt;=</td>
        <td align="center">Меньше или равно</td>
    </tr>
    <tr>
        <td align="center">&gt;=</td>
        <td align="center">Больше или равно</td>
    </tr>
    <tr>
        <td align="center">==</td>
        <td align="center">Равно</td>
    </tr>
    <tr>
        <td align="center">!=</td>
        <td align="center">Не равно</td>
    </tr>
    <tr>
        <td align="center">&amp;</td>
        <td align="center">Поразрядное И</td>
        <td align="center" rowspan="3">Поразрядные
        операции</td>
    </tr>
    <tr>
        <td align="center">|</td>
        <td align="center">Поразрядное ИЛИ</td>
    </tr>
    <tr>
        <td align="center">^</td>
        <td align="center">Поразрядное
        исключающее ИЛИ</td>
    </tr>
    <tr>
        <td align="center">&amp;&amp;</td>
        <td align="center">Логическое И</td>
        <td align="center" rowspan="2">Логические
        операции</td>
    </tr>
    <tr>
        <td align="center">||</td>
        <td align="center">Логическое ИЛИ</td>
    </tr>
    <tr>
        <td align="center">,</td>
        <td align="center">Последовательное
        вычисление</td>
        <td align="center">Последовательного
        вычисления</td>
    </tr>
    <tr>
        <td align="center">=</td>
        <td align="center">Присваивание</td>
        <td align="center" rowspan="11">Операции
        присваивания</td>
    </tr>
    <tr>
        <td align="center">*=</td>
        <td align="center">Умножение с
        присваиванием</td>
    </tr>
    <tr>
        <td align="center">/=</td>
        <td align="center">Деление с
        присваиванием</td>
    </tr>
    <tr>
        <td align="center">%=</td>
        <td align="center">Остаток от деления с
        присваиванием</td>
    </tr>
    <tr>
        <td align="center">-=</td>
        <td align="center">Вычитание с
        присваиванием</td>
    </tr>
    <tr>
        <td align="center">+=</td>
        <td align="center">Сложение с
        присваиванием</td>
    </tr>
    <tr>
        <td align="center">&lt;&lt;=</td>
        <td align="center">Сдвиг влево с
        присваиванием</td>
    </tr>
    <tr>
        <td align="center">&gt;&gt;=</td>
        <td align="center">Сдвиг вправо
        присваиванием</td>
    </tr>
    <tr>
        <td align="center">&amp;=</td>
        <td align="center">Поразрядное И с
        присваиванием</td>
    </tr>
    <tr>
        <td align="center">|=</td>
        <td align="center">Поразрядное ИЛИ с
        присваиванием</td>
    </tr>
    <tr>
        <td align="center">^=</td>
        <td align="center">Поразрядное
        исключающее ИЛИ с
        присваиванием</td>
    </tr>
</table>
</center>
	
<p>Рассмотрим пример, как выполняется усечение и чем деление целых чисел отличается от деления чисел с плавающей точкой:
<pre>
main( )
{
	printf("деление целых: 5/4 это %d \n", 5/4);
	printf("деление целых: 6/3 это %d \n", 6/3);
	printf("деление целых: 7/4 это %d \n", 7/4);
	printf("деление чисел с плавающей точкой: 7./4. это %2.2f \n", 7./4.);
	printf("смешанное деление: 7./4 это %2.2f \n", 7./4);
}
</pre>

<p>Результат выполнения указанной программы:
<pre>
 	 деление целых: 5/4 это 1
	 деление целых: 6/3 это 2
	 деление целых: 7/4 это 1
	 деление чисел с плавающей точкой: 7./4. это 1.75
	 смешанное деление: 7./4 это 1.75
</pre>

<p>При делении чисел с плавающей точкой (или смешанных чисел) результатом будет число типа с плавающей 
точкой ( 7<b><i>.</i></b> / 4<b><i>.</i></b> или 7<b><i>.</i></b> / 4 это 1<b><i>.</i></b>75 ).
<pre>
	int i = 49, j = 10,  n, m;
	n = i / j;		//  результат   4   
	m = i / (-j);	//  результат  -4   
</pre>
<p>
<p>Так как язык «С» является в первую очередь языком системного программирования, то у него упрощена система приведения типов при вычислении. Это накладывает определенные неудобства при вычислении выражений. Рассмотрим <i>пример</i>:
<pre>	int a, b;
	double c;
	a = 1; b = 2;
	c = a/b;
</pre>
<p>В данном случае в переменную «с»  будет записан ноль, так как операция деления проводится для операндов целого типа, и результат будет иметь целый тип. Для избежания этого необходимо либо вводить дополнительную операцию, как это сделано в следующем примере:
<pre>	int a, b;
	double c;
	a = 1; b = 2;
	c = 1.0*a/b;
</pre>
либо использовать <b>оператор преобразования типа</b>, который имеет следующий синтаксис: <br><b><i>(новый_тип)переменная</i></b>	 или 	<b><i>(новый тип)(выражение)</i></b>.
<p> В данном случае предыдущий пример примет вид:
<pre>	int a, b;
	double c;
	a = 1; b = 2;
	c = (double)a/b;
</pre>
<p>Следует отметить, что запись <b>c = (double)(a/b);</b> будет ошибочна, так как к вещественному типу будет преобразован результат выражения, а он в данном случае – ноль.
<p>

</td></tr>
</table>
<!-- -------End of Inside table------- -->
<table class=pages align=center border=0 cellpadding=0 cellspacing=0>
<tr colspan=5>
<td>&nbsp&nbsp<a href="../../../plan_1.htm" class=p>Календарно-тематический план</a>&nbsp&nbsp</td>
<td><a href="index.htm" class=p>&nbsp План лекции &nbsp</a></td>
<td><a href="01.htm" class=p>&nbsp 1 &nbsp</a></td>
<td><a href="02.htm" class=a>&nbsp 2 &nbsp</a></td>
<td><a href="03.htm" class=p>&nbsp 3 &nbsp</a></td>
<td><a href="04.htm" class=p>&nbsp 4 &nbsp</a></td>
<td><a href="05.htm" class=p>&nbsp 5 &nbsp</a></td>
<td><a href="06.htm" class=p>&nbsp 6 &nbsp</a></td>
<td><a href="07.htm" class=p>&nbsp 7 &nbsp</a></td>
<td><a href="08.htm" class=p>&nbsp 8 &nbsp</a></td>
</tr>
</table>
<a name=#end></a>
</body>
</html>