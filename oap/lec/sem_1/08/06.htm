<html>
<head>
<meta http-equiv=Content-Type content="text/html; charset=windows-1251">
<title>ОП | Лекция № 08</title>
<link rel=stylesheet type=text/css href=../../../css/lec.css>
</head>
<body>
<a name=#start></a>
<table class=pages align=center border=0 cellpadding=0 cellspacing=0>
<tr colspan=5>
<td>&nbsp&nbsp<a href="../../../plan_1.htm" class=p>Календарно-тематический план</a>&nbsp&nbsp</td>
<td><a href="index.htm" class=p>&nbsp План лекции &nbsp</a></td>
<td><a href="01.htm" class=p>&nbsp 1 &nbsp</a></td>
<td><a href="02.htm" class=p>&nbsp 2 &nbsp</a></td>
<td><a href="03.htm" class=p>&nbsp 3 &nbsp</a></td>
<td><a href="04.htm" class=p>&nbsp 4 &nbsp</a></td>
<td><a href="05.htm" class=p>&nbsp 5 &nbsp</a></td>
<td><a href="06.htm" class=a>&nbsp 6 &nbsp</a></td>
</tr>
</table>
<!-- -------Inside table------- -->
<table width=98% border=0 cellpadding=5 cellspacing=0>
<tr><td class=usual>
<p align=center class=dbi><br>Примеры использования спецификаторов формата</p>
<p><b>Пример 1.</b> Использование  символов преобразования <b>n</b> в функциях <b>printf</b> и <b>scanf</b>
<pre>
	// n1 - количество введенных знаков
	// n2 - количество позиций, занимаемых выводом
	#include &lt;stdio.h>
	#include &lt;conio.h>
	void main(void)
	{       clrscr();
        	int x, n1, n2;
	        printf("Введите целое число от -32768 до 32767\n");
        	scanf("%d%n", &x, &n1);
	        printf("x = %d%n\n", x, &n2);
        	printf("n1 = %d, n2 = %d\n",n1, n2);
	        getch();
	}

	<b><i>Результаты:</i></b>
		Введите целое число от -32768 до 32767
			-31653
			x = -31653
			n1 = 6, n2 = 10
</pre>
<p><b>Пример 2.</b> Использование спецификаций <b>%[ ]</b>, а также символов <b>*</b> и <b>#</b>
<pre>
	#include &lt;stdio.h>
	#include &lt;conio.h>
	void main(void)
	{
		clrscr();
		char str_b[51], str_e[51];
		int x, n1, n2;
		float y;
		
		printf("Введите строку до 50 символов\n");
		/* Пусть введена строка Мин-1-2-3-4-5.
		Из нее только первые три символа (Мин) совпадают с первыми
		символами, заданными в квадратных скобках рассматриваемой
		спецификации [Минск]. Поэтому только эти три символа попадут
		в первую строку, а оставшиеся символы (-1-2-3-4-5) попадут
		во вторую строку.
		*/
		scanf("%[Минск]%s", str_b, str_e);
		printf("str_b = %s, str_e = %s\n", str_b, str_e);
		
		/* Пусть введена строка 1-2-Мин-3-4-5.
		Из нее три символа (Мин) совпадают с первыми символами,
		заданными в квадратных скобках рассматриваемой спецификации
		[^Минск]. Поэтому все до этих символов попадет в первую
		строку, а оставшиеся символы (Мин-3-4-5) попадут во вторую
		строку.
		*/
		printf("\nВведите строку до 50 символов\n");
		scanf("%[^Минск]%s", str_b, str_e);
		printf("\nstr_b = %s, str_e = %s\n", str_b, str_e);
		
		/* Число n1 = 8 определяет минимальную ширину поля для
		вывода, число n2 = 3 - количество цифр после запятой.
		В результате выводимое число y = 12.34567 будет смещено
		относительно левой границы и после запятой будут
		выведены три цифры
		*/
		y = 12.34567;
		n1 = 8;
		n2 = 3;
		printf("\ny = %*.*f\n", n1, n2, y);
		
		/* Шестнадцатеричное число 0х100 выведено функцией printf
		- с префиксом Ох,
		- без префикса Ох
		- десятичной форме.
		*/
		x = 0x100;
		printf("\nx(16) = %#x, x(16) = %x, х(10) = %d\n", x, x, x);
		getch();
	}
	<b><i>Результаты:</i></b>
		Введите строку до 50 символов
		Мин-1-2-3-4-5
		str_b = Мин, str_e = -1-2-3-4-5
	
		Введите строку до 50 символов
		1-2-Мин-3-4-5
		str_b = 1-2-, str_e = Мин-3-4-5
	
		y =   12.346
	
		x(16) = 0x100, x(16) = 100, х(10) = 256
</pre>
	
<p><b>Пример 3.</b> Функции вывода данных различных типов.
<pre>
	#include&lt;stdio.h>
	#include&lt;conio.h>
	#define STR "Какое хорошее имя !"
	main()
	{
		// определение переменных
		unsigned char f = 197, ch;
		double bi = -12.3456;
		char str[19] = "Число вещественное", name[20];
		clrscr();
		// функции вывода
		puts("\nputs() выводит строку, переводит курсор на новую строку");
		getch(); // ввод символа без эхопечати
		printf("\n");
		puts("Функции putch() и putchar() выводят символ,");
		puts("на новую строку курсор не переводят\n");
		putch(f); getch(); putchar(f); getch();
		// символ \ в конце строки позволяет при выводе объединить
		// две строки, при этом сохраняются все пробелы
		puts("\n\nФункция printf() выводит данные всех типов,\
	 работает со списком\nаргументов, позволяет определять способ\
	 форматирования данных");
	 
		printf("\n\tЦелое число f = %u\n\nв 8с/с f = %o\t\tв 16с/с f = %x\
		\nуказатель %p\t\tсимвол %c \n",
		f, f, f, f, f);
		printf("Адрес ячейки памяти %x \nзанимает %d байт\n\n",
		&f, sizeof(f));
		getch();
		printf("\n%s\n bi = %f, вывод со спецификаторами формата\n\n",
			str, bi);
		printf("%012.7f %8.2f %20.12f %15.7e \n", bi, bi, bi, bi);
		printf("%-12.6f %#8.2f %15.7g %E", bi, bi, bi, bi);
		printf("\nАдрес ячейки памяти %9x, занимает %d байт\n\n",
			&bi, sizeof(bi));
		getch();
	
		printf("Ваше имя ");
		scanf("%s", name); // ввод с клавиатуры
		printf("%s\n", STR);
		printf("Всего хорошего %s, %d байт\n", name, sizeof(name));
		getch(); return 0;
	}
	<b><i>Результаты:</i></b>       
		puts() выводит строку, переводит курсор на новую строку
	
		Функции putch() и putchar() выводят символ,
		на новую строку курсор не переводят
	
		++
	
		Функция printf() выводит данные всех типов ,работает со списком
		аргументов, позволяет определять способ форматирования данных
	
		        Целое число f = 197
	
		в 8с/с f = 305          в 16с/с f = c5
		указатель 00C5          символ +
		Адрес ячейки памяти fff5
		занимает 1 байт
	
	
		Число вещественное
		 bi = -12.345600, вывод со спецификаторами формата
	
		-0012.3456000   -12.35     -12.345600000000  -1.2345600e+01
		-12.345600     -12.35        -12.3456 -1.234560E+01
		Адрес ячейки памяти      ffec, занимает 8 байт
	
		Ваше имя Сергей Петрович
		Какое хорошее имя !
		Всего хорошего Сергей, 20 байт
</pre>
<p>&nbsp;</p>
</td></tr>
</table>
<!-- -------End of Inside table------- -->
<table class=pages align=center border=0 cellpadding=0 cellspacing=0>
<tr colspan=5>
<td>&nbsp&nbsp<a href="../../../plan_1.htm" class=p>Календарно-тематический план</a>&nbsp&nbsp</td>
<td><a href="index.htm" class=p>&nbsp План лекции &nbsp</a></td>
<td><a href="01.htm" class=p>&nbsp 1 &nbsp</a></td>
<td><a href="02.htm" class=p>&nbsp 2 &nbsp</a></td>
<td><a href="03.htm" class=p>&nbsp 3 &nbsp</a></td>
<td><a href="04.htm" class=p>&nbsp 4 &nbsp</a></td>
<td><a href="05.htm" class=p>&nbsp 5 &nbsp</a></td>
<td><a href="06.htm" class=a>&nbsp 6 &nbsp</a></td>
</tr>
</table>
<a name=#end></a>
</body>
</html>