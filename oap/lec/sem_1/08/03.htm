<html>
<head>
<meta http-equiv=Content-Type content="text/html; charset=windows-1251">
<title>ОП | Лекция № 08</title>
<link rel=stylesheet type=text/css href=../../../css/lec.css>
</head>
<body>
<a name=#start></a>
<table class=pages align=center border=0 cellpadding=0 cellspacing=0>
<tr colspan=5>
<td>&nbsp&nbsp<a href="../../../plan_1.htm" class=p>Календарно-тематический план</a>&nbsp&nbsp</td>
<td><a href="index.htm" class=p>&nbsp План лекции &nbsp</a></td>
<td><a href="01.htm" class=p>&nbsp 1 &nbsp</a></td>
<td><a href="02.htm" class=p>&nbsp 2 &nbsp</a></td>
<td><a href="03.htm" class=a>&nbsp 3 &nbsp</a></td>
<td><a href="04.htm" class=p>&nbsp 4 &nbsp</a></td>
<td><a href="05.htm" class=p>&nbsp 5 &nbsp</a></td>
<td><a href="06.htm" class=p>&nbsp 6 &nbsp</a></td>
</tr>
</table>
<!-- -------Inside table------- -->
<table width=98% border=0 cellpadding=5 cellspacing=0>
<tr><td class=usual>
<p align=center class=dbi><br>Ввод и вывод символа</p>
<p><table width="95%" align="center" border=1 cellpadding=15 cellspacing=0>
<tr valign="top"><td width="50%">
<p align=center class=dbi><br>Ввод символа</p>
<p>Функции ввода символов считывают данные из потока ввода по одному символу.
Функции ввода символов по-разному выполняют буферизацию и дублирование вводимых символов.
<ul>
<li type="disc">Некоторые функции работают с буферизацией. Это означает, что операционная система хранит
символы во временном буфере памяти, пока не будет нажата клавиша &lt;Enter&gt;, и только после этого
символы попадают в поток ввода stdin.
<br>Другие функции работают без буферизации, то есть символ, вводимый с их помощью,
попадает в stdin немедленно после нажатия соответствующей символьной клавиши.
<p><li type="disc">Некоторые функции ввода дублируют каждый введенный символ, копируя его в поток stdout.
<br>Другие этого не делают, то есть символ фигурирует только в потоке stdin.
<br>Дублируемый символ появляется на экране, поскольку именно это устройство ассоциировано с потоком stdout.
</ul>
<p>&nbsp;</p>
<p><b><i>getch</i></b> - читает единственный символ с клавиатуры, не выдавая его на экран, у нее нет параметра ch.
<br>Функция вводит символы без буферизации и без дублирования на экране (без эхопечати).
<br>Эту функцию удобно использовать, когда необходимо продолжить работу программы при нажатии любой клавиши, она не требует дополнительного нажатия &ltEnter&gt;: 
<pre>	puts("Для продолжения нажми клавишу");
	getch();

<b>Синтаксис</b> int getch(void);
<b>Прототип</b> в conio.h
</pre>
<p><b><i>getchar</i></b> - макрокоманда, вводящая с клавиатуры единичный символ и возвращающая значение после нажатия Enter.
<br>Эта функция ожидает получения символа из потока stdin, буферизует ввод и дублирует символ на экране (с буферизацией и эхопечатью).
<br>Функция может быть использована для ввода целых строк, поскольку все введенные символы,
включая символ конца строки, посылаются операционной системой в поток stdin только после нажатия клавиши &lt;Enter&gt;.
<br>Чтобы ввести набор символов, то есть строку, надо использовать команду повторения - цикл:
<pre>
	// Пока не нажата Enter, вводить символы
	// затем выводить посимвольно из буфера
	while ((c = getchar()) != '\n')
		putchar(c);

</pre>
<p>На экран будет выведен весь набор символов, введенный с клавиатуры.
<pre>
<b>Синтаксис</b> int getchar(void);
<b>Прототип</b> в stdio.h
</pre>
<p><b><i>getche</i></b> - читает единственный символ с клавиатуры и одновременно отображает его в текущем текстовом окне на экране (с эхопечатью).
<br>Функция выводит введенный символ в поток stdout, остальном она практически не отличается от функции getch().
<pre>
<b>Синтаксис</b> int getche(void);
<b>Прототип</b> в conio.h
</pre>

<p>&nbsp;</p>
</td><td>
<p align=center class=dbi><br>Вывод символа</p>
<b><i>putchar</i></b> - выводит единичный символ на экран, на новую строку курсор не переводит.
<pre>
<b>Синтаксис</b> int putchar(int ch);
<b>Прототип</b> в stdio.h
</pre>
<p>Параметром функции может являться:
<ul>
<li>Символ:
<pre>
	putchar('k');
</pre>
<p><li>Символьная константа:
<pre>
	#define SIM 'k'
	putchar(SIM);
</pre>
<li>Символьная переменная:
<pre>
	char simw = 'y';
	putchar(simw);
</pre>
</ul>
<p>&nbsp;</p>
<p><b><i>putch</i></b> - выводит символ сh в текущее текстовое окно, аналогична функции 
putchar. 
<pre>
<b>Синтаксис</b> int putch(int ch);
<b>Прототип</b> в conio.h
</pre>
<p>Рассмотрим пример использования функций ввода-вывода символа.
<br>Скопируйте программу и сохраните ее в файле с именем 03_01.cpp
<pre>
	#include&lt;conio.h>
	#include&lt;stdio.h>
	void main( void )
	{
		clrscr();
		char c;
		c = getchar(); putchar(c);
	        
		getch();
	}
</pre>
<p>Проанализируем работу программы. Запустите программу на исполнение.
<ul type="disc">
<li>Введите набор символов и нажмите ENTER. Что выведено на экран? Почему из введенного набора символов выведен только первый символ?
<p><li>Измените putchar(c); на putch(c); и вновь исполните программу. Что изменилось? Сделайте вывод.
<p><li>Измените c = getchar(); на c = getche(); и исполните программу. Какой результат получили и почему?
<p><li>Измените c = getche(); на c = getch(); и вновь исполните программу. Чем отличается этот результат от предыдущего? Почему?
<p><li>Удалите последнюю строку программного кода и исполните программу. Сделайте вывод, какую роль играет команда getch(); в конце программы.
</ul>
<p>&nbsp;</p>
</td></tr>
</table>
<p>&nbsp;</p>
</td></tr>
</table>
<!-- -------End of Inside table------- -->
<table class=pages align=center border=0 cellpadding=0 cellspacing=0>
<tr colspan=5>
<td>&nbsp&nbsp<a href="../../../plan_1.htm" class=p>Календарно-тематический план</a>&nbsp&nbsp</td>
<td><a href="index.htm" class=p>&nbsp План лекции &nbsp</a></td>
<td><a href="01.htm" class=p>&nbsp 1 &nbsp</a></td>
<td><a href="02.htm" class=p>&nbsp 2 &nbsp</a></td>
<td><a href="03.htm" class=a>&nbsp 3 &nbsp</a></td>
<td><a href="04.htm" class=p>&nbsp 4 &nbsp</a></td>
<td><a href="05.htm" class=p>&nbsp 5 &nbsp</a></td>
<td><a href="06.htm" class=p>&nbsp 6 &nbsp</a></td>
</tr>
</table>
<a name=#end></a>
</body>
</html>