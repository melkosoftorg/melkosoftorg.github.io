<html>
<head>
<meta http-equiv=Content-Type content="text/html; charset=windows-1251">
<title>ОП | СР 13_14</title>
<link rel=stylesheet type=text/css href=../../../css/lec.css>
</head>
<body>
<a name=#start></a>
<table class=pages align=center border=0 cellpadding=0 cellspacing=0>
<tr colspan=5>
<td>&nbsp&nbsp<a href="../../../plan_1.htm" class=p>Календарно-тематический план</a>&nbsp&nbsp</td>
<td><a href="index.htm" class=p>&nbsp План лекции &nbsp</a></td>
<td><a href="01.htm" class=p>&nbsp 1 &nbsp</a></td>
<td><a href="02.htm" class=a>&nbsp 2 &nbsp</a></td>
<td><a href="03.htm" class=p>&nbsp 3 &nbsp</a></td>
<td><a href="04.htm" class=p>&nbsp 4 &nbsp</a></td>
<td><a href="05.htm" class=p>&nbsp 5 &nbsp</a></td>
<td><a href="06.htm" class=p>&nbsp 6 &nbsp</a></td>
<td><a href="07.htm" class=p>&nbsp 7 &nbsp</a></td>
<td><a href="08.htm" class=p>&nbsp 8 &nbsp</a></td>
<td><a href="09.htm" class=p>&nbsp 9 &nbsp</a></td>
<td><a href="10.htm" class=p>&nbsp 10 &nbsp</a></td>
<td><a href="11.htm" class=p>&nbsp 11 &nbsp</a></td>
</tr>
</table>
<!-- -------Inside table------- -->
<table width=98% border=0 cellpadding=5 cellspacing=0>
<!--tr><td class=rule>
Внимание!
<ol>В окнах такого цвета будут отображаться правила и примечания относительно 
лекционного материала
</ol></td></tr-->
<tr>
<td class=usual>
<p align=center class=dbi><br>Создание файла</p>
<b><i>creat</i></b> - создает новый файл или перезаписывает существующий файл, имя которого 
записано в строке, адресный указатель которого подается в аргументе filename.
<br><b>Синтаксис</b> int creat (char *filename, int permiss);
<br><b>Прототип</b> в io.h
<p>Переменная permiss применяется только для заново создаваемых файлов. <BR>Если файл уже 
существует, и включен атрибут записи, функция creat усекает файл до длины нуль байтов, 
оставляя неизменными атрибуты файлов. <br>Если существующий файл имеет атрибут 
"только чтение", вызов функции creat потерпит неудачу и файл останется неизменным. 
<p>Вызов функции creat проверяет только один бит в слове состояния доступа, поставляемом 
в переменной permiss. Это, употребляемый в системе UNIX бит индивидуального доступа 
на запись. <br>Если данный бит равен 1, файл может быть записан. <br>Если бит равен 0, для 
файла разрешено только чтение. Все остальные атрибуты MS-DOS устанавливаются 
равными нулю. <br>Переменная permiss может принимать одно из значений: 
<ul>
<li>S_IWRITE разрешение на запись,
<li>S_IREAD разрешение на чтение,
<li>S_IREAD | S_IWRITE разрешение на чтение и запись.
</ul>
<p><table align=center width=90% border=1 cellpadding=5 cellspacing=10>
<tr><td class=rule>
<b>Примечание:</b> в DOS разрешение на запись влечет за собой разрешение на чтение. 
</td></tr>
</table>
<p><b><i>_creat</i></b> - создает новый файл или перезаписывает существующий,
<br><b>Синтаксис</b> int _creat (char *filename, int attrib );
<br><b>Прототип</b> в io.h
<p>Файл, созданный с помощью функции _creat имеет всегда режим трансляции, 
соответствующий переменной _fmode ( O_TEXT или O_BINARY ). <br>Чтобы создать файл в 
заданном режиме трансляции, нужно либо присвоить соответствующее значение 
переменной _fmode, либо вызвать функцию open с опциями O_CREAT или O_TRUNC, 
объединенными посредством логического сложения "ИЛИ" с желаемым режимом 
трансляции. 
<p>Вызов: &nbsp &nbsp open("xmp",O_CREAT|O_TRUNC|O_BINARY,S_IREAD) <p>создает файл 
с именем XMP, с режимом доступа "только чтение" и бинарным режимом трансляции, 
причем, если он уже существует, длина его будет усечена до 0 байтов. 
<p>Функция _creat использует аргумент attrib, являющийся словом атрибутов системы MS-DOS. При вызове 
функции могут получить значение любые биты-атрибуты. <br>Файл всегда открывается в 
бинарном режиме. При успешном создании файла адресный указатель устанавливается на 
начало файла. Файл открывается и для чтения, и для записи.
<p><b><i>creatnew</i></b> - создает новый файл.
creatnew идентична функции _creat, за исключением того, что если файл уже существует, 
функция завершается с ошибкой и файл остается нетронутым.
<br><b>Синтаксис</b> int creatnew (char *filename, int attrib);
<br><b>Прототип</b> в io.h
<pre>
	#include&lt;stdlib.h&gt;
	#include&lt;errno.h&gt;
	#include&lt;dos.h&gt;
	#include&lt;io.h&gt;
	#include&lt;conio.h&gt;
	#include&lt;dir.h&gt;
	#include&lt;string.h&gt;
	#include&lt;stdio.h&gt;
	#include&lt;sys\stat.h&gt;
	#include&lt;fcntl.h&gt;
	void main()
	{
		int h;	// дескриптор - логический номер
		char buf[11] = "0123456789", *str = "MM.FIL", *p; 
		// Изменить режим в двоичный с текстового
		_fmode = O_BINARY;	
		// попытка создать несуществующий файл 
		h = creatnew(str, 0);
		// Создать двоичный файл для чтения и записи
		// h = creat(str, S_IREAD | S_IWRITE);
		p = searchpath(str);	// Маршрут доступа
		if (h == -1)
			printf("Файл %s уже существует %s дескриптор %d\n", 
				str, p, h);
		else
		{
			printf("Файл %s успешно создан %s дескриптор %d\n",
				str,p,h);
		 	// записывает данные в файл
			write(h, buf, strlen(buf));
			// закрыть файл, связанный с дескриптором файла h
			close(h);
		} getch();
	}
</pre>
<b><i>creattemp</i></b> - создает уникальный файл в указанной директории.
<br><b>Синтаксис</b> int creattemp(char *path, int attrib );
<br><b>Прототип</b> в io.h
<p>creattemp аналогична функции creat,за исключением того, что параметр path представляет 
собой маршрут доступа (PATH) и оканчивается знаком "обратный слеш" ( \ ). 
<br>С помощью аргумента path файл выбирается по уникальному имени. 
<br>Имя заново создаваемого файла записывается в символьную строку, поставляемую аргументом path, при этом path должен 
иметь достаточную длину, чтобы хранить результирующее имя файла. 
<br>При прекращении работы программы файл не удаляется автоматически. Файл всегда открывается в 
двоичном режиме. 
<br>При успешном создании файла указатель файла устанавливается на 
начало этого файла. Файл открывается сразу для чтения и для записи.
<pre>
	#include&lt;string.h&gt;
	#include&lt;stdio.h&gt;
	#include&lt;io.h&gt;
	#include&lt;conio.h&gt;
	#include&lt;dir.h&gt;
	void main()
	{
		int h;	// дескриптор - логический номер 
		char pat[128], *p;
		strcpy(pat, "\\");
		// создать уникальный файл в корневом каталоге 
		h = creattemp(pat, 0); p = searchpath(pat);
		printf("Файл %s создан %s дескриптор %d\n", pat, p, h);
		// закрыть файл, связанный с дескриптором файла h 
		close(h); getch();
	}
</pre>
Для функций creat, creatnew, creattemp аргумент attrib должен быть одной из констант, 
определенных в файле dos.h:
<UL>
<li>FA_RDONLY атрибут "только чтение";
<li>FA_HIDDEN атрибут "скрытый файл";
<li>FA_SYSTEM атрибут "системный файл".
</UL>
при успешном завершении возвращается неотрицательное целое число - новый 
логический номер файла; иначе возвращается значение -1. 
<p>При возникновении ошибки глобальная переменная errno получает одно из значений:
<UL>
<li>ENOENT - маршрут доступа или имя файла не найдены.
<li>EMFILE - слишком много открытых файлов.
<li>EACCESS - отказ доступа.
</UL
<p><b><i>mktemp</i></b> - создает уникальное имя файла.
<br><b>Синтаксис</b> char *mktemp(char *template);
<br><b>Прототип</b> в dir.h
<p>Функция mktemp помещает в параметр template уникальное имя файла и возвращает адрес 
template. 
<p>Параметр template должен представлять собой строку символов с нулевым 
окончанием и шестью хвостовыми символами x. Данные 6 знаков X заменяются 
уникальным сочетанием букв плюс точка таким образом, что две буквы, точка и три 
буквы суффикса дают в результате новое имя файла. 
<p>Новое имя файла присваивается 
после просмотра имеющихся имен на диске, начиная со значения AA.AAA, и избегая уже 
существующих имен в том же формате. 
<p>Если параметр template корректно сформирован, функция mktemp возвращает адрес символьной строки template. В противном случае, она 
не создает и не открывает файл.
<pre>
	#include&lt;stdio.h&gt;
	#include&lt;dir.h&gt;
	int main(void)
	{
		FILE *fp;
		// fname определяет маску для имени файла
		char *fname = "TXXXXXX", *newname, first;
		// mktemp - создает уникальное имя файла
		newname = mktemp(fname); fp = fopen(newname, "w+");
		fprintf(fp, "bcdefghijklmnopqrstuvwxyz");
		// Установить указатель в начало потока
		rewind(fp); fscanf(fp, "%c", &first);
		printf("Первый символ %c %s\n", first, searchpath(newname));
		fclose(fp);	// remove - удалить файл
		// remove(newname);
		return 0;
	}
</pre>
<p>
</td></tr>
</table>
<!-- -------End of Inside table------- -->
<table class=pages align=center border=0 cellpadding=0 cellspacing=0>
<tr colspan=5>
<td>&nbsp&nbsp<a href="../../../plan_1.htm" class=p>Календарно-тематический план</a>&nbsp&nbsp</td>
<td><a href="index.htm" class=p>&nbsp План лекции &nbsp</a></td>
<td><a href="01.htm" class=p>&nbsp 1 &nbsp</a></td>
<td><a href="02.htm" class=a>&nbsp 2 &nbsp</a></td>
<td><a href="03.htm" class=p>&nbsp 3 &nbsp</a></td>
<td><a href="04.htm" class=p>&nbsp 4 &nbsp</a></td>
<td><a href="05.htm" class=p>&nbsp 5 &nbsp</a></td>
<td><a href="06.htm" class=p>&nbsp 6 &nbsp</a></td>
<td><a href="07.htm" class=p>&nbsp 7 &nbsp</a></td>
<td><a href="08.htm" class=p>&nbsp 8 &nbsp</a></td>
<td><a href="09.htm" class=p>&nbsp 9 &nbsp</a></td>
<td><a href="10.htm" class=p>&nbsp 10 &nbsp</a></td>
<td><a href="11.htm" class=p>&nbsp 11 &nbsp</a></td>
</tr>
</table>
<a name=#end></a>
</body>
</html>