<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html><head>
  
  <meta http-equiv="Content-Type" content="text/html; charset=windows-1251">
  <title>ОП | Лекция № 1</title>

  
  
  <link rel="stylesheet" type="text/css" href="../../../css/lec.css">

</head><body>
<a name="#start"></a>
<table class="pages" align="center" border="0" cellpadding="0" cellspacing="0">

  <tbody>
    <tr>
      <td>&nbsp;&nbsp;<a href="../../../plan_1.htm" class="p">Календарно-тематический
план</a>&nbsp;&nbsp;</td>
      <td><a href="index.htm" class="p">&nbsp; План лекции &nbsp;</a></td>
      <td><a href="01.htm" class="a">&nbsp; 1 &nbsp;</a></td>
      <td><a href="02.htm" class="p">&nbsp; 2 &nbsp;</a></td>
      <td><a href="03.htm" class="p">&nbsp; 3 &nbsp;</a></td>
      <td><a href="04.htm" class="p">&nbsp; 4 &nbsp;</a></td>
    </tr>
  </tbody>
</table>

<!-- -------Inside table------- -->
<table border="0" cellpadding="5" cellspacing="0" width="98%">

  <tbody>
    <tr>
      <td class="usual">
      <p class="dbi" align="center"><br>
Понятие алгоритма и его свойства</p>
      <p>В основе решения любой задачи лежит понятие алгоритма.<br>
      </p>
      <p class="dbi">Под алгоритмом принято понимать "точное
предписание, определяющее вычислительный процесс, ведущий от
варьируемых начальных данных к искомому результату" (ГОСТ 19.781-74).</p>
      <p>Таким образом, алгоритм должен содержать конечную
последовательность шагов или операций, однозначно определяющих процесс
переработки исходных и промежуточных данных в искомый результат -
решение поставленной задачи. </p>
      <p>Слово алгоритм происходит от Algorithmi - латинской формы
написания имени узбекского ученого IX века Абдулла Мухаммед Бен аль
Хорезми из города Хорезма (Аль-Хорезми), который в своем труде
"Арифметический трактат", переведенном в XII веке с арабского на
латынь, изложил правила арифметических действий над числами в
позиционной десятичной системе счисления. <br>
Первоначально под алгоритмами понимали только правила выполнения
четырех арифметических действий над многозначными числами. <br>
Появившееся несколько позже слово "алгорифм" связано с именем
древнегреческого математика Евклида, назвавшего так сформулированные им
правила нахождения наибольшего общего делителя двух чисел: даны два
целых положительных числа A и B. Требуется найти их наибольший общий
делитель, то есть наибольшее положительное число, на которое делится
без остатка как A, так и B.
      <a name="01"></a></p>
      <p><b>Суть алгоритма Евклида можно представить следующими этапами:</b>
      </p>
      <ol>
        <li>Обозревая два числа A и B, переходи к следующему пункту.
        </li>
        <li>Сравни обозреваемые числа (A = B, A &lt; B, A &gt; B) и
переходи к следующему пункту.
        </li>
        <li>Если A и B равны, то прекрати вычисления: каждое из чисел
дает искомый результат. Если числа не равны, то переходи к следующему
пункту.
        </li>
        <li>Если первое число меньше второго, то переставь их местами;
переходи к следующему пункту.
        </li>
        <li>Вычитай второе число из первого, обозревай два числа:
вычитаемое и остаток; переходи к пункту 2.
        </li>
      </ol>
      <p>По указаниям этого алгоритма, можно найти наибольший общий
делитель для любой пары натуральных чисел.
      </p>
      <p>Человек ежедневно встречается с необходимостью следовать тем
или иным правилам, выполнять различные инструкции и указания. Например,
переходя через дорогу на перекрестке без светофора надо сначала
посмотреть налево. Если машин нет, то перейти полдороги, а если машины
есть, ждать, пока они пройдут, затем перейти полдороги. После этого
посмотреть направо и, если машин нет, то перейти дорогу до конца, а
если машины есть, ждать, пока они пройдут, а затем перейти дорогу до
конца. </p>
      <p>В математике для решения типовых задач мы используем
определенные правила, описывающие последовательности действий.
Например, правила сложения дробных чисел, решения квадратных уравнений
и так далее. Обычно любые инструкции и правила представляют собой
последовательность действий, которые необходимо выполнить в
определенном порядке. Для решения задачи надо знать, что дано, что
следует получить и какие действия и в каком порядке следует для этого
выполнить. Предписание, определяющее порядок выполнения действий над
данными с целью получения искомых результатов, и есть алгоритм. </p>
      <p>Решение большинства практических задач заключается в
последовательном выполнении достаточно простых отдельных законченных
действий. Если последовательность этих действий заранее сформулирована
и записана на языке, понятном исполнителю, то решить задачу по такому
предписанию не составит большого труда. Например, приготовление кофе,
изготовление стандартной детали на токарном станке, решение квадратного
уравнения, поиск слова в словаре, нахождение середины отрезка с
использованием циркуля и линейки и так далее. </p>
      <p class="dbi" align="center"><br>
Свойства алгоритмов</p>
      <p><b>Дискретность</b> - свойство алгоритма переходить к
выполнению следующего действия только после того, как закончено
предыдущее; обусловливает дискретный (пошаговый) характер процесса
получения результата, состоящий в последовательном выполнении конечного
числа заданных алгоритмом действий или команд.
      </p>
      <p><b>Точность</b> - свойство алгоритма, при котором исполнитель,
выполнив очередную команду, точно знает, какую команду надо выполнять
следующей.
      </p>
      <p><b>Понятность (для данного исполнителя)</b> - исполнитель
должен быть в состоянии выполнить каждую команду алгоритма в строгом
соответствии с ее назначением. Это свойство, называемое иначе
определенностью, требует чтобы каждая команда алгоритма (указание о
выполняемом на очередном шаге действии) была понятна исполнителю, не
оставляла бы место для ее неоднозначного понимания и неопределенного
исполнения.
      </p>
      <p><b>Результативность</b> - свойство алгоритма приводить к
получению результата после выполнения над исходными данными заданной
алгоритмом последовательности действий. Одно из возможных решений -
установление факта, что задача решения не имеет.
      </p>
      <p><b>Массовость</b> означает, что если алгоритм разработан для
решения определенной задачи, то он должен быть применим для решения
задач этого типа при всех допустимых значениях исходных данных. То
есть, с помощью одного и того же алгоритма можно решать однотипные
задачи и делать это неоднократно.
      </p>
      <p>Если алгоритм рассматривать как совокупность предписаний по
выполнению действий, то всегда необходимо выделить те объекты, над
которыми должны осуществляться предписанные действия. Таковыми
объектами являются данные.
      </p>
      <p>&nbsp;</p>
      </td>
    </tr>
  </tbody>
</table>

<!-- -------End of Inside table------- -->
<table class="pages" align="center" border="0" cellpadding="0" cellspacing="0">

  <tbody>
    <tr>
      <td>&nbsp;&nbsp;<a href="../../../plan_1.htm" class="p">Календарно-тематический
план</a>&nbsp;&nbsp;</td>
      <td><a href="index.htm" class="p">&nbsp; План лекции &nbsp;</a></td>
      <td><a href="01.htm" class="a">&nbsp; 1 &nbsp;</a></td>
      <td><a href="02.htm" class="p">&nbsp; 2 &nbsp;</a></td>
      <td><a href="03.htm" class="p">&nbsp; 3 &nbsp;</a></td>
      <td><a href="04.htm" class="p">&nbsp; 4 &nbsp;</a></td>
    </tr>
  </tbody>
</table>

<a name="#end"></a>
</body></html>