<html>
<head>
<meta http-equiv=Content-Type content="text/html; charset=windows-1251">
<title>ОП | Лекция № 33</title>
<link rel=stylesheet type=text/css href=../../../css/lec.css>
</head>
<body>
<a name=#start></a>
<table class=pages align=center border=0 cellpadding=0 cellspacing=0>
<tr colspan=5>
<td>&nbsp&nbsp<a href="../../../plan_2.htm" class=p>Календарно-тематический план</a>&nbsp&nbsp</td>
<td><a href="index.htm" class=p>&nbsp План лекции &nbsp</a></td>
<td><a href="01.htm" class=a>&nbsp 1 &nbsp</a></td>
<td><a href="02.htm" class=p>&nbsp 2 &nbsp</a></td>
<td><a href="03.htm" class=p>&nbsp 3 &nbsp</a></td>
<td><a href="04.htm" class=p>&nbsp 4 &nbsp</a></td>
<td><a href="05.htm" class=p>&nbsp 5 &nbsp</a></td>
<td><a href="06.htm" class=p>&nbsp 6 &nbsp</a></td>
</tr>
</table>
<!-- -------Inside table------- -->
<table width=98% border=0 cellpadding=5 cellspacing=0>
<tr>
<td class=usual>
<p align=center class=dbi><br>Копирование</p>
<b><i>stpcpy</i></b> копирует одну символьную строку в другую,
<br><b><i>strcpy</i></b> копирует одну символьную строку в другую,
<pre>
<b>Синтаксис</b>	char *stpcpy(char *dest, char *src);
		char *strcpy(char *dest, char *src);
<b>Прототип в</b>	string.h
</pre>
stpcpy копирует байты из строки src в строку dest и останавливается после 
передачи нулевого окончания строки src.
<br>Обращение к функции stpcpy(a, b) - это то же самое, что strcpy(a, b), за 
исключением того, что возвращаемые значения отличаются друг от друга:
<ul>
<li>strcpy(a, b) возвращает a,
<li>stpcpy(a, b) возвращает a + strlen(b).
</ul>
<pre>
	#include&lt;stdio.h&gt;
	#include&lt;string.h&gt;
	#include&lt;conio.h&gt;
	main()
	{	char str[30], des[30], at[10];
		char *strl = "abcdefghi";
		char *atl = "123456789";
		char *blank = " ", *c = "C++", 
		*turbo = "Turbo"; clrscr();
		stpcpy(str, strl); printf("%s	%s\n\n", str, strl);
		strcpy(at, atl); printf("%s	%s\n\n", at, atl);
		strcpy(des, turbo); printf("%s", des); getch();
		strcpy(des, blank); printf("%s", des); getch();
		strcpy(des, c); printf("%s\n", des);
		getch(); return 0;
	}

	<b><i>Результат</i></b>	abcdefghi   abcdefghi

			123456789   123456789

			Turbo C++

</pre>
<b><i>strncpy</i></b> копирует точно maxlen символов из строки src в dest, если 
потребуется, усекая или добавляя нули в dest. <br>Целевая строка dest может не 
иметь нулевого окончания, если длина строки src - это maxlen или более. strncpy 
возвращает аргумент dest.
<P><b>Синтаксис</b> char * strncpy(char *dest, char *src, int maxlen);
<br><b>Прототип</b> в string.h
<pre>
	#include&lt;stdio.h&gt;
	#include&lt;string.h&gt;
	#include&lt;conio.h&gt;
	main()
	{	char str[25];
		char *strl = "abcdefghi";
		strncpy(str, strl, 5); clrscr();
		printf("%s	%s", strl, str);
		getch(); return 0;
	}

	<b><i>Результат</i></b>	abcdefghi   abcde

</pre>
<b><i>strdup</i></b> копирует строку по новому адресу в память (дублирует строку), 
получает дубль строки str, выделяя память с помощью функции malloc. 
<br>Пространство, выделенное для копии, имеет длину (strlen(str) + 1) байт. strdup 
возвращает указатель на область памяти, содержащую дубль строки str, или 
NULL, если память не может быть выделена.
<p><b>Синтаксис</b> char *strdup(char *str);
<br><b>Прототип</b> в string.h
<pre>
	#include&lt;stdio.h&gt;
	#include&lt;string.h&gt;
	#include&lt;alloc.h&gt;
	#include&lt;conio.h&gt;
	main()
	{	char *dup_str, *str = "abcde"; clrscr();
		dup_str = strdup(str);
		printf("str	%s адрес %u\n", str, &str);
		printf("dup_str %s адрес %u\n", dup_str, &dup_str);
		// освобождает память, выделенную под блок
		free(dup_str);
		getch(); return 0;
	}

	<b><i>Результат</i></b>	str abcde адрес 4088
			dup_str abcde адрес 4092

</pre>
<b><i>strxfrm</i></b> копирует часть строки не больше n символов из строки str1 в 
строку str2 и возвращает число скопированных байт.
<p><b>Синтаксис</b> size_t strxfrm(char *str1, char *str2, size_t n);
<br><b>Прототип</b> в string.h
<pre>
	#include&lt;string.h&gt;
	#include&lt;stdio.h&gt;
	#include&lt;alloc.h&gt;
	#include&lt;conio.h&gt;
	main()
	{	char *ptr, *str = "Frank Borland";
		int len; clrscr();
		printf("%s\n", str);
		// выделить место для строки
		ptr = (char *) calloc(80, sizeof(char));
		// скопировать строку и получить ее длину
		len = strxfrm(ptr, str, 80);
		printf("%s, длиной %d байт \n", ptr, len);
		getch(); return 0;
	}
	<b><i>Результат</i></b>	Frank Borland
			Frank Borland, длиной 13 байт

</pre><p>
</td></tr>
</table>
<!-- -------End of Inside table------- -->
<table class=pages align=center border=0 cellpadding=0 cellspacing=0>
<tr colspan=5>
<td>&nbsp&nbsp<a href="../../../plan_2.htm" class=p>Календарно-тематический план</a>&nbsp&nbsp</td>
<td><a href="index.htm" class=p>&nbsp План лекции &nbsp</a></td>
<td><a href="01.htm" class=a>&nbsp 1 &nbsp</a></td>
<td><a href="02.htm" class=p>&nbsp 2 &nbsp</a></td>
<td><a href="03.htm" class=p>&nbsp 3 &nbsp</a></td>
<td><a href="04.htm" class=p>&nbsp 4 &nbsp</a></td>
<td><a href="05.htm" class=p>&nbsp 5 &nbsp</a></td>
<td><a href="06.htm" class=p>&nbsp 6 &nbsp</a></td>
</tr>
</table>
<a name=#end></a>
</body>
</html>