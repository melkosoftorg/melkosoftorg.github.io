<html>
<head>
<meta http-equiv=Content-Type content="text/html; charset=windows-1251">
<title>ОП | Лекция № 40</title>
<link rel=stylesheet type=text/css href=../../../css/lec.css>
</head>
<body>
<a name=#start></a>
<table class=pages align=center border=0 cellpadding=0 cellspacing=0>
<tr colspan=5>
<td>&nbsp&nbsp<a href="../../../plan_2.htm" class=p>Календарно-тематический план</a>&nbsp&nbsp</td>
<td><a href="index.htm" class=p>&nbsp План лекции &nbsp</a></td>
<td><a href="01.htm" class=p>&nbsp 1 &nbsp</a></td>
<td><a href="02.htm" class=p>&nbsp 2 &nbsp</a></td>
<td><a href="03.htm" class=p>&nbsp 3 &nbsp</a></td>
<td><a href="04.htm" class=p>&nbsp 4 &nbsp</a></td>
<td><a href="05.htm" class=a>&nbsp 5 &nbsp</a></td>
<td><a href="06.htm" class=p>&nbsp 6 &nbsp</a></td>
<td><a href="07.htm" class=p>&nbsp 7 &nbsp</a></td>
</tr>
</table>
<!-- -------Inside table------- -->
<table width=98% border=0 cellpadding=5 cellspacing=0>
<tr>
<td class=usual>
<p align=center class=dbi><br>Доступ к нужным битам</p>
<p>Битовые поля в объединениях используются для доступа к нужным битам того или иного 
объекта, входящего в объединение. <br>Например, сформируем код символа D, равный 68.
<pre>			union
			{
				char ss;
				struct
				{
					int x : 5;
					int y : 3;
				} hh;
			} cod;
			// Вывод символа D
			cod.hh.x = 4; cod.hh.y = 2; cout << cod.ss; 

Ниже показано формирование кода 68, соответствующего символу D

	Номера битов:	7    6    5    4    3    2    1    0
			0    1    0    0    0    1    0    0
	Битовые поля:     |  cod.hh.y  |      cod.hh.x          |
	Элемент char:		char ss
</pre>
<p>В следующем примере показано, как можно получить значение кода символа в десятичной системе счисления, а также значение каждого бита в его двоичном представлении.
<p><table align=center width=90% border=1 cellpadding=5 cellspacing=10>
<tr><td class=rule>
<b>Примечание:</b> перевод двоичного числа 01000110<sub>2</sub> в десятичную систему счисления имеет вид 
<pre>
	Номера битов:	7  6  5  4  3  2  1  0
	Значения битов:	0  1  0  0  0  1  1  0
</pre>
<p>01000110<sub>2</sub> =
 0&nbsp;&#8729;&nbsp;2<sup>7</sup> + 1&nbsp;&#8729;&nbsp;2<sup>6</sup> + 
 0&nbsp;&#8729;&nbsp;2<sup>5</sup> + 0&nbsp;&#8729;&nbsp;2<sup>4</sup> +
 0&nbsp;&#8729;&nbsp;2<sup>3</sup> + 1&nbsp;&#8729;&nbsp;2<sup>2</sup> +
 1&nbsp;&#8729;&nbsp;2<sup>1</sup> + 0&nbsp;&#8729;&nbsp;2<sup>0</sup> =
 0 + 64 + 0 + 0 + 0 + 4 + 2 + 0 = 70
</td></tr>
</table>
<pre>
	#include&lt;iostream.h>
	#include&lt;conio.h>
	void main()
	{
		unsigned char ch = 'F'; clrscr();
		union
		{	unsigned char ss;
			struct
			{	unsigned a0 : 1;
				unsigned a1 : 1;
				unsigned a2 : 1;
				unsigned a3 : 1;
				unsigned a4 : 1;
				unsigned a5 : 1;
				unsigned a6 : 1;
				unsigned a7 : 1;
			} byte;
		} cod;
		cod.ss = ch;	// Занести значение параметра в объединение
		// Выводим биты внутреннего кода значения параметра
		cout << "Символ " << ch << " имеет десятичный код " << ch - '\0' << "\n";
		cout << "\nНомера битов:   7  6  5  4  3  2  1  0";
		cout << "\nЗначения битов:";
		cout << "\t" << cod.byte.a7 << "  " << cod.byte.a6;
		cout << "  " << cod.byte.a5 << "  " << cod.byte.a4;
		cout << "  " << cod.byte.a3 << "  " << cod.byte.a2;
		cout << "  " << cod.byte.a1 << "  " << cod.byte.a0 << endl;
		getch();
	}
	<i>Результат:</i>
		Символ F имеет десятичный код 70

		Номера битов:	7  6  5  4  3  2  1  0
		Значения битов:	0  1  0  0  0  1  1  0
</pre>
<p>&nbsp;</p>
</td></tr>
</table>
<!-- -------End of Inside table------- -->
<table class=pages align=center border=0 cellpadding=0 cellspacing=0>
<tr colspan=5>
<td>&nbsp&nbsp<a href="../../../plan_2.htm" class=p>Календарно-тематический план</a>&nbsp&nbsp</td>
<td><a href="index.htm" class=p>&nbsp План лекции &nbsp</a></td>
<td><a href="01.htm" class=p>&nbsp 1 &nbsp</a></td>
<td><a href="02.htm" class=p>&nbsp 2 &nbsp</a></td>
<td><a href="03.htm" class=p>&nbsp 3 &nbsp</a></td>
<td><a href="04.htm" class=p>&nbsp 4 &nbsp</a></td>
<td><a href="05.htm" class=a>&nbsp 5 &nbsp</a></td>
<td><a href="06.htm" class=p>&nbsp 6 &nbsp</a></td>
<td><a href="07.htm" class=p>&nbsp 7 &nbsp</a></td>
</tr>
</table>
<a name=#end></a>
</body>
</html>