<html>
<head>
<meta http-equiv=Content-Type content="text/html; charset=windows-1251">
<title>ОП | Лекция № 21</title>
<link rel=stylesheet type=text/css href=../../../css/lec.css>
</head>
<body>
<a name=#start></a>
<table class=pages align=center border=0 cellpadding=0 cellspacing=0>
<tr>
<td>&nbsp&nbsp<a href="../../../plan_1.htm" class=p>Календарно-тематический план</a>&nbsp&nbsp</td>
<td><a href="index.htm" class=p>&nbsp План лекции &nbsp</a></td>
<td><a href="01.htm" class=a>&nbsp 1 &nbsp</a></td>
<td><a href="02.htm" class=p>&nbsp 2 &nbsp</a></td>
<td><a href="03.htm" class=p>&nbsp 3 &nbsp</a></td>
<td><a href="04.htm" class=p>&nbsp 4 &nbsp</a></td>
</tr>
</table>
<!-- -------Inside table------- -->
<table width=98% border=0 cellpadding=5 cellspacing=0>
<tr><td class=usual>
<p align=center class=dbi><br>Операторы switch ... case ... default ... break</p>
<p>Часто бывает необходимо построить длинные конструкции типа:
<p><center><table width="70%" align="center">
<tr valign="top"><td width="50%" align="left">
<pre>
	if (sc == 'a')
		printf("Игра продолжается\n");
	else	if (sc == 'b')
			printf("Начни сначала\n");
		else	if (sc == 'c')
				printf("Подумай еще раз\n");
			else	if (sc == 'd')
					printf("Тебе сегодня не везет\n");
</pre>
</td><td align="center"><img src="if_s1.gif" alt="Вложенные ветвления" ismap>
</td></tr></table></center>
<p>Подобная ситуация встречается настолько часто, что в C была введена 
специальная управляющая структура которая носит название оператор switch. 
<p><b>Переключатель switch</b> представляет собой структуру, построенную по принципу 
меню, содержит возможные варианты условий и инструкции, которые следует 
выполнить в каждом конкретном случае.
<br>В круглых скобках после переключателя 
switch находится переменная типа int или char, следом расположен блок 
инструкций, заключенных в фигурные скобки, содержащих ряд ветвей case.

<p><center><table width="70%" align="center">
<tr valign="top"><td width="40%" align="left">
<pre>
switch (выражение)
{       	
	case n1:	инструкции;
		break; 
	case n2:	инструкции;
		break;
	<b>...</b>
	case nn:	инструкции;
		break;
	default:	инструкции;
		break;
}
</pre>
</td><td><img src="case.gif" alt="Множественный выбор" ismap>
</td></tr></table></center>
<p>Каждая ветвь case помечена одной или несколькими целочисленными константами 
или константными выражениями, заключенными в апострофы.
<p>Вычисления начинаются с той ветви case, в которой константа совпадает со значением выражения. 
<br>Константы всех ветвей case должны отличаться друг от друга.
<p>Если выяснится, что ни одна из констант не подходит, то выполняется ветвь, помеченная словом 
default, если она имеется, в противном случае ничего не делается и происходит 
переход к оператору, расположенному за оператором switch.
<p>Ветви case и default можно располагать в любом порядке.
<p>Для завершения данного case необходимо использовать оператор break.
<br>В противном случае будут выполняться последовательно все операторы, относящиеся 
к другим меткам (до тех пор, пока не встретится оператор break).
<p>Если надо получить одинаковый результат при переходе к разным меткам, можно использовать 
метки без операторов.
<p>Рассмотрим несколько примеров использования переключателя для организации множественного выбора.
<p><i>Пример 1.</i> Найти наибольшее из двух действительных чисел.
<pre>
	#include&lt;iostream.h>
	#include&lt;conio.h>
	void main()
	{
		clrscr();
		int x, y, max;
		cout << "Введите два неравных целых числа "; cin >> x >> y;
		// значение условия или 1 (истина), или 0 (ложь)
		switch (x > y)
		{
			case 1: max = x; break;
			case 0: max = y; break;
		}
		cout << "Максимальное из них есть " << max;
		getch();
	}
</pre>
<p><i>Пример 2.</i> В старояпонском календаре был принят двенадцатилетний цикл. Годы внутри цикла носили названия животных: крысы, коровы, тигра, зайца, дракона, змеи, лошади, овцы, обезьяны, петуха, собаки и свиньи.
<br>Написать программу, которая позволяет ввести номер года и печатает его название по старояпонскому календарю.
<br>Справка: 1996 г. — год крысы — начало очередного цикла.
<br>Поскольку цикл является двенадцатилетним, поставим название года в соответствие остатку от деления номера этого года на 12.
<pre>
	#include&lt;iostream.h>
	#include&lt;conio.h>
	void main()
	{
		clrscr();
		int year;
		cout << "введите год: "; cin >> year;
		// значение - числа от 0 до 11
		switch (year % 12)
		{
			case 0: cout << "Год Обезьяны"; break;
			case 1: cout << "Год Петуха"; break;
			case 2: cout << "Год Собаки"; break;
			case 3: cout << "Год Свиньи"; break;
			case 4: cout << "Год Крысы"; break;
			case 5: cout << "Год Коровы"; break;
			case 6: cout << "Год Тигра"; break;
			case 7: cout << "Год Зайца"; break;
			case 8: cout << "Год Дракона"; break;
			case 9: cout << "Год Змеи"; break;
			case 10: cout << "Год Лошади"; break;
			case 11: cout << "Год Овцы"; break;
		}	
		getch();
	}
</pre>
<p><i>Пример 3.</i> Выбери животное.
<br>В программе в качестве константного выражения, значение которого вводится 
командой ch&nbsp;=&nbsp;getchar(), использованы буквы нижнего регистра русского алфавита. 
<br>Цикл с предусловием while может оказаться не выполненным ни разу, если первым 
введенным символом окажется #.
<p>Каждый введенный символ последовательно анализируется. Когда  
символ не является символом русского алфавита нижнего регистра, 
получаем ответ: Я распознаю только строчные русские буквы (в примере s, Ф). 
<br>Если символ - константное выражение оператора case (в примере а, г, в), 
выводится сообщение о животном.
<br>Если символ русского алфавита нижнего регистра, но не константное 
выражение оператора case (в примере ы), ответ: Это трудная задача!
<p>Программа не завершила свою работу, ждет ввода следующего символа, 
поскольку мы не ввели # - условие окончания цикла.
<pre>
#include&lt;conio.h>
#include&lt;stdio.h>
main()
{
	char ch; clrscr();
	printf("Введите букву алфавита, а я укажу название животного,");
	printf("\nначинающееся с нее. Для завершения работы введите #.\n");
	while((ch = getchar()) != '#')	// условие окончания работы программы 
	{
		if(ch != '\n')		// пропуск символа новая строка
		{
		&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if(ch >= 'а' && ch <= 'я')	// только строчные буквы
			&nbsp;&nbsp;&nbsp;&nbsp;switch(ch)
			&nbsp;&nbsp;&nbsp;&nbsp;{
				case 'а': printf("аргали, дикий горный азиатский баран\n"); 
					&nbsp;&nbsp;break;
				case 'б': printf("бабирусса, дикая малайская свинья\n");
					&nbsp;&nbsp;break;
				case 'в': printf("выхухоль, водоплавающий крот\n");
					&nbsp;&nbsp;break;
				case 'г': printf("гиббон, длиннорукая обезьяна\n");
					&nbsp;&nbsp;break;
				default:  printf("Это трудная задача!\n"); break;
			&nbsp;&nbsp;&nbsp;&nbsp;}
		&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;else
			printf("Я распознаю только строчные русские буквы.\n");
		&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;printf("Введите, пожалуйста, следующую букву или #.\n");
		} // конец if, пропускающего символ новая строка
	} // конец цикла while
	getch(); return 0;
}
</pre>
<p>При работе программы можно получить следующий результат:
<pre>
	Введите букву аафавита, а я укажу название животного,
	начинающееся с нее.Для завершения работы введите #.
	sФагвы &lt;Enter>
	Я распознаю только строчные русские буквы.
	Введите, пожалуйста, следующую букву или #.
	Я распознаю только строчные русские буквы.
	Введите, пожалуйста, следующую букву или #.
	аргали, дикий горный азиатский баран
	Введите, пожалуйста, следующую букву или #.
	гиббон, длиннорукая обезьяна
	Введите, пожалуйста, следующую букву или #.
	выхухоль, водоплавающий крот
	Введите, пожалуйста, следующую букву или #.
	Это трудная задача!
	Введите, пожалуйста, следующую букву или #.
</pre>
<p>&nbsp;</p>
</td></tr>
</table>
<!-- -------End of Inside table------- -->
<table class=pages align=center border=0 cellpadding=0 cellspacing=0>
<tr>
<td>&nbsp&nbsp<a href="../../../plan_1.htm" class=p>Календарно-тематический план</a>&nbsp&nbsp</td>
<td><a href="index.htm" class=p>&nbsp План лекции &nbsp</a></td>
<td><a href="01.htm" class=a>&nbsp 1 &nbsp</a></td>
<td><a href="02.htm" class=p>&nbsp 2 &nbsp</a></td>
<td><a href="03.htm" class=p>&nbsp 3 &nbsp</a></td>
<td><a href="04.htm" class=p>&nbsp 4 &nbsp</a></td>
</tr>
</table>
<a name=#end></a>
</body>
</html>