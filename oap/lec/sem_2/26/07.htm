<html>
<head>
<meta http-equiv=Content-Type content="text/html; charset=windows-1251">
<title>ОП | Лекция № 26</title>
<link rel=stylesheet type=text/css href=../../../css/lec.css>
</head>
<body>
<a name=#start></a>
<table class=pages align=center border=0 cellpadding=0 cellspacing=0>
<tr colspan=5>
<td>&nbsp&nbsp<a href="../../../plan_2.htm" class=p>Календарно-тематический план</a>&nbsp&nbsp</td>
<td><a href="index.htm" class=p>&nbsp План лекции &nbsp</a></td>
<td><a href="01.htm" class=p>&nbsp 1 &nbsp</a></td>
<td><a href="02.htm" class=p>&nbsp 2 &nbsp</a></td>
<td><a href="03.htm" class=p>&nbsp 3 &nbsp</a></td>
<td><a href="04.htm" class=p>&nbsp 4 &nbsp</a></td>
<td><a href="05.htm" class=p>&nbsp 5 &nbsp</a></td>
<td><a href="06.htm" class=p>&nbsp 6 &nbsp</a></td>
<td><a href="07.htm" class=a>&nbsp 7 &nbsp</a></td>
</tr>
</table>
<!-- -------Inside table------- -->
<table width=98% border=0 cellpadding=5 cellspacing=0>
<tr>
<td class=usual>
<p align=center class=dbi><br>Операции C++, <br>связанные с динамическим распределением памяти</p>
<p>В языке C++ появились две унарные операции, связанные с динамическим распределением памяти. 
Операция
<pre>
			new имя_типа 
</pre>
или
<pre>
 			new имя_типа инициализатор 
</pre>
<p>позволяет выделить и сделать доступным свободный участок в основной памяти, размеры 
которого соответствуют типу данных, определяемому именем типа. 
<p><b><i>Продолжительность существования выделенного участка памяти</i></b> - от точки создания до конца программы или 
до явного его освобождения оператором delete указатель.
<p>Программа иллюстрирует возможность динамического выделения последовательно трех 
участков памяти одним указателем целого типа.
<pre>
	#include&lt;iostream.h&gt;
	#include&lt;conio.h&gt;
	main()
	{
		int *i;      // определение указателя
		int a = 8; clrscr();
		// выделить участок памяти 2 байта и
		// инициализировать целым значением 8
		i = new int(a);
		cout << "\n *i = " << *i << "\t i = " << i;
		i = new int(a / 4);
		cout << "\n *i = " << *i << "\t i = " << i;
		i = new int(2 * *i);                   
		cout << "\n *i = " << *i << "\t i = " << i;
		delete i;    // освободить участок памяти
		cout << "\n После освобождения памяти";
		cout << "\n *i = " << *i << "\t i = " << i;
		getch(); return 0;
	}
		Результаты	*i = 8   i = 0x913d0004
				*i = 2   i = 0x913e0004
				*i = 4   i = 0x913f0004
				После освобождения памяти
				*i =4   i =0x913f0004
</pre>
<p>&nbsp;</p>
</td></tr>
</table>
<!-- -------End of Inside table------- -->
<table class=pages align=center border=0 cellpadding=0 cellspacing=0>
<tr colspan=5>
<td>&nbsp&nbsp<a href="../../../plan_2.htm" class=p>Календарно-тематический план</a>&nbsp&nbsp</td>
<td><a href="index.htm" class=p>&nbsp План лекции &nbsp</a></td>
<td><a href="01.htm" class=p>&nbsp 1 &nbsp</a></td>
<td><a href="02.htm" class=p>&nbsp 2 &nbsp</a></td>
<td><a href="03.htm" class=p>&nbsp 3 &nbsp</a></td>
<td><a href="04.htm" class=p>&nbsp 4 &nbsp</a></td>
<td><a href="05.htm" class=p>&nbsp 5 &nbsp</a></td>
<td><a href="06.htm" class=p>&nbsp 6 &nbsp</a></td>
<td><a href="07.htm" class=a>&nbsp 7 &nbsp</a></td>
</tr>
</table>
<a name=#end></a>
</body>
</html>