<html>
<head>
<meta http-equiv=Content-Type content="text/html; charset=windows-1251">
<title>ОП | Лекция № 23</title>
<link rel=stylesheet type=text/css href=../../../css/lec.css>
</head>
<body>
<a name=#start></a>
<table class=pages align=center border=0 cellpadding=0 cellspacing=0>
<tr>
<td>&nbsp&nbsp<a href="../../../plan_1.htm" class=p>Календарно-тематический план</a>&nbsp&nbsp</td>
<td><a href="index.htm" class=p>&nbsp План лекции &nbsp</a></td>
<td><a href="01.htm" class=a>&nbsp 1 &nbsp</a></td>
<td><a href="02.htm" class=p>&nbsp 2 &nbsp</a></td>
<td><a href="03.htm" class=p>&nbsp 3 &nbsp</a></td>
<td><a href="04.htm" class=p>&nbsp 4 &nbsp</a></td>
<td><a href="05.htm" class=p>&nbsp 5 &nbsp</a></td>
</tr>
</table>
<!-- -------Inside table------- -->
<table width=98% border=0 cellpadding=5 cellspacing=0>
<tr><td class=usual><p align=center class=dbi><br>Составные алгоритмы и итерационные циклы</p>
<p>Очень часто в программах одновременно присутствуют несколько базовых алгоритмических структур (следование, ветвление, цикл), соединенных между собой либо последовательно, либо вложенно.
<br>Например, чтобы построить изображение бокала потребуется три последовательных цикла for, тело каждого из которых будет выполнено определенное количество раз.
<pre>
	int x, y, dx, dy;
	setcolor(15);
	for(dx = 15; dx > 1; dx--)
	{
		x = 80 * cos(M_PI / dx); y = getmaxy() / 2 + 80 * sin(M_PI / dx);
		ellipse(3 * getmaxx() / 4, y + 10, 0, 360, x, .3 * x);
	}
	dy = y;
	for(dx = 10; dx <= 65; dx += 5)
	{
		x = 300 / dx;
		ellipse(3 * getmaxx() / 4, dy + dx, 0, 360, x, .3 * x);
	}
	dy += dx;
	for(dx = 2; dx <= 10; dx++)
	{
		x = 2 * exp(dx / 3);
		ellipse(3 * getmaxx() / 4, dy + dx, 0, 360, x, .3 * x);
	}
</pre>
<p>При решении следующей задачи: "Определить количество натуральных чисел, рассматривая их в порядке возрастания, сумма кубов которых не превышает 50000" - количество повторений тела цикла не известно.
<p><b>Итерационный цикл</b> - это цикл, для которого число повторений тела цикла заранее не известно.
<p>В итерационных циклах на каждом шаге вычислений происходит последовательное приближение и проверка условия достижения искомого результата. Выход из итерационного цикла осуществляется в случае выполнения заданного условия.
<br>Различают итерационные циклы с предусловиями и с постусловиями. В языке программирования это циклы while и do...while.
<p>Программный код для задачи по накоплению суммы кубов с циклами while и do...while показан ниже.
<p><table width="90%" align=center border=0>
<tr valign="top"><td width="50%">
<pre>
#include&lt;conio.h>
#include&lt;iostream.h>
void main()
{
	clrscr();
	unsigned int i = 0, s = 0;
	while(s < 50000)
	{
		i++;
		s += i * i * i;
		cout << i << '\t' << s << endl;
	}
	cout << "kol = " << (i - 1) ;
	getch();
}
</pre>
</td><td>
<pre>
#include&lt;conio.h>
#include&lt;iostream.h>
void main()
{
	clrscr();
	unsigned int i = 0, s = 0;
	do
	{
		i++;
		s += i * i * i;
		cout << i << '\t' << s << endl;
	} while(s < 50000);
	cout << "kol = " << (i - 1) ;
</pre>
</td></tr>
</table>
<p>Вычислено будет для 21 значения i, но в качестве результата будет выведено значение 20, то есть (i - 1).
<br>Переменная-счётчик увеличивается после того, как проверяется условие цикла, а значит и результат получится на единицу больше. Удостовериться в этом можно, добавив в тело цикла вывод промежуточных результатов.
<p>Далее рассматриваются циклы for, do...while и while с вложенными в них ветвлениями.
<p>&nbsp;</p>
</td></tr>
</table>
<!-- -------End of Inside table------- -->
<table class=pages align=center border=0 cellpadding=0 cellspacing=0>
<tr>
<td>&nbsp&nbsp<a href="../../../plan_1.htm" class=p>Календарно-тематический план</a>&nbsp&nbsp</td>
<td><a href="index.htm" class=p>&nbsp План лекции &nbsp</a></td>
<td><a href="01.htm" class=a>&nbsp 1 &nbsp</a></td>
<td><a href="02.htm" class=p>&nbsp 2 &nbsp</a></td>
<td><a href="03.htm" class=p>&nbsp 3 &nbsp</a></td>
<td><a href="04.htm" class=p>&nbsp 4 &nbsp</a></td>
<td><a href="05.htm" class=p>&nbsp 5 &nbsp</a></td>
</tr>
</table>
<a name=#end></a>
</body>
</html>