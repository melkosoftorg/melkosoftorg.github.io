<html>
<head>
<meta http-equiv=Content-Type content="text/html; charset=windows-1251">
<title>ОАП | Лекция № 34</title>
<link rel=stylesheet type=text/css href=../../../css/lec.css>
</head>
<body>
<a name=#start></a>
<table class=pages align=center border=0 cellpadding=0 cellspacing=0>
<tr colspan=5>
<td>&nbsp&nbsp<a href="../../../plan_2.htm" class=p>Тематический план</a>&nbsp&nbsp</td>
<td><a href="index.htm" class=p>&nbsp План лекции &nbsp</a></td>
<td><a href="01.htm" class=p>&nbsp 1 &nbsp</a></td>
<td><a href="02.htm" class=p>&nbsp 2 &nbsp</a></td>
<td><a href="03.htm" class=p>&nbsp 3 &nbsp</a></td>
<td><a href="04.htm" class=p>&nbsp 4 &nbsp</a></td>
<td><a href="05.htm" class=a>&nbsp 5 &nbsp</a></td>
<td><a href="06.htm" class=p>&nbsp 6 &nbsp</a></td>
<td><a href="07.htm" class=p>&nbsp 7 &nbsp</a></td>
<td>&nbsp&nbsp<a href="#end" class=p>Конец страницы</a>&nbsp&nbsp</td>
</tr>
</table>
<!-- -------Inside table------- -->
<table width=98% border=0 cellpadding=5 cellspacing=0>
<tr>
<td class=usual>
<p align=center class=dbi><br>Сортировка данных</p>
<b><i>qsort</i></b> - сортирует данные, применяя скоростную процедуру сортировки.
<pre>
<b>Синтаксис</b> void qsort(void *base, int nelem, int width, int(*fcmp)());
<b>Прототип</b> в stdlib.h
</pre>
qsort применяет алгоритм быстрой сортировки, сортирует содержимое таблицы в порядке, 
задаваемом постоянно вызываемой функцией сравнения, определяемой пользователем и 
адресуемой с помощью указателя *fcmp.
<ul>
<li>base - адресует базу (нулевой элемент) сортируемой таблицы,
<li>nelem - номер элемента таблицы,
<li>width - размер каждого элемента таблицы в байтах.
<li>*fcmp - функция сравнения - берет два аргумента elem1 и elem2, которые представляют 
собой два указателя на 2 элемента таблицы, сравнивает между собой два адресуемых 
элемента таблицы и возвращает в зависимости от результата сравнения целое число.<p>
<table border=1 align=center cellpadding=10>
<tr><td>  Если элементы:
</td><td> *fcmp возвращает:
</td></tr>
<tr><td>  *elem1 < *elem2
</td><td> целое < 0
</td></tr>
<tr><td>  *elem1 == *elem2
</td><td> 0
</td></tr>
<tr><td>  *elem1 > *elem2
</td><td> целое > 0
</td></tr>
</table>
</ul>
Символ < означает, что левый элемент в конце сортировки должен оказаться перед 
правым аргументом.
<p>Символ > означает, что в конце сортировки левый элемент должен оказаться после 
правого.
<p><b><center>Алгоритм быстрой сортировки "средний из трех"</center></b>
<pre>
	#include&ltstdio.h>
	#include&ltstdlib.h>
	#include&ltstring.h>
	#include&ltconio.h>
	#define NUM 6	// число элементов таблицы
	#define COL 7	// размер элемента таблицы в байтах
	int sort_fun(const void *a, const void *b);
	char list[NUM][COL] = {"авто", "аврал", "баран", "авария", "январь", "сад"};
	main()
	{
		int x; clrscr();
		qsort((void *)&list, NUM, sizeof(list[0]), sort_fun);
		for (x = 0; x < NUM; x++)
			printf("%10s %d байт\n", list[x], sizeof(list[x]));
		getch(); return 0;
	}

	int sort_fun(const void *a, const void *b)
	{
		// преобразование типов (char *)
		return(strcmp((char *)a, (char *)b)); 
	}
</pre>
<p> &nbsp;
</td></tr>
</table>
<!-- -------End of Inside table------- -->
<table class=pages align=center border=0 cellpadding=0 cellspacing=0>
<tr colspan=5>
<td>&nbsp&nbsp<a href="../../../plan_2.htm" class=p>Тематический план</a>&nbsp&nbsp</td>
<td><a href="index.htm" class=p>&nbsp План лекции &nbsp</a></td>
<td><a href="01.htm" class=p>&nbsp 1 &nbsp</a></td>
<td><a href="02.htm" class=p>&nbsp 2 &nbsp</a></td>
<td><a href="03.htm" class=p>&nbsp 3 &nbsp</a></td>
<td><a href="04.htm" class=p>&nbsp 4 &nbsp</a></td>
<td><a href="05.htm" class=a>&nbsp 5 &nbsp</a></td>
<td><a href="06.htm" class=p>&nbsp 6 &nbsp</a></td>
<td><a href="07.htm" class=p>&nbsp 7 &nbsp</a></td>
<td>&nbsp&nbsp<a href="#start" class=p>Начало страницы</a>&nbsp&nbsp</td>
</tr>
</table>
<a name=#end></a>
</body>
</html>