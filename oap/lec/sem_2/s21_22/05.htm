<html>
<head>
<meta http-equiv=Content-Type content="text/html; charset=windows-1251">
<title>ОАП | Лекция № 7</title>
<link rel=stylesheet type=text/css href=../../../css/lec.css>
</head>

<body>
<a name=#start></a>
<table class=pages align=center border=0 cellpadding=0 cellspacing=0>
<tr colspan=5>
<td>&nbsp&nbsp<a href="../../../plan_2.htm" class=p>Тематический план</a>&nbsp&nbsp</td>
<td><a href="index.htm" class=p>&nbsp План лекции &nbsp</a></td>
<td><a href="01.htm" class=p>&nbsp 1 &nbsp</a></td>
<td><a href="02.htm" class=p>&nbsp 2 &nbsp</a></td>
<td><a href="06.htm" class=p>&nbsp 3 &nbsp</a></td>
<td><a href="07.htm" class=p>&nbsp 4 &nbsp</a></td>
<td><a href="03.htm" class=p>&nbsp 5 &nbsp</a></td>
<td><a href="04.htm" class=p>&nbsp 6 &nbsp</a></td>
<td><a href="05.htm" class=a>&nbsp 7 &nbsp</a></td>
<td>&nbsp&nbsp<a href="#end" class=p>Конец страницы</a>&nbsp&nbsp</td>
</tr>
</table>
<!-- -------Inside table------- -->
<table width=98% border=0 cellpadding=5 cellspacing=0>
<!--tr><td class=rule>
Внимание!
<ol>В окнах такого цвета будут отображаться правила и примечания относительно 
лекционного материала
</ol></td></tr-->
<tr>
<td class=usual>
<p align=center class=dbi><br>Функции работы с кодами символов</p>
<p><b><i>toascii</i></b> переводит символы в формат ASCII, функция, которая 
конвертирует целое <b>c</b> в код ASCII, очищая почти все младшие семь битов; при 
этом получаемые значения находятся в пределах от 0 до 127. Эта операция 
производится для совместимости с другими системами.
<p><b><i>tolower</i></b> переводит символы в нижний регистр, функция, которая 
конвертирует целое c (в пределах от EOF до 255) в значение нижнего регистра 
(если оно находилось в верхнем регистре), остальные остаются неизменными.
<p><b><i>_tolower</i></b> переводит символы в нижний регистр, макрокоманда, 
производящая те же преобразования, что и функция tolower, за исключением 
того, что должно быть точно известно, что c - символ верхнего регистра.
<p><b><i>toupper</i></b> переводит символы в верхний регистр, функция, 
преобразующая целое c (в пределах от EOF до 255) в значение верхнего 
регистра (если до этого был нижний регистр), остальные остаются без 
изменений.
<p><b><i>_toupper</i></b> переводит символы в верхний регистр, макрокоманда, 
выполняющая то же самое преобразование, что и функция toupper, за 
исключением того, что ее можно применять только в том случае, если c - 
символ верхнего регистра.
<pre>
<b>Синтаксис:</b>	int toascii(int c);	
		int tolower(int c);		int _tolower(int c);
		int toupper(int c);		int _toupper(int c);	
<b>Прототип</b> в ctype.h
</pre>
Приведенная ниже программа демонстрирует работу функций.
<p>
<table align=center border=1 cellspacing=0 cellpadding=10>
<tr><td><pre>
#include&ltstdio.h>
#include&ltstring.h>
#include&ltctype.h>
#include&ltconio.h>
main()
{  
   int num, res, num1, res1, len, i;
   char *str="BORlaND INTErnATiONAL";
   num = 121; num1 = '&'; clrscr();
   
   printf("toascii:\n"); 
   res = toascii(num);
   printf("%5d %5d %2c\n", 
           num, res, num);
   res1 = toascii(num1);
   printf("%5d %5d %2c\n\n", 
          num1, res1, num1);
   
   printf("Текст: %s\n\n",str);
   len = strlen(str);
   for(i = 0; i < len; i++)
       str[i] = toupper(str[i]);
   printf(" toupper: %s\n",str);
   
   // перед _tolower символ в верхнем 
   // регистре
   for (i = 0; i < len; i++)
        str[i] = _tolower(str[i]);
   printf("_tolower: %s\n", str);
   
   for (i = 0; i < len; i++)
        str[i] = _toupper(str[i]);
   printf("_toupper: %s\n",str);
   
   for (i = 0; i < len; i++)
        str[i] = tolower(str[i]);
   printf(" tolower: %s\n\n",str);
   getch(); return 0;
}
</pre></td>
<td><pre>







<i>Результаты:</i>
toascii:


  121   121  y


   38    38  &


Текст: BORlaND INTErnATiONAL


 toupper: 
   BORLAND INTERNATIONAL



_tolower: 
   borland@international


_toupper: 
   BORLAND INTERNATIONAL


 tolower: 
   borland international
</pre></td></tr>
</table>
<p><b><i>strlwr</i></b> преобразует буквы верхнего регистра строки str в буквы нижнего 
регистра.
<p><b><i>strupr</i></b> преобразует буквы нижнего регистра в строке str в буквы верхнего 
регистра.
<pre>
<b>Синтаксис:</b>	char * strlwr(char *str);
		char * strupr(char *str);
<b>Прототип</b> в string.h
</pre>
<p>
<table align=center border=1 cellspacing=0 cellpadding=10>
<tr><td><pre>
#include&ltstdio.h>
#include&ltstring.h>
#include&ltconio.h>
main()
{	char *str="Borland International";
	char *inp="abc,GHTj d", *ptr; clrscr();
	
	printf("strlwr\n");
	printf(" До:%25s\n",str);
	strlwr(str); printf(" После:%22s\n",str);
	

	printf("strupr\n");
	printf(" До:%14s\n",inp);
	ptr = strupr(inp); printf("После:%11s\n", ptr);
	
	getch(); return 0;
}
</pre></td>
<td><pre>



<i>Результаты:</i>

strlwr
 До:
   Borland International
 После: 
   borland international

strupr
 До:    abc,GHTj d
 После: ABC,GHTJ D
</pre></td></tr>
</table>
<p>Текст программы <b>русификации предиката isupper</b> приведен далее: 
<pre>
	int isrupper (int ch) 
	{
		 if ( (127 < ch) && (ch < 160) || (ch=240) ) return 1;
		else return isupper(ch);
	}
</pre>
Функция возвращает 1, если аргумент — большая русская буква. Мы вызвали стандартную функцию внутри нашей, поэтому имя нашей функции необходимо изменить.
<p>Теперь напишем соответствующую функцию для проверки на "малость" русских букв. Она совершенно аналогична, однако надо учесть "разрыв" кодов. 
<pre>
int isrlower (int ch)
{
	if ((159 < ch) && (ch < 176) || (223 < ch) && (ch < 240) || (ch == 241))
		return 1;
	else return islower (ch);
}
</pre>
Теперь эти функции мы можем использовать для реализации других функций.
<pre>
	int isralpha (int ch)
	{
		return (isrlower(ch)  ||  isrupper(ch));
	}
</pre>
А вот реализация функций-преобразователей несколько интереснее. Текст программы русификации предиката tolower приведен далее
<p><b> Русификация tolower</b>
<pre>
	unsigned char rtolower (int ch) 
	{
		if   ((127  < ch)   &&   (ch < 144)		 return (ch += 32);
		else if   ((143 < ch)  && (ch < 176)		 return (ch += 80);
		else  if   (ch == 240)			 return ++ch
		else tolower (ch);
	}
</pre>
Как видите, нам опять потребовалось явно использовать диапазоны кода русских букв. Кроме того, обратите внимание на то, что мы вынуждены изменить тип возвращаемого значения, поскольку иначе выводятся целые числа. Текст программы русификации предиката toupper приведен далее.
<p><b>Русификация toupper</b>
<pre>
	unsigned char  rtoupper(int  ch) 
	{
		if   ((159 < ch)   &&   (ch < 176))			return (ch -= 32);
		else if   ((223 < ch)   && (ch < 240))			return (ch -= 80);
		else if   (ch == 241)	 			return --ch
		else toupper (ch);
	}
</pre>
Вызывает интерес тот факт, что наши функции в среде Borland C++ 3.1 работают правильно и с константами и с переменными. Например, мы выполним следующую последовательность операторов:
<pre>
	ch = getch();
	cout << rtolower(ch) << endl;
	cout << rtolower(‘A’) << endl;
</pre>
И первая строка при вводе символа А, и вторая сработают одинаково – на экране появится маленькая буква а. А вот в системах, работающих под Windows, для переменной получается правильный результат, а для константы — совершенно другой. Дело здесь в кодировке русских символов, которые мы набираем в окне редактора интегрированной среды — редактор работает в Windows, а выполняется программа в окне DOS.


<p>Перевод символов русского алфавита из нижнего регистра в верхний поможет 
осуществить следующий фрагмент программы:
<pre>
	unsigned char *str="КонЕК - ГоРБуНок";
	printf("%s\n", str);
	for(i = 0; i < strlen(str); i++)
	{	if(str[i] >= 160 && str[i] <= 175) 
			str[i] -= 32;
		if(str[i] >= 224 && str[i] <=239) 
			str[i] -= 80;
	} printf("%s", str);
</pre>


</td>
</tr>

</table>

<!-- -------End of Inside table------- -->

<table class=pages align=center border=0 cellpadding=0 cellspacing=0>
<tr colspan=5>
<td>&nbsp&nbsp<a href="../../../plan_2.htm" class=p>Тематический план</a>&nbsp&nbsp</td>
<td><a href="index.htm" class=p>&nbsp План лекции &nbsp</a></td>
<td><a href="01.htm" class=p>&nbsp 1 &nbsp</a></td>
<td><a href="02.htm" class=p>&nbsp 2 &nbsp</a></td>
<td><a href="06.htm" class=p>&nbsp 3 &nbsp</a></td>
<td><a href="07.htm" class=p>&nbsp 4 &nbsp</a></td>
<td><a href="03.htm" class=p>&nbsp 5 &nbsp</a></td>
<td><a href="04.htm" class=p>&nbsp 6 &nbsp</a></td>
<td><a href="05.htm" class=a>&nbsp 7 &nbsp</a></td>
<td>&nbsp&nbsp<a href="#start" class=p>Начало страницы</a>&nbsp&nbsp
&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp
<FONT color="#FFFF66" size=1><i>Copyright</i> &copy; <a class=p href="http://prep.scc/~blp">
Болгак Л. П.</a> <i>2003</i>
&nbsp;&nbsp;&nbsp; <a class=p href="http://prep.scc/~ems">
Строганова Е.М.</a> <i>2006</i></font></td>
</tr>
</table>
<a name=#end></a>
</body>
</html>