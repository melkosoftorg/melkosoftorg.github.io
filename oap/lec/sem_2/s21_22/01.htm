<html>
<head>
<meta http-equiv=Content-Type content="text/html; charset=windows-1251">
<title>ОАП | Лекция № 34</title>
<link rel=stylesheet type=text/css href=../../../css/lec.css>
</head>
<body>
<a name=#start></a>
<table class=pages align=center border=0 cellpadding=0 cellspacing=0>
<tr colspan=5>
<td>&nbsp&nbsp<a href="../../../plan_2.htm" class=p>Тематический план</a>&nbsp&nbsp</td>
<td><a href="index.htm" class=p>&nbsp План лекции &nbsp</a></td>
<td><a href="01.htm" class=a>&nbsp 1 &nbsp</a></td>
<td><a href="02.htm" class=p>&nbsp 2 &nbsp</a></td>
<td><a href="06.htm" class=p>&nbsp 3 &nbsp</a></td>
<td><a href="07.htm" class=p>&nbsp 4 &nbsp</a></td>
<td><a href="03.htm" class=p>&nbsp 5 &nbsp</a></td>
<td><a href="04.htm" class=p>&nbsp 6 &nbsp</a></td>
<td><a href="05.htm" class=p>&nbsp 7 &nbsp</a></td>
<td>&nbsp&nbsp<a href="#end" class=p>Конец страницы</a>&nbsp&nbsp</td>
</tr>
</table>
<!-- -------Inside table------- -->
<table width=98% border=0 cellpadding=5 cellspacing=0>
<tr>
<td class=usual>
<p align=center class=dbi><br>Символьная строка</p>
<b><i>Символьная строка</i></b> - это последовательность, состоящая из одного или более символов. 
<p>В стандартном C++ существует два формата хранения строк текста. Один формат унаследован от С, другой является нововведением C++. Здесь мы рассмотрим формат строк, унаследованный от С, так как он прост, часто используется и связан с указателями и массивами. Такие строки называются <i>строками с нулевым конечным символом</i>.
<p>Строка с нулевым конечным символом представляет собой <i>массив элементов типа char</i>. В C/C++ строки могут иметь любую длину. Последний элемент строки-массива содержит значение 0 ( \0 - "нуль-символ" ) и таким образом обозначает конец строки. Это удобно, потому что коду 0 не соответствует никакого символа и внутри «нормального» текста этот символ встречаться не может. Поскольку для строк существует стандартный метод определения длины, с ними почти всегда работают как с указателями на тип char.

<p>
<table border=1 align=center cellpadding=3>
<tr>
<td>Н</td><td>а</td><td>д</td><td> &nbsp</td><td>к</td><td>е</td><td>м</td><td> &nbsp
</td><td>с</td><td>у</td><td>д</td><td>ь</td><td>б</td><td>и</td><td>н</td><td>а</td><td> &nbsp</td><td>
н</td><td>е</td><td> &nbsp</td><td>ш</td><td>у</td><td>т</td><td>и</td><td>л</td><td>а
</td><td>?</td><td>\0</td>
</tR>
<tr><th colspan=27>Каждая ячейка - 1 байт</th>
<td>Нуль<br>символ</td>
</tr>
</table>
<p>Для строк также существует специальный метод инициализации, показанный в следующей программе:
<p><b>Инициализация строк</b>
<pre>
	#include &ltiostream.h> 
	#include &ltconio.h>
	void main()
	{
		char *s = "Привет, Мир!";
		int n = 0;
		while (s[n]  != 0) n++; 
			cout << n << endl;
		getch();
	}
</pre>
Переменная s является строкой, или массивом символов, заканчивающимся нулем. При использовании <b>строковых констант</b>, таких как "Привет, Мир!", нуль в конце строки добавляется компилятором автоматически. Таким образом, массив s будет состоять из 13 элементов, а не из 12.
<p>Конструкция 
<pre>
	while (s[n] != 0) n++;
</pre>
подсчитывает количество символов в строке, не считая конечного нуля (значение n увеличивается на единицу, пока s[n] не будет равно нулю). Если мы хотим подсчитать количество символов в строке, включая нуль, нам нужно написать: 
<pre>
	while (s[n++] != 0):
</pre>
Доступ к строковой константе осуществляется через указатель на ее первый элемент. 
<p>Если описать строку как массив типа char, то память для этой строки резервируется 
автоматически. 
<pre>
	/*  массив для размещения 12 литер и '\0'. Отдельные литеры внутри массива 
	    могут изменяться, но s всегда ссылается на одно и то же место памяти
	*/
	char s[] = "Привет, Мир!";
</pre>
Если описать строку как указатель на тип данных char, то память не резервируется: 
необходимо либо выделить ее, используя функцию malloc или ей подобную, или 
присвоить ей адрес существующей строки.
<pre>
	/* указатель, инициализированный ссылкой на стринговую константу. Значение 
	   указателя можно изменить, и тогда он будет ссылаться на что-либо другое. 
	   Кроме того, результат будет неопределен, если попытаться изменить 
	   содержимое константы
	*/
	char *s = "Привет, Мир!";
</pre>

<p> &nbsp; </p>
</td></tr>
</table>
<!-- -------End of Inside table------- -->
<table class=pages align=center border=0 cellpadding=0 cellspacing=0>
<tr colspan=5>
<td>&nbsp&nbsp<a href="../../../plan_2.htm" class=p>Тематический план</a>&nbsp&nbsp</td>
<td><a href="index.htm" class=p>&nbsp План лекции &nbsp</a></td>
<td><a href="01.htm" class=a>&nbsp 1 &nbsp</a></td>
<td><a href="02.htm" class=p>&nbsp 2 &nbsp</a></td>
<td><a href="06.htm" class=p>&nbsp 3 &nbsp</a></td>
<td><a href="07.htm" class=p>&nbsp 4 &nbsp</a></td>
<td><a href="03.htm" class=p>&nbsp 5 &nbsp</a></td>
<td><a href="04.htm" class=p>&nbsp 6 &nbsp</a></td>
<td><a href="05.htm" class=p>&nbsp 7 &nbsp</a></td>
<td>&nbsp&nbsp<a href="#start" class=p>Начало страницы</a>&nbsp&nbsp
&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp
<FONT color="#FFFF66" size=1><i>Copyright</i> &copy; <a class=p href="http://prep.scc/~ems">
Строганова Е.М.</a> <i>2006</i></font></td>
</tr>
</table>
<a name=#end></a>
</body>
</html>