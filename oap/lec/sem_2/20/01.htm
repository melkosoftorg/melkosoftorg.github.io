<html>
<head>
<meta http-equiv=Content-Type content="text/html; charset=windows-1251">
<title>ОП | Лекция № 20</title>
<link rel=stylesheet type=text/css href=../../../css/lec.css>
</head>
<body>
<a name=#start></a>
<table class=pages align=center border=0 cellpadding=0 cellspacing=0>
<tr>
<td>&nbsp&nbsp<a href="../../../plan_1.htm" class=p>Календарно-тематический план</a>&nbsp&nbsp</td>
<td><a href="index.htm" class=p>&nbsp План лекции &nbsp</a></td>
<td><a href="01.htm" class=a>&nbsp 1 &nbsp</a></td>
<td><a href="02.htm" class=p>&nbsp 2 &nbsp</a></td>
<td><a href="03.htm" class=p>&nbsp 3 &nbsp</a></td>
</td></tr>
</table>
<!-- -------Inside table------- -->
<table width=98% border=0 cellpadding=5 cellspacing=0>
<tr><td class=usual>
<p align=center class=dbi><br>Условный оператор&nbsp;&nbsp;&nbsp;?&nbsp;&nbsp;:</p>
<p><center><img align=center src="pic_02.gif" alt="Полная развилка" ismap></center></p>
<p>В некоторых случаях необходимо произвести выбор между двумя альтернативами (и результирующими значениями), основанными на некотором условии. Обычно это реализуется оператором if ... else.
<br>Например, функция найти минимальное значение двух целых чисел может быть следующей:
<pre>
			int imin(int a, int b)
			{ 
				if (a < b)
					return(a);
				else
					return(b);
			}
</pre>
<p>Для поиска минимального из двух для вещественных чисел достаточно тип int поменять на float, а для поиска максимального из двух значений достаточно создать функцию с проверкой условия (a > b).
<p>Для реализации такого типа выбора в языке C++ существует специальная конструкция:
<p align=center><big>условие&nbsp;&nbsp;?&nbsp;&nbsp;действие 1&nbsp;&nbsp;:&nbsp;&nbsp;действие 2;</big></p>
<p><code><big>если</big></code> условие верно, <code><big>то</big></code> выполняется действие 1 и все выражение получает его значение;
<br><code><big>иначе</big></code> выполняется действие 2 и передается его значение.
<p>Операция выбора по условию - это единственная трехместная (тернарная) операция, то есть такая, которая работает сразу с тремя операндами:
<ul type="disc">
<li>операнд 1 - условие,
<li>операнд 2 - действие 1, если условие истинно,
<li>операнд 3 - действие 2, если условие ложно.
</ul>
<p>Используя эту конструкцию, imin можно представить в виде:<br>
<pre>
			int imin(int a, int b)
			{
				return((a < b) ? a : b );
			}
</pre>
<p>Можно даже записать imin как строку макроса:
<pre>
			#define imin(a, b) ((a < b) ? a : b)
</pre>
<p>Теперь, где бы программа ни встретила выражение imin(e1,&nbsp;e2), она замещает его на выражение ((e1&nbsp;<&nbsp;e2)&nbsp;?&nbsp;e1&nbsp;:&nbsp;e2) и продолжает вычисления. Это в действительности наиболее общее решение, так как a и b больше не ограничены типом int; они могут быть любого типа, с которым можно выполнить операцию сравнения.
<br>Операцию выбора по условию не удастся использовать во всех случаях вместо конструкции if&nbsp;...&nbsp;else. Все же краткость и удобство этой операции очевидны. Кроме того, ее 
можно применять там, где оператор if недопустим, например внутри вызова функции.
<pre>
		printf("a = %.3f\tb = %.3f\tmax = %.3f\n\n", a, b, (max = (a > b) ? a : b));

</pre>
<p>В следующей программе демонстрируется использование макроподстановок для нахождения максимального из двух чисел и вывода результата.
<pre>
	#include&lt;conio.h&gt;
	#include&lt;stdio.h&gt;
	#define imax(a, b) ((a > b) ? a : b)
	#define OTW printf("a = %.3f\tb = %.3f\trez = %.3f\n\n", a, b, rez);
	main()
	{
		float a = 3.7, b = 6.8, max, rez; clrscr();

		// Можно поиск максимального из двух значений и вывод результата
		// выполнить в двух разных строках программы
		// max = (a > b) ? a : b;
		// printf("a = %.3f\tb = %.3f\tmax = %.3f\n\n", a, b, max);

		// Но можно и объединить
		printf("a = %.3f\tb = %.3f\tmax = %.3f\n\n", a, b, (max = (a > b) ? a : b));
		rez = imax(a, b) / 2; OTW
		getch(); return 0;
	}
</pre>
<p>Например, экзамен по предмету считается сданным, если средний балл по экзаменационным тестам имеет значение больше 2.5.
<br>Составим программу, используя условный оператор <b>?&nbsp;:</b>, для проверки успешной или нет была сдача экзамена.
<br>Введем переменные:
<ul type="disc">
<li>sb - вещественная переменная для хранения значения среднего балла, ее значение будем вводить с клавиатуры;
<li>str - строковая переменная для хранения сообщения о результатах экзамена. Значение этой переменной будет присвоено после проверки значения среднего балла.
</ul>
<pre>
	#include&lt;conio.h>
	#include&lt;iostream.h>
	main()
	{
		clrscr();
		float sb;
		char *str;
		// динамическое выделение памяти
		str = new char[20];
        	cout << "sb = "; cin >> sb;
		// если средний балл sb > 2.5, то str = " - экзамен сдан"
		// иначе str = " - экзамен не сдан"
		str = (sb > 2.5) ? " - экзамен сдан" : " - экзамен не сдан";
		cout << "sb = " << sb << str;
		getch();
	}
</pre>
<p>Язык C++ позволяет в одной команде объединять два оператора. Например, в рассмотренной выше программе, следующие строки программного кода
<pre>
		str = (sb > 2.5) ? " - экзамен сдан" : " - экзамен не сдан";
		cout << "sb = " << sb << str;
</pre>
<p>можно объединить, то есть, вывести то значение, которое будет выбрано после исполнения условного оператора.
<pre>
		cout << "sb = " << sb << ((sb > 2.5) ? " - экзамен сдан" : " - экзамен не сдан");
</pre>

<p>Рассмотрим пример использования условного оператора при анализе принадлежит ли точка с координатами (x,&nbsp;y) кривой x<sup>2</sup>&nbsp;+&nbsp;y<sup>2</sup>&nbsp;=&nbsp;25.
<p><center><table>
<tr><td width="45%" valign="top">
<img src="dz_w09.gif" alt="Полная развилка" ismap>
</td><td>
<pre>
#include&lt;conio.h>
#include&lt;iostream.h>
void main()
{
	float x, y, z; clrscr();
	char s[] = "принадлежит кривой x * x + y * y = 25", *str;
	str = new char[5];	// динамическое выделение памяти
	cout << "x = "; cin >> x;
	cout << "y = "; cin >> y;
	z = x * x + y * y;
	str = (z == 25) ? " " : " не ";
	cout << "Точка A(" << x << ", " << y << ")" << str << s;
	getch();
}

<i>Возможные результаты:</i>
x = 3
y = 4
Точка A(3, 4) принадлежит кривой x * x + y * y = 25

x = 2.3
y = 4
Точка A(2.3, 4) не принадлежит кривой x * x + y * y = 25
</pre>
</td></tr></table></center>
<p>&nbsp;</p>
</td></tr>
</table>
<!-- -------End of Inside table------- -->
<table class=pages align=center border=0 cellpadding=0 cellspacing=0>
<tr>
<td>&nbsp&nbsp<a href="../../../plan_1.htm" class=p>Календарно-тематический план</a>&nbsp&nbsp</td>
<td><a href="index.htm" class=p>&nbsp План лекции &nbsp</a></td>
<td><a href="01.htm" class=a>&nbsp 1 &nbsp</a></td>
<td><a href="02.htm" class=p>&nbsp 2 &nbsp</a></td>
<td><a href="03.htm" class=p>&nbsp 3 &nbsp</a></td>
</td></tr>
</table>
<a name=#end></a>
</body>
</html>