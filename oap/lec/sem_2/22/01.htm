<html>
<head>
<meta http-equiv=Content-Type content="text/html; charset=windows-1251">
<title>ОП | Лекция № 22</title>
<link rel=stylesheet type=text/css href=../../../css/lec.css>
</head>
<body>
<a name=#start></a>
<table class=pages align=center border=0 cellpadding=0 cellspacing=0>
<tr>
<td>&nbsp&nbsp<a href="../../../plan_1.htm" class=p>Календарно-тематический план</a>&nbsp&nbsp</td>
<td><a href="index.htm" class=p>&nbsp План лекции &nbsp</a></td>
<td><a href="01.htm" class=a>&nbsp 1 &nbsp</a></td>
<td><a href="02.htm" class=p>&nbsp 2 &nbsp</a></td>
<td><a href="03.htm" class=p>&nbsp 3 &nbsp</a></td>
<td><a href="04.htm" class=p>&nbsp 4 &nbsp</a></td>
<td><a href="05.htm" class=p>&nbsp 5 &nbsp</a></td>
<td><a href="06.htm" class=p>&nbsp 6 &nbsp</a></td>
</tr>
</table>
<!-- -------Inside table------- -->
<table width=98% border=0 cellpadding=5 cellspacing=0>
<tr>
<td class=usual>
<p align=center class=dbi><br>Типы циклов (обзор)</p>
<p>Программа начинает и заканчивает свою работу, но это не значит, что каждая 
инструкция в программе должна выполниться только однажды.
<p>Решение многих практических задач сводится к выполнению вычислений по 
одним и тем же зависимостям, но при разных значениях входящих в них величин (параметров). 
Такой вычислительный процесс называется циклическим, а многократно повторяющиеся 
участки этого процесса - циклами.
<p>Циклические структуры позволяют существенно сократить размер записи алгоритма, представить его компактно путем соответствующей организации повторения предписываемых действий.
<p><b><i>Тело цикла</i></b> - многократно повторяемые действия.
<p><b><i>Параметр цикла</i></b> - переменная, изменяющаяся в цикле.

<p>В большинстве языков программирования высокого уровня все операторы циклов делятся на <b><i>две группы</i></b>:
<ul>
<li>	<b>циклы со счетчиком</b> – циклы, выполняющие свое тело, определенное количество раз,
<li>	<b>циклы с условием</b> – циклы, выполняющие свое тело пока заданное условие либо истинно, либо ложно.
</ul>

<p><b>Существуют три основных типа циклов</b> (хотя два из них можно рассматривать 
как разновидность цикла while):
<table align=center border=0>
<tr><td><b>while</td><td>&nbsp;&nbsp;-&nbsp;&nbsp;<b>пока</b> (цикл с условием)</td></tr>
<tr><td><b>for</td><td>&nbsp;&nbsp;-&nbsp;&nbsp;<b>для</b> (цикл со счетчиком)</td></tr>
<tr><td><b>do ... while</td><td>&nbsp;&nbsp;-&nbsp;&nbsp;<b>делать ... пока</b> (цикл с условием)</td></tr>
</table>



<p><b><i>Для организации цикла любого типа необходимо:</i></b>
<ol>
<li>Задать перед циклом начальное значение переменной, изменяющейся в цикле. 
<li>Изменять переменную перед каждым новым повторением цикла. 
<li>Проверять условие окончания или повторения цикла. 
<li>Управлять циклом, то есть переходить к его началу, если он не закончен, или выходить из него по окончании. 
</ol>
<p><b><i>Обозначения</i></b>
<ol>
<p>x - управляющая переменная цикла
<br>a - начальное значение
<br>b - конечное значение
<br>h - значение шага
</ol>
<p><b>Существуют три основных типа циклов:</b>
<p><center><b>Цикл с параметром - ДЛЯ<br>for</b></center></p>
<p><center><table width="95%">
<tr><td width="25%" valign="top">
<img src="for.gif" alt="Цикл с параметром" ismap>
</td><td valign="top">Если заранее известно, сколько раз будет выполнено тело цикла, то удобно применять цикл с параметром (регулярный цикл).
<br>Например:
<ul>
<li>вычислить все значения функции y = sin(x) для значений угла, изменяющегося от 0<sup>o</sup> до 180<sup>o</sup> с шагом 5<sup>o</sup>;
<li>вычислить сумму и произведение k членов ряда, заданных формулой общего члена ряда a = ln(n&#8729;x), где n&nbsp;=&nbsp;1,&nbsp;2,&nbsp;...,&nbsp;k - номер члена ряда;
<li>построить k концентрических окружностей.
</ul>
</td></tr></table></center>
<p><center><b>Циклы заканчивающиеся по условию<br>итерационные циклы</b></center></p>
<p><table width=90% align=center border=0 cellpadding=5 cellspacing=0>
<tr valign="top">
<td align=center width=50%><b>Цикл с постусловием - ДО<br>do ... while</b><br>Тело цикла обязательно будет выполнено хотя бы один раз</td>
<td align=center><b>Цикл с предусловием - ПОКА<br>while</b><br>Тело цикла может оказаться не выполненным ни разу</td>
</tr>
<tr valign="top">
<td align=center><img src="do_while.gif" alt="Цикл с постусловием" ismap></td>
<td align=center><img src="while.gif" alt="Цикл с предусловием" ismap></td>
</tr>
<tr valign="top">
<td>Тело цикла предшествует условию цикла и повторяет свое выполнение, если условие ложно.
<br>Повторение кончается, когда условие станет истинным.
<br>Этот тип цикла удобно использовать для построения конструкций типа меню, когда его обязательно хотя бы один раз надо вывести.
</td><td>Условие предшествует командам тела цикла.
<br>Пока условие истинно, выполняется серия, образующая тело.
<br>Этот цикл незаменим, когда надо не допустить выполнение каких-либо действий.
</td></tr>
</table>
<p>Теоретически необходимым и достаточным является лишь цикл с предусловием. Любой циклический алгоритм можно построить с его помощью, поэтому в любом языке программирования можно было бы ограничиться только циклом-ПОКА.
<br>Однако в ряде случаев применение цикла-ДО оказывается более удобным, и поэтому он используется.
<br>Цикл с параметром также более удобен при программировании процессов с заданным количеством повторений.
<p>&nbsp;
</td>
</tr>
</table>
<!-- -------End of Inside table------- -->

<table class=pages align=center border=0 cellpadding=0 cellspacing=0>
<tr>
<td>&nbsp&nbsp<a href="../../../plan_1.htm" class=p>Календарно-тематический план</a>&nbsp&nbsp</td>
<td><a href="lec_m.htm" class=p>&nbsp План лекции &nbsp</a></td>
<td><a href="01.htm" class=a>&nbsp 1 &nbsp</a></td>
<td><a href="02.htm" class=p>&nbsp 2 &nbsp</a></td>
<td><a href="03.htm" class=p>&nbsp 3 &nbsp</a></td>
<td><a href="04.htm" class=p>&nbsp 4 &nbsp</a></td>
<td><a href="05.htm" class=p>&nbsp 5 &nbsp</a></td>
<td><a href="06.htm" class=p>&nbsp 6 &nbsp</a></td>
</tr>
</table>
<a name=#end></a>
</body>
</html>