<html>
<head>
<meta http-equiv=Content-Type content="text/html; charset=windows-1251">
<title>ОП | Лекция № 42</title>
<link rel=stylesheet type=text/css href=../../../css/lec.css>
</head>

<body>
<a name=#start></a>
<table class=pages align=center border=0 cellpadding=0 cellspacing=0>
<tr colspan=5>
<td>&nbsp&nbsp<a href="../../../plan_2.htm" class=p>Календарно-тематический план</a>&nbsp&nbsp</td>
<td><a href="index.htm" class=p>&nbsp План лекции &nbsp</a></td>
<td><a href="01.htm" class=p>&nbsp 1 &nbsp</a></td>
<td><a href="02.htm" class=p>&nbsp 2 &nbsp</a></td>
<td><a href="03.htm" class=p>&nbsp 3 &nbsp</a></td>
<td><a href="04.htm" class=a>&nbsp 4 &nbsp</a></td>
<td><a href="05.htm" class=p>&nbsp 5 &nbsp</a></td>
<td><a href="06.htm" class=p>&nbsp 6 &nbsp</a></td>
<td><a href="07.htm" class=p>&nbsp 7 &nbsp</a></td>
</tr>
</table>
<!-- -------Inside table------- -->
<table width=98% border=0 cellpadding=5 cellspacing=0>
<tr>
<td class=usual>
<p align=center class=dbi><br>Спецификаторы доступа</p>
В соответствии с правилами языка C++ все компоненты класса, введенного с помощью 
ключа класса struct или union, являются общедоступными (по умолчанию имеют атрибут 
public). <br>Для изменения видимости компонент в определении класса можно 
использовать <b>спецификаторы доступа</b>, одно из трех служебных слов, за которым 
помещается двоеточие:<ul>
<li><b>private</b> (собственный, локальный) - закрытые члены класса (функции и данные). К 
ним имеют доступ только функции - члены данного класса и функции - друзья 
класса.
<p><li><b>public</b> (общедоступный, глобальный) - открытые члены класса. Предназначены для 
обеспечения интерфейса объектов класса с программой, в которой они 
существуют.
<p><li><b>protected</b> (защищенный). Доступны функциям - членам данного класса и 
дружественным функциям производных классов.</ul>
<p>Появление любого из спецификаторов доступа в тексте определения класса означает, что 
до конца определения либо до другого спецификатора доступа все компоненты класса 
имеют указанный статус.
<p>Так как класс stroka введен с помощью служебного слова class, то элементы char *ch и int 
len недоступны для непосредственного обращения. <br>Чтобы получить значение длины 
строки из конкретного объекта, нужно использовать общедоступную компонентную 
функцию len_str(). <br>Указатель на строку, принадлежащую конкретному объекту класса 
stroka, возвращает функция <br>string(). <p>У класса stroka два конструктора - перегруженные 
функции, при выполнении каждой из которых динамически выделяется память для 
символьного массива. <br>При вызове конструктора с параметром int N массив из N + 1 
элементов остается пустым, а длина строки устанавливается равной 0. <br>При вызове с 
параметром char *arch длина массива и его содержание определяются уже существующей 
строкой, которую адресует фактический параметр, соответствующий указателю-
параметру arch. <p>Компонентная функция ~stroka() - деструктор, освобождающий 
выделенную для объектов какого-либо класса память при уничтожении объекта.
<p> &nbsp; </p>
</td></tr>
</table>
<!-- -------End of Inside table------- -->
<table class=pages align=center border=0 cellpadding=0 cellspacing=0>
<tr colspan=5>
<td>&nbsp&nbsp<a href="../../../plan_2.htm" class=p>Календарно-тематический план</a>&nbsp&nbsp</td>
<td><a href="index.htm" class=p>&nbsp План лекции &nbsp</a></td>
<td><a href="01.htm" class=p>&nbsp 1 &nbsp</a></td>
<td><a href="02.htm" class=p>&nbsp 2 &nbsp</a></td>
<td><a href="03.htm" class=p>&nbsp 3 &nbsp</a></td>
<td><a href="04.htm" class=a>&nbsp 4 &nbsp</a></td>
<td><a href="05.htm" class=p>&nbsp 5 &nbsp</a></td>
<td><a href="06.htm" class=p>&nbsp 6 &nbsp</a></td>
<td><a href="07.htm" class=p>&nbsp 7 &nbsp</a></td>
</tr>
</table>
<a name=#end></a>
</body>
</html>