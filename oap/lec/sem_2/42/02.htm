<html>
<head>
<meta http-equiv=Content-Type content="text/html; charset=windows-1251">
<title>ОП | Лекция № 42</title>
<link rel=stylesheet type=text/css href=../../../css/lec.css>
</head>
<body>
<a name=#start></a>
<table class=pages align=center border=0 cellpadding=0 cellspacing=0>
<tr colspan=5>
<td>&nbsp&nbsp<a href="../../../plan_2.htm" class=p>Календарно-тематический план</a>&nbsp&nbsp</td>
<td><a href="index.htm" class=p>&nbsp План лекции &nbsp</a></td>
<td><a href="01.htm" class=p>&nbsp 1 &nbsp</a></td>
<td><a href="02.htm" class=a>&nbsp 2 &nbsp</a></td>
<td><a href="03.htm" class=p>&nbsp 3 &nbsp</a></td>
<td><a href="04.htm" class=p>&nbsp 4 &nbsp</a></td>
<td><a href="05.htm" class=p>&nbsp 5 &nbsp</a></td>
<td><a href="06.htm" class=p>&nbsp 6 &nbsp</a></td>
<td><a href="07.htm" class=p>&nbsp 7 &nbsp</a></td>
</tr>
</table>
<!-- -------Inside table------- -->
<table width=98% border=0 cellpadding=5 cellspacing=0>
<tr>
<td class=usual>
<p align=center class=dbi><br>Определение класса</p>
<p>Класс представляет собой расширение понятия структуры языка C. Он позволяет создавать типы данных и одновременно определять функции, которые задают алгоритм изменения этих данных, то есть поведение типа.
<p><b>Классы</b> - это структуры, которые содержат не только объявления данных, но и 
функций, манипулирующих с этими данными.
<p>Каждый представитель класса (переменная) называется объектом.
<p><b>Объекты в C++</b> - это программные конструкции, формируемые так называемыми 
классами. <br>За создание своих классов полную ответственность несет сам программист. 
<p>Таким образом, <i>объектно-ориентированное программирование - это методология программирования, основанная на представлении программы в виде совокупности объектов, каждый из которых является экземпляром определенного класса, а классы образуют иерархию наследования.</i>
<p>Простейшим образом <b>класс можно определить</b> с помощью конструкции:
<pre>
                        ключ_класса имя_класса
                        {
                                список компонентов
                        } объекты класса (через запятую);
                
        ключ_класса - одно из служебных слов class, struct, union;
        имя_класса - произвольно выбираемый идентификатор;
        список_компонентов - определения и описания типизированных данных 
                                                и принадлежащих классу функций.
</pre>
<p>Список объектов после закрывающейся фигурной скобки может быть пустым (тогда 
задается только шаблон, который можно использовать в будущем).
<p><b>Компонентами класса могут быть</b> <ul><li>данные, <li>функции, <li>классы, <li>перечисления, <li>битовые 
поля, <li>дружественные функции, <li>дружественные классы, <li>имена типов.</ul> 
<p>Все <b><i>компоненты класса</i></b> в английском языке обозначаются термином member (член, элемент, часть).
<br><b><i>Функции, принадлежащие классу</i></b>, обозначают термином member functions, называют 
функциями - членами (методами класса или компонентными функциями) и определяют, 
что может делать класс.
<br><b><i>Данные класса</i></b> имеют название data members - компонентные данные (элементы данных 
(объектов) класса).
<p>В русском языке терминология, относящаяся к классам, недостаточно устоялась, поэтому 
имеются многочисленные расхождения.
<p>При определении класса в его теле описываются и (или) определяются данные класса и 
принадлежащие ему функции.
<p><b>Компонентные данные</b>
<p>Определение данных класса внешне аналогично обычному 
описанию объектов базовых и производных типов. Класс полностью сохраняет все 
особенности структурных типов, поэтому данные класса могут быть названы его 
элементами. <br>Элементы класса могут быть как базовых, так и производных типов, то есть 
компонентными данными служат переменные, массивы, указатели и так далее. <br>Как 
обычно, описания элементов одного типа могут быть объединены в одном операторе.
<pre>
Например:       class point {   float x, у, z;
                                                long a, b, с;
                                           };
</pre>
Но при описании элементов класса не допускается их инициализация, так как при его 
определении еще не существует участков памяти, соответствующих его компонентным 
данным. <br>Память выделяется не для класса, а только для объектов класса. <br>Для 
инициализации компонентных данных объектов должен использоваться автоматический 
или явно вызываемый конструктор соответствующего класса.
<p> &nbsp; </p>
</td></tr>
</table>
<!-- -------End of Inside table------- -->
<table class=pages align=center border=0 cellpadding=0 cellspacing=0>
<tr colspan=5>
<td>&nbsp&nbsp<a href="../../../plan_2.htm" class=p>Календарно-тематический план</a>&nbsp&nbsp</td>
<td><a href="index.htm" class=p>&nbsp План лекции &nbsp</a></td>
<td><a href="01.htm" class=p>&nbsp 1 &nbsp</a></td>
<td><a href="02.htm" class=a>&nbsp 2 &nbsp</a></td>
<td><a href="03.htm" class=p>&nbsp 3 &nbsp</a></td>
<td><a href="04.htm" class=p>&nbsp 4 &nbsp</a></td>
<td><a href="05.htm" class=p>&nbsp 5 &nbsp</a></td>
<td><a href="06.htm" class=p>&nbsp 6 &nbsp</a></td>
<td><a href="07.htm" class=p>&nbsp 7 &nbsp</a></td>
</tr>
</table>
<a name=#end></a>
</body>
</html>