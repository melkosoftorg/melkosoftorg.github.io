<html>
<head>
<meta http-equiv=Content-Type content="text/html; charset=windows-1251">
<title>ОП | Лекция № 42</title>
<link rel=stylesheet type=text/css href=../../../css/lec.css>
</head>
<body>
<a name=#start></a>
<table class=pages align=center border=0 cellpadding=0 cellspacing=0>
<tr colspan=5>
<td>&nbsp&nbsp<a href="../../../plan_2.htm" class=p>Календарно-тематический план</a>&nbsp&nbsp</td>
<td><a href="index.htm" class=p>&nbsp План лекции &nbsp</a></td>
<td><a href="01.htm" class=a>&nbsp 1 &nbsp</a></td>
<td><a href="02.htm" class=p>&nbsp 2 &nbsp</a></td>
<td><a href="03.htm" class=p>&nbsp 3 &nbsp</a></td>
<td><a href="04.htm" class=p>&nbsp 4 &nbsp</a></td>
<td><a href="05.htm" class=p>&nbsp 5 &nbsp</a></td>
<td><a href="06.htm" class=p>&nbsp 6 &nbsp</a></td>
<td><a href="07.htm" class=p>&nbsp 7 &nbsp</a></td>
</tr>
</table>
<!-- -------Inside table------- -->
<table width=98% border=0 cellpadding=5 cellspacing=0>
<tr>
<td class=usual>
<p align=center class=dbi><br>Идея объектно-ориентированного программирования</p>
<p><b>Объектно-ориентированное программирование (ООП)</b> - способ программирования, 
напоминающий процесс человеческого мышления.
<p><b>Объект</b> - независимый фрагмент кода, легко переносимый из одной программы в другую,
который включает в себя как данные, так и функциональные средства для выполнения определенной узкоспециализированной задачи.
<p>Идея объектно-ориентированного 
программирования впервые была реализована в языке Simula-67 и далее развита в языках 
семейства Smalltalk. <br>Технология объектно-ориентированного программирования с самого 
начала была ориентирована на решение задач очень большой размерности. В нем введено 
понятие объекта и реализованы механизмы, вычислений, позволяющие: <ul><li>описывать 
структуру объекта, <li>описывать действия с объектами, <li>использовать специальные правила 
наследования объектов, <li>устанавливать различную степень защиты компонентов объектов 
и определять различные права доступа к ним, <li>передавать сообщения между объектами.</ul>
<p>Главная причина возникновения объектно-ориентированного программирования связана с 
поиском простых путей для создания очень сложных программ типа текстового редактора или системы управления базами данных.
<br>Объектно-
ориентированное программирование наследует лучшие черты структурного 
программирования и комбинирует их с некоторыми новыми подходами. <p>Если основная 
идея структурного программирования может быть выражена в форме: 
<br><center><b>Программа = Алгоритм + Данные</b>,</center> <br>то объектно-ориентированного программирования 
<br><center><b>Программа = Объекты + Сообщения</center></b>
<br>То есть, объектно-ориентированная программа не имеет жесткого 
алгоритма работы. Она представляет собой систему объектов, каждый из которых может 
выполнять какие-то функции в ответ на полученное сообщение.
<p>Для описания компонентов объектов используются специальные конструкции, подобные 
структурам (struct) и смесям (объединениям - union) в языке Си. Одна из таких 
конструкций называется классом (class).
<p>Объектно-ориентированное программирование базируется на трех ключевых 
понятиях:<ol>
<li><b>Инкапсуляция, пакетирование (Encapsulation)</b> - слияние данных и функций, 
работающих с этими данными, порождающее абстрактные типы данных, 
определяемые пользователем.
<br>Это принцип, позволяющий создавать замкнутые, самодостаточные объекты, которыми можно пользоваться или переносить их в другую программу.
<p><li><b>Наследование (Inheritance)</b> - возможность передачи некоторых свойств одного объекта другому объекту.
<br>Это возможность создавать новые объекты на базе уже существующих, расширяя их возможности за счет новых свойств.
<br>Например, рассмотрим наследование кубом свойств квадрата.
Для вычисления площади квадрата необходимо знать его сторону <b>a</b> и вычислить площадь <b>S&nbsp;=&nbsp;a&nbsp;&#8729;&nbsp;a</b>.
Объем куба <b>V&nbsp;=&nbsp;S&nbsp;&#8729;&nbsp;a</b>,&nbsp; то есть, куб унаследовал площадь квадрата и его сторону.
<p><li><b>Полиморфизм (Polymorphism)</b> - "многоформенность" - способность объекта 
отреагировать на некоторый запрос сообразно своему типу, даже если на стадии 
компиляции тип объекта, к которому направлен запрос, еще не известен.
<br>Это свойство позволяет одно и то же имя использовать для решения двух или 
более схожих, но технически разных задач, для задания общих для класса действий.
<br>Элементарным примером полиморфизма может служить <a href="../../sem_1/12/03.htm" target="window-1">перегрузка функций</a>.
</ol>
<p>Объектно-ориентированное программирование - это технология создания новых объектов 
(типов данных), которые наследуют определенные черты существующих (ранее 
созданных) объектов (типов данных). <br>Важное место в объектно-ориентированном 
программировании занимает структура программы. Здесь необходима большая работа на 
предварительных этапах с целью создания эффективных библиотек. <p>Использование 
подходов, принятых в объектно-ориентированном программировании, дает следующие 
преимущества:<ul>
<li>Предоставляется возможность создания более сложных программ при снижении 
трудоемкости программирования.
<li>Повышается надежность программ.
<li>Стиль написания программы повышает доступность ее восприятия и упрощает 
внесение возможных изменений (модификацию программы).
<li>Существенно упрощается процедура поиска ошибок.
<li>Сложные программы могут быть декомпозированы на изолированные подзадачи, 
что позволяет создавать большие системы коллективом одновременно работающих 
программистов.</ul>
<p> &nbsp; </p>
</td></tr>
</table>
<!-- -------End of Inside table------- -->
<table class=pages align=center border=0 cellpadding=0 cellspacing=0>
<tr colspan=5>
<td>&nbsp&nbsp<a href="../../../plan_2.htm" class=p>Календарно-тематический план</a>&nbsp&nbsp</td>
<td><a href="index.htm" class=p>&nbsp План лекции &nbsp</a></td>
<td><a href="01.htm" class=a>&nbsp 1 &nbsp</a></td>
<td><a href="02.htm" class=p>&nbsp 2 &nbsp</a></td>
<td><a href="03.htm" class=p>&nbsp 3 &nbsp</a></td>
<td><a href="04.htm" class=p>&nbsp 4 &nbsp</a></td>
<td><a href="05.htm" class=p>&nbsp 5 &nbsp</a></td>
<td><a href="06.htm" class=p>&nbsp 6 &nbsp</a></td>
<td><a href="07.htm" class=p>&nbsp 7 &nbsp</a></td>
</tr>
</table>
<a name=#end></a>
</body>
</html>