<html>
<head>
<title>ОП | Для конспекта | Лекция № 35</title>
<meta http-equiv=Content-Type content="text/html; charset=windows-1251">
<meta http-equiv="Content-Language" content="ru">
<LINK REL=STYLESHEET TYPE="text/css" HREF="../css/style.css" title="style">
</head>
<body bgcolor="#ffffff" text="000066">
<p><center><table width="100%">
<tr bgcolor="#f3f3f3" class="author"><td align=center valign=top>Для конспекта
</td></tr>
<tr><td>
<p>&nbsp;</p>
<h2>Структурированный тип данных </h2>
<ol>
<p><li>Структура - это одна или несколько переменных (возможно различных типов), которые для удобства работы с ними сгруппированы под одним именем. 
<p><li>Переменные внутри структуры называются ее элементами или членами структуры, или полями структуры. 
<p><li>Элементами структуры могут быть: переменные, массивы, указатели, структуры, и так далее.
<p><li>Объявление структурного типа - это не объявление экземпляров этого типа, при этом не выделяется память для фактических структур. 
<pre>
		struct point 
		{
			int x, y;
		};

	struct - ключевое слово,
	point - имя (тег) структуры, имя структурного типа,
	x, y   - список переменных (деклараций) - поля структуры.

</pre>
<p><li>Определив структурный тип, можно определять и описывать конкретные структуры, то есть структурированные объекты.
<ul type="disc">
<p><li><i>Первый способ.</i> Поставить список имен переменных сразу после определения структурного типа.
<pre>
		struct point 
		{
			int x, y;
		} pt1, pt2, pt3;
</pre>
<p>Определен структурный тип point и объявлены три структуры этого типа - pt1, pt2, pt3.
<p><li><i>Второй способ.</i> Поместить объявление переменных отдельно от определения структурного типа.
<pre>		<i>struct point</i> pt1, pt2, pt3;</pre>
<p><li><i>Третий способ.</i> Если структура определяется однократно, то можно не вводить именованный структурный тип, а 
непосредственно определять структуры одновременно с определением их компонентного состава.
<pre>		struct 
		{
			char n[7];
			int val;
		} xx, yy, ee[8], *ps;
</pre>
определяет
<ul>
<li>две структуры с именами <i>xx</i>, <i>yy</i>,
<li>массив структур с именем <i>ee</i>,
<li>указатель на структуру <i>ps</i>.
</ul>
</ul>
<p><li>Декларация структуры, не содержащей списка переменных, например, <i>struct {...} x, y, z;</i> не резервирует памяти: она просто описывает шаблон, или образец структуры.
<p><li>Доступ к отдельному члену структуры
<pre>
		имя_структуры.имя_элемента_структуры
</pre>
<p><b>.</b> - оператор доступа к члену структуры (точка) соединяет имя структуры и имя элемента структуры.
<p><li>Структуры могут быть вложены друг в друга.
<pre>
		struct rect 
		{
			struct point pt1;
			struct point pt2;
		};
</pre>
<p><li>Передавать функциям объекты можно тремя способами: 
<ul type="disc">
<li>передавать компоненты по отдельности,
<li>передавать всю структуру целиком,
<li>передавать указатель на структуру.
</ul>
</ol>
<p>&nbsp;</p>
</td></tr>
<tr bgcolor="#f3f3f3"><td align=center valign=top class="author">&copy;&nbsp;Ставропольский колледж связи, 2012
</td></tr><tr><td>
</table></center></p>
</body>
</html> 