<html>
<head>
<title>ОП | Для конспекта | Лекция № 11
</title>
<meta http-equiv=Content-Type content="text/html; charset=windows-1251">
<meta http-equiv="Content-Language" content="ru">
<LINK REL=STYLESHEET TYPE="text/css" HREF="../css/style.css" title="style">
</head>
<body bgcolor="#ffffff" text="000066">
<p><center><table width="100%">
<tr bgcolor="#f3f3f3" class="author"><td align=center valign=top>Для конспекта
</td></tr>
<tr><td>
<p>&nbsp;</p>
<h2>Функция: описание, определение, обращение </h2>
<ol>
<p><li>Функцией называется
<ul type="disc">
<li>выделенная последовательность инструкций, предназначенных для решения определенной задачи;
<li>независимый, замкнутый фрагмент кода, созданный для выполнения определенной задачи.
</ul>
<p><li>Каждая функция имеет структуру, аналогичную структуре функции main():
<ul type="disc">
<li>после имени функции ставится пара круглых скобок, точка с запятой в конце 
строки отсутствует, 
<li>инструкции, составляющие тело функции, заключаются в пару фигурных скобок, 
<li>в конце каждой инструкции ставится точка с запятой. 
</ul>
<p><li>Первый шаг в написании функции - это определить, зачем она вообще нужна и что будет делать.
<br>Пусть нам необходимо две функции для формирования выигрыша.
<br><i>Первая функция rez:</i> получает номер участника (целое число) и его фамилию (строка), генерирует случайное значение выигрыша (вещественное число), выводит полученное значение на экран и возвращает его в точку вызова функции.
<br><i>Вторая функция itog:</i> получает номер участника (целое число) и значение выигрыша (вещественное число), перемножает их, полученное значение (вещественное число) возвращает в точку вызова этой функции.
<p><li>Когда вы описываете функцию, то даете всем остальным программам (включая главный модуль main) информацию о том, каким образом должно осуществляться обращение к этой функции.
<ul type="disc">
<li>Классический стиль описания функции:
<ul>тип_результата имя_функции();</ul>
<li>Современный стиль описания функции:
<ul>тип_результата имя_функции(список параметров, если он есть);</ul>
<p>Для рассматриваемых функций<ul>float rez(int num, char *fio);<br>float itog(int num, float y);</ul>
</ul>
<p><li>Когда вы определяете функцию, вы присваиваете ей имя, по которому к ней будет осуществляться обращение, и указываете, какие конкретно действия она будет выполнять. 
<ul type="disc">
<li>Классический стиль определения функции
<ul>тип_результата имя_функции(имена_параметров)
<br>определение параметров;
<br>{
<br>&nbsp;&nbsp;&nbsp;&nbsp;локальные описания;
<br>&nbsp;&nbsp;&nbsp;&nbsp;операторы;
<br>}</ul>
<li>Современный стиль определения функции
<ul>тип_результата имя_функции (список параметров, если он есть)
<br>{
<br>&nbsp;&nbsp;&nbsp;&nbsp;декларации;
<br>&nbsp;&nbsp;&nbsp;&nbsp;инструкции;
<br>}</ul>
<p>Для рассматриваемых функций
<ul>
float rez(int num, char *fio)
<br>{
<br>&nbsp;&nbsp;&nbsp;&nbsp;randomize();
<br>&nbsp;&nbsp;&nbsp;&nbsp;float w = random(350) * 1.05;
<br>&nbsp;&nbsp;&nbsp;&nbsp;cout << num << '\t' << fio << '\t' << w << endl;
<br>&nbsp;&nbsp;&nbsp;&nbsp;return w;
<br>}
<p>float itog(int num, float y)
<br>{
<br>&nbsp;&nbsp;&nbsp;&nbsp;return(num * y);
<br>}
</ul>
</ul>
<p><li>Оператор return - опеpатоp возвpата в точку вызова
<ul>return (выpажение);</ul>
<p><li>Вызов функции имеет вид: 
<ul>имя_функции (список_фактических параметров);</ul>
<p>Для рассматриваемых функций со значениями фактических параметров int i; float z; char *str;<ul>rez(i, str);<br>itog(i, z);</ul>
<p><li>Полученная программа
<pre>
#include&lt;conio.h>
#include&lt;stdlib.h>
#include&lt;iostream.h>
#include&lt;iomanip.h>
// Описания функций
float rez(int num, char *fio);
float itog(int num, float y);
void main()
{
	// Определение фактических параметров
	int i; float z; char *str;
	str = new char[20];
	clrscr(); cout.precision(2);
	// Ввод значений фактических параметров
	cout << "int i = "; cin >> i;
	cout << "ФИО "; cin >> str;
	// Вызов функции
	z = rez(i, str);
	cout << i << '\t' << str << '\t' << itog(i, z) << endl;
	getch();
}
// Определение функций с формальными параметрами
float rez(int num, char *fio)
{
	randomize();
	float w = random(350) * 1.05;
	cout << num << '\t' << fio << '\t' << w << endl;
	return w;
}
float itog(int num, float y)
{
	return(num * y);
}

</pre>
</ol>


<p>&nbsp;</p>
</td></tr>
<tr bgcolor="#f3f3f3"><td align=center valign=top class="author">&copy;&nbsp;Ставропольский колледж связи, 2011
</td></tr><tr><td>
</table></center></p>
</body>
</html> 