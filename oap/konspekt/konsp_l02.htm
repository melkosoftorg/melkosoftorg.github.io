<html>
<head>
<title>ОП | Для конспекта | Лекция № 02
</title>
<meta http-equiv=Content-Type content="text/html; charset=windows-1251">
<meta http-equiv="Content-Language" content="ru">
<LINK REL=STYLESHEET TYPE="text/css" HREF="../css/style.css" title="style">
</head>
<body bgcolor="#ffffff" text="000066">
<p><center><table width="100%">
<tr bgcolor="#f3f3f3" class="author"><td align=center valign=top>Для конспекта
</td></tr>
<tr><td>
<p>&nbsp;</p>
<h2>Язык программирования C++ </h2>
<ol>
<p><li>Любая программа, написанная на языке C, состоит из одной или более "функций", являющихся основными модулями, из которых она собирается.
<p><li>Функцией называется ряд последовательных инструкций, говорящих компьютеру, как выполнить определенную задачу.
<p><li>Все программы на C должны начинаться с функции, называемой main().
<p><li>Библиотека - это отдельный файл, прилагающийся к компилятору и содержащий функции для решения распространенных задач.
<p><li>Открывающаяся фигурная скобка { помещается перед первой инструкцией, закрывающаяся фигурная скобка } следует за последней инструкцией.
<p><li>Скобки { и } называются ограничителями и служат для выделения части кода в единый блок.
<p><li>Тело функции - последовательность инструкций, составляющих функцию. 
<p><li>Тело функции представляет собой набор операторов: 
<ul type="disc">
<li>описания, 
<li>присваивания, 
<li>вызова функций, 
<li>управления, 
<li>пустой оператор, 
</ul>
<p>включающих в свой состав: 
<ul type="disc">
<li>ключевые слова, 
<li>данные, 
<li>операторы. 
</ul>
<p><li>Точка с запятой ; в языке C является разделителем, отмечает конец каждой инструкции и показывает компилятору, что данная инструкция завершена и дальше начинается следующая инструкция или заканчивается программа.
<p><li>Последовательность подготовки исполняемой программы:
<ol>
<li>подготовка текста программы в файле с расширением *.cpp
<li>формирование полного текста программы препроцессором, выполнив директивы препроцессора
<li>передача файла на компиляцию и устранение синтаксических ошибок, выявленных компилятором
<li>получение объектного файла с расширением *.obj
<li>компоновка и получение исполняемого модуля программы в файле с расширением *.exe (редактирование связей)
</ol>
<p><li>Трансляция - процесс перевода программы, написанной на языке программирования, в машинные коды. 
<p><li>Транслятор (англ. translator - переводчик) - это программа-переводчик. Она преобразует программу, написанную на одном из языков высокого уровня, в программу, состоящую из машинных команд. 
<p><li>Существует два различных подхода к трансляции: 
<ul type="disc">
<li>Интерпретация. Интерпретатор (англ. interpreter - истолкователь, устный переводчик), 
<br>Языки программирования интерпретирующего типа при исполнении программы за один проход переводят в машинные коды одну строку программы.
<li>Компиляция. Компилятор (англ. compiler - составитель, собиратель). 
<br>Языки программирования компилирующего типа, напротив, сначала переводят весь текст программы в машинные коды, а затем полученный файл может быть запущен на выполнение. 
</ul>
<p><li>Компиляция - многоступенчатый процесс, включающий следующие фазы: 
<ul type="disc">
<li>синтаксический анализ - проверка правильности конструкций, использованных при подготовке текста, 
<li>семантический анализ - выявление несоответствий типов и структур переменных, функций, процедур, 
<li>генерация объектного кода - файл *.obj. 
</ul>
<p><li>Объектный модуль - *.obj - текст программы на машинном языке, включающий машинные инструкции, словари, служебную информацию. 
<p><li>Правила хорошего стиля программирования
<ul type="disc">
<li>помещать функцию main() на отдельной строке, 
<li>помещать фигурные скобки на отдельных строках, 
<li>создавать в тексте программы отступы с помощью табуляции, 
<li>снабжать программу комментариями, которые можно помещать в любом месте программы. Компилятор и компоновщик игнорируют комментарии, их содержимое не включается в объектные и исполняемые файлы.
<br>Комментарий заключается в символы: 
<ul>
<p>/* многострочный комментарий в языке C и C++
<br>&nbsp;&nbsp;&nbsp;// однострочный комментарий для C++
<br>&nbsp;&nbsp;&nbsp;может включать в себя и однострочный комментарий
<br>*/
</ul>
<li>команды и имена функций писать маленькими буквами, 
<li>заглавные буквы употреблять для задания имен констант и макроопределений, 
<li>не употреблять ключевые слова (зарезервированные слова) языка C в качестве имен констант и переменных. 
</ul>
<p><li>Пример первой программы, написанной на языке C
<p><table align="center" width="94%" border=0>
<tr valign="top"><td>
<img src="../lec/sem_1/02/l06_00.gif" alt="Структура программы">
</td><td>
<pre>
// Заголовок - директивы препроцессора
#include&lt;stdio.h>
#include&lt;conio.h>
// Модуль - Функция Wind - построение окна с тенью
void Wind(int x1, int y1, int x2, int y2, int z1, int z2)
{
	// тень - нижнее окно цвета z1
	window(x1, y1, x2, y2);
	textbackground(z1); clrscr();
	// верхнее окно заданного цвета z2
	window(x1 - 2, y1 - 1, x2 - 1, y2 - 1);
	textbackground(z2); clrscr();
}
// Главный модуль
main()
{
	// операторы описания
	int i; float x;
	// операторы присваивания
	x = 1.5;
	/*	ключевые слова: int, float, for, if
		данные: i, x
	*/
	// операторы вызова функций
	textmode(3); window(1, 1, 80, 25);
	textbackground(7); clrscr();
	Wind(22, 3, 60, 6, 0, 2); textcolor(14);
	gotoxy(5, 2);
	cputs("Привет! Это моя первая программа!");
	Wind(12, 10, 70, 18, 0, 2); textcolor(15);
	// операторы управления
	for(i = 0; i < 5; i++)
	{
		gotoxy(25, 3 + i);
		cprintf("%d * %.1f = %.1f", i, x, i * x);
	}
	Wind(37, 21, 75, 23, 0, 3);
	if(i > 4)
		textcolor(11);
	gotoxy(5, 2);
	cputs("До встречи в следующих программах!");
	// пустой оператор
	;
        getch();
}
</pre>
</td></tr>
</table>
</ol>
<p>&nbsp;</p>
</td></tr>
<tr bgcolor="#f3f3f3"><td align=center valign=top class="author">&copy;&nbsp;Ставропольский колледж связи, 2011
</td></tr><tr><td>
</table></center></p>
</body>
</html> 