<html>
<head>
<title>ОП | Для конспекта | Лекция № 43</title>
<meta http-equiv=Content-Type content="text/html; charset=windows-1251">
<meta http-equiv="Content-Language" content="ru">
<LINK REL=STYLESHEET TYPE="text/css" HREF="../css/style.css" title="style">
</head>
<body bgcolor="#ffffff" text="000066">
<p><center><table width="100%">
<tr bgcolor="#f3f3f3" class="author"><td align=center valign=top>Для конспекта
</td></tr>
<tr><td>
<p>&nbsp;</p>
<h2>Компоненты класса</h2>
<ol>
<p><li>Статический компонент класса должен быть определен в классе как статический, то есть должен иметь атрибут static.
<p><li>Статические компоненты класса после инициализации можно использовать в программе еще до определения объектов данного класса.
<p><li>Статические элементы класса необходимо дополнительно описать и инициализировать вне его определения, вне класса, еще до определения объектов класса, но после определения самого класса.
<p><li>Инициализация статического компонента
<pre>
	тип имя_класса :: имя_компонента инициализатор;
</pre>
<p><li>Обращение к статическому компоненту через имя конкретного объекта:
<pre>
	имя_объекта.имя_компонента
	имя_объекта.имя_класса :: имя-компонента
</pre>
<p><li>Обращение к статическому компоненту через квалифицированное имя:
<pre>
	имя_класса :: имя_компонента
</pre>
<p><li>Статическая компонентная функция сохраняет все основные особенности обычных (нестатических) компонентных функций.
<p><li>Вызов статической компонентной функции, используя квалифицированное имя:
<pre>
	имя_класса :: имя_статической функции
</pre>
<p><li>Определение указателя на принадлежащие классу функции:
<pre>
	тип_возвращаемого_функцией_значения (имя_класса :: *имя_указателя_на_метод)
			(спецификация_параметров_функции);
</pre>
<p><li>Определение указателя на компонентные данные класса
<pre>
	тип_данных(имя_класса :: *имя_указателя);
</pre>
<p><li>Определение указателя и его явная инициализация, с использованием адреса компонента:
<pre>
	&имя_класса :: имя_компонента
</pre>
<p><li>Разыменование указателей на компоненты класса
<pre>
	имя_объекта.*указатель_на_компонент_данных
	имя_объекта.*укаэатель_на_метод(параметры)
</pre>
<p><li>Доступ к компонентам конкретных объектов через указатель
<pre>
	указатель_на_объект_класса -> *указатель_на_компонент_данных
	указатель_на_объект_класса -> *указатель_на_метод(параметры)
</pre>
<p><li>Указатель this имя_класса * const this = адрес_объекта;
<ul type="disc">
<li>имеет фиксированное имя
<li>незаметно для программиста определен в каждой функции класса
</ul>
<p><li>Обращение к компонентным данным объекта из операторов, выполняемых вне определения классов, с помощью уточненного имени по известному имени объекта:
<pre>
	имя_объекта.имя_элемента
</pre>
<p><li>Обращение к компонентным данным объекта из операторов, выполняемых вне определения классов, по заданному указателю на объект:
<pre>
	укаэатель_на_объект -> имя_элемента
</pre>
</ol>
<p>&nbsp;</p>
</td></tr>
<tr bgcolor="#f3f3f3"><td align=center valign=top class="author">&copy;&nbsp;Ставропольский колледж связи, 2012
</td></tr><tr><td>
</table></center></p>
</body>
</html> 